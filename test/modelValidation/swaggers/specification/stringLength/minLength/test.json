{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product’s APIs.",
    "version": "2017-03-01"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{apimBaseUrl}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "name": "apimBaseUrl",
        "description": "The management endpoint of the API Management service, for example https://myapimservice.management.azure-api.net.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "paths": {
    "/subscriptions/{sid}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscription_CreateOrUpdate",
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "x-ms-examples": {
          "ApiManagementPutSubscriptions": {
            "$ref": "./examples/ApiManagementPutSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "name": "notify",
            "in": "query",
            "required": false,
            "description": "Notify the subscriber of the subscription state change to Submitted or Active state.",
            "type": "string",
            "enum": [
              "False",
              "True"
            ],
            "default": "False"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully subscribed to the product.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            }
          },
          "200": {
            "description": "The user already subscribed to the product.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "SubscriptionContract": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the Subscription."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionContractProperties"
        }
      ],
      "description": "Subscription details."
    },
    "SubscriptionContractProperties": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier."
        },
        "productId": {
          "type": "string",
          "description": "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier."
        },
        "name": {
          "type": "string",
          "description": "The name of the subscription, or null if the subscription has no name.",
          "minLength": 0,
          "maxLength": 100
        },
        "state": {
          "type": "string",
          "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "notificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "primaryKey": {
          "type": "string",
          "description": "Subscription primary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Subscription secondary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "stateComment": {
          "type": "string",
          "description": "Optional subscription comment added by an administrator."
        }
      },
      "required": [
        "userId",
        "productId",
        "state",
        "primaryKey",
        "secondaryKey"
      ],
      "description": "Subscription details."
    },
    "SubscriptionCreateParameters": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "User (user id path) for whom subscription is being created in form /users/{uid}"
        },
        "productId": {
          "type": "string",
          "description": "Product (product id path) for which subscription is being created in form /products/{productId}"
        },
        "name": {
          "type": "string",
          "description": "Subscription name.",
          "minLength": 0,
          "maxLength": 100
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "state": {
          "type": "string",
          "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        }
      },
      "required": [
        "userId",
        "productId"
      ],
      "description": "Parameters supplied to the Create subscription operation."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "SubscriptionEntityIdParameter": {
      "name": "sid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
      "minLength": 11,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    }
  }
}
