// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiScenarioLoader load valid cross-RP scenario - compute 1`] = `
Object {
  "_filePath": "Microsoft.Compute/stable/2021-11-01/scenarios/quickstart.yaml",
  "cleanUpSteps": Array [],
  "prepareSteps": Array [
    Object {
      "description": undefined,
      "isPrepareStep": true,
      "operation": Object {},
      "operationId": "VirtualNetworks_CreateOrUpdate",
      "outputVariables": Object {
        "subnetId": Object {
          "fromResponse": "/properties/subnets/0/id",
          "type": "string",
        },
      },
      "parameters": Object {
        "api-version": "2021-05-01",
        "parameters": Object {
          "location": "$(location)",
          "properties": Object {
            "addressSpace": Object {
              "addressPrefixes": Array [
                "10.0.0.0/16",
              ],
            },
            "subnets": Array [
              Object {
                "name": "$(vmName)-Subnet",
                "properties": Object {
                  "addressPrefix": "10.0.0.0/24",
                },
              },
            ],
          },
        },
        "virtualNetworkName": "$(vmName)-VNET",
      },
      "requiredVariables": Array [],
      "responses": Object {},
      "secretVariables": Array [],
      "step": "createVirtualNetwork",
      "type": "restCall",
      "variables": Object {},
    },
    Object {
      "description": undefined,
      "isPrepareStep": true,
      "operation": Object {},
      "operationId": "NetworkSecurityGroups_CreateOrUpdate",
      "outputVariables": Object {
        "networkSecurityGroupId": Object {
          "fromResponse": "/id",
          "type": "string",
        },
      },
      "parameters": Object {
        "api-version": "2021-05-01",
        "networkSecurityGroupName": "$(vmName)-NSG",
        "parameters": Object {
          "location": "$(location)",
          "properties": Object {
            "securityRules": Array [
              Object {
                "name": "rdp",
                "properties": Object {
                  "access": "Allow",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "3389",
                  "direction": "Inbound",
                  "priority": 1000,
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*",
                },
              },
            ],
          },
        },
      },
      "requiredVariables": Array [],
      "responses": Object {},
      "secretVariables": Array [],
      "step": "createNSG",
      "type": "restCall",
      "variables": Object {},
    },
    Object {
      "description": undefined,
      "isPrepareStep": true,
      "operation": Object {},
      "operationId": "PublicIPAddresses_CreateOrUpdate",
      "outputVariables": Object {
        "publicIPAddressId": Object {
          "fromResponse": "/id",
          "type": "string",
        },
      },
      "parameters": Object {
        "api-version": "2021-05-01",
        "parameters": Object {
          "location": "$(location)",
          "properties": Object {
            "publicIPAllocationMethod": "Static",
          },
          "sku": Object {
            "name": "Standard",
          },
        },
        "publicIpAddressName": "$(vmName)-PublicIP",
      },
      "requiredVariables": Array [],
      "responses": Object {},
      "secretVariables": Array [],
      "step": "createPublicIP",
      "type": "restCall",
      "variables": Object {},
    },
    Object {
      "description": undefined,
      "isPrepareStep": true,
      "operation": Object {},
      "operationId": "NetworkInterfaces_CreateOrUpdate",
      "outputVariables": Object {
        "vmNicId": Object {
          "fromResponse": "/id",
          "type": "string",
        },
      },
      "parameters": Object {
        "api-version": "2021-05-01",
        "networkInterfaceName": "$(vmName)-VMNic",
        "parameters": Object {
          "location": "$(location)",
          "properties": Object {
            "ipConfigurations": Array [
              Object {
                "name": "ipconfig-$(vmName)",
                "properties": Object {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIpAddress": Object {
                    "id": "$(publicIPAddressId)",
                  },
                  "subnet": Object {
                    "id": "$(subnetId)",
                  },
                },
              },
            ],
            "networkSecurityGroup": Object {
              "id": "$(networkSecurityGroupId)",
            },
          },
        },
      },
      "requiredVariables": Array [],
      "responses": Object {},
      "secretVariables": Array [],
      "step": "createNIC",
      "type": "restCall",
      "variables": Object {},
    },
  ],
  "requiredVariables": Array [
    "adminPassword",
    "subscriptionId",
    "location",
  ],
  "scenarios": Array [
    Object {
      "_resolvedSteps": Array [
        Object {
          "description": undefined,
          "isPrepareStep": true,
          "operation": Object {},
          "operationId": "VirtualNetworks_CreateOrUpdate",
          "outputVariables": Object {
            "subnetId": Object {
              "fromResponse": "/properties/subnets/0/id",
              "type": "string",
            },
          },
          "parameters": Object {
            "api-version": "2021-05-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "addressSpace": Object {
                  "addressPrefixes": Array [
                    "10.0.0.0/16",
                  ],
                },
                "subnets": Array [
                  Object {
                    "name": "$(vmName)-Subnet",
                    "properties": Object {
                      "addressPrefix": "10.0.0.0/24",
                    },
                  },
                ],
              },
            },
            "virtualNetworkName": "$(vmName)-VNET",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createVirtualNetwork",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "isPrepareStep": true,
          "operation": Object {},
          "operationId": "NetworkSecurityGroups_CreateOrUpdate",
          "outputVariables": Object {
            "networkSecurityGroupId": Object {
              "fromResponse": "/id",
              "type": "string",
            },
          },
          "parameters": Object {
            "api-version": "2021-05-01",
            "networkSecurityGroupName": "$(vmName)-NSG",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "securityRules": Array [
                  Object {
                    "name": "rdp",
                    "properties": Object {
                      "access": "Allow",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "3389",
                      "direction": "Inbound",
                      "priority": 1000,
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                    },
                  },
                ],
              },
            },
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createNSG",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "isPrepareStep": true,
          "operation": Object {},
          "operationId": "PublicIPAddresses_CreateOrUpdate",
          "outputVariables": Object {
            "publicIPAddressId": Object {
              "fromResponse": "/id",
              "type": "string",
            },
          },
          "parameters": Object {
            "api-version": "2021-05-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "publicIPAllocationMethod": "Static",
              },
              "sku": Object {
                "name": "Standard",
              },
            },
            "publicIpAddressName": "$(vmName)-PublicIP",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createPublicIP",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "isPrepareStep": true,
          "operation": Object {},
          "operationId": "NetworkInterfaces_CreateOrUpdate",
          "outputVariables": Object {
            "vmNicId": Object {
              "fromResponse": "/id",
              "type": "string",
            },
          },
          "parameters": Object {
            "api-version": "2021-05-01",
            "networkInterfaceName": "$(vmName)-VMNic",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "ipConfigurations": Array [
                  Object {
                    "name": "ipconfig-$(vmName)",
                    "properties": Object {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": Object {
                        "id": "$(publicIPAddressId)",
                      },
                      "subnet": Object {
                        "id": "$(subnetId)",
                      },
                    },
                  },
                ],
                "networkSecurityGroup": Object {
                  "id": "$(networkSecurityGroupId)",
                },
              },
            },
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createNIC",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "additionalCapabilities": Object {},
                "hardwareProfile": Object {
                  "vmSize": "Standard_A2_v2",
                },
                "networkProfile": Object {
                  "networkInterfaces": Array [
                    Object {
                      "id": "$(vmNicId)",
                    },
                  ],
                },
                "osProfile": Object {
                  "adminPassword": "$(adminPassword)",
                  "adminUsername": "azureuser",
                  "computerName": "$(vmName)",
                },
                "storageProfile": Object {
                  "imageReference": Object {
                    "offer": "WindowsServer",
                    "publisher": "MicrosoftWindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest",
                  },
                  "osDisk": Object {
                    "caching": "ReadWrite",
                    "createOption": "fromImage",
                  },
                },
              },
            },
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createVM",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "getVM",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "_scenarioDef": [Circular],
      "description": "",
      "requiredVariables": Array [
        "adminPassword",
        "subscriptionId",
        "location",
      ],
      "scenario": "VirtualMachineScenario",
      "secretVariables": Array [],
      "shareScope": true,
      "steps": Array [
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "additionalCapabilities": Object {},
                "hardwareProfile": Object {
                  "vmSize": "Standard_A2_v2",
                },
                "networkProfile": Object {
                  "networkInterfaces": Array [
                    Object {
                      "id": "$(vmNicId)",
                    },
                  ],
                },
                "osProfile": Object {
                  "adminPassword": "$(adminPassword)",
                  "adminUsername": "azureuser",
                  "computerName": "$(vmName)",
                },
                "storageProfile": Object {
                  "imageReference": Object {
                    "offer": "WindowsServer",
                    "publisher": "MicrosoftWindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest",
                  },
                  "osDisk": Object {
                    "caching": "ReadWrite",
                    "createOption": "fromImage",
                  },
                },
              },
            },
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createVM",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "getVM",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "variables": Object {},
    },
  ],
  "scope": "ResourceGroup",
  "secretVariables": Array [
    "adminPassword",
  ],
  "variables": Object {
    "networkSecurityGroupId": Object {
      "type": "string",
    },
    "publicIPAddressId": Object {
      "type": "string",
    },
    "subnetId": Object {
      "type": "string",
    },
    "vmName": Object {
      "type": "string",
      "value": "test",
    },
    "vmNicId": Object {
      "type": "string",
    },
  },
}
`;

exports[`ApiScenarioLoader load valid example based scenario - appplatform 1`] = `
Object {
  "_filePath": "Microsoft.AppPlatform/preview/2020-11-01-preview/scenarios/Spring.yaml",
  "cleanUpSteps": Array [
    Object {
      "armTemplate": "",
      "armTemplatePayload": Object {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": Object {
          "userAssignedIdentity": Object {
            "defaultValue": "$(userAssignedIdentity)",
            "type": "string",
          },
          "utcValue": Object {
            "defaultValue": "[utcNow()]",
            "type": "string",
          },
        },
        "resources": Array [
          Object {
            "apiVersion": "2020-10-01",
            "identity": Object {
              "type": "UserAssigned",
              "userAssignedIdentities": Object {
                "[parameters('userAssignedIdentity')]": Object {},
              },
            },
            "kind": "AzurePowerShell",
            "location": "[resourceGroup().location]",
            "name": "delete_cname_record",
            "properties": Object {
              "arguments": undefined,
              "azPowerShellVersion": "6.2",
              "cleanupPreference": "OnSuccess",
              "environmentVariables": Array [
                Object {
                  "name": "resourceGroupName",
                  "value": "$(dnsResourceGroup)",
                },
                Object {
                  "name": "dnsCname",
                  "value": "$(dnsCname)",
                },
                Object {
                  "name": "dnsZoneName",
                  "value": "$(customDomainName)",
                },
              ],
              "forceUpdateTag": "[parameters('utcValue')]",
              "retentionInterval": "P1D",
              "scriptContent": "$resourceGroupName = \${Env:resourceGroupName}
$dnsCNAME = \${Env:dnsCname}
$dnsZoneName = \${Env:dnsZoneName}

Connect-AzAccount -Identity

$RecordSet = Get-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ResourceGroupName $resourceGroupName -ZoneName $dnsZoneName
$Result = Remove-AzDnsRecordSet -RecordSet $RecordSet
$Result",
              "timeout": "PT1H",
            },
            "type": "Microsoft.Resources/deploymentScripts",
          },
        ],
      },
      "isCleanUpStep": true,
      "outputVariables": Object {},
      "requiredVariables": Array [],
      "secretVariables": Array [],
      "step": "delete_cname_record",
      "type": "armTemplateDeployment",
      "variables": Object {
        "resourceGroupName": Object {
          "type": "string",
          "value": "$(dnsResourceGroup)",
        },
        "subscriptionId": Object {
          "type": "string",
          "value": "$(dnsSubscriptionId)",
        },
      },
    },
  ],
  "prepareSteps": Array [
    Object {
      "armTemplate": "templates/generate_service_name.json",
      "armTemplatePayload": Object {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "outputs": Object {
          "serviceName": Object {
            "type": "string",
            "value": "[substring(variables('serviceNameLong'), 0, 12)]",
          },
        },
        "parameters": Object {
          "serviceNamePrefix": Object {
            "defaultValue": "asc-",
            "type": "string",
          },
        },
        "resources": Array [],
        "variables": Object {
          "serviceNameLong": "[concat(parameters('serviceNamePrefix'), uniqueString(resourceGroup().id))]",
        },
      },
      "isPrepareStep": true,
      "outputVariables": Object {},
      "requiredVariables": Array [],
      "secretVariables": Array [],
      "step": "Generate_Unique_ServiceName",
      "type": "armTemplateDeployment",
      "variables": Object {},
    },
    Object {
      "armTemplate": "templates/create_application_insights_instance.json",
      "armTemplatePayload": Object {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "outputs": Object {
          "insightsInstrumentationKey": Object {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2014-04-01').InstrumentationKey]",
          },
        },
        "parameters": Object {
          "name": Object {
            "defaultValue": "asc-api-ai-instance",
            "metadata": Object {
              "description": "Name of Application Insights resource.",
            },
            "type": "string",
          },
        },
        "resources": Array [
          Object {
            "apiVersion": "2014-04-01",
            "location": "eastus",
            "name": "[parameters('name')]",
            "properties": Object {
              "ApplicationId": "[parameters('name')]",
              "Application_Type": "web",
              "Flow_Type": "Redfield",
              "Request_Source": "CustomDeployment",
            },
            "tags": Object {},
            "type": "microsoft.insights/components",
          },
        ],
      },
      "isPrepareStep": true,
      "outputVariables": Object {},
      "requiredVariables": Array [],
      "secretVariables": Array [],
      "step": "Create_Application_Insight_Instance",
      "type": "armTemplateDeployment",
      "variables": Object {},
    },
    Object {
      "armTemplate": "",
      "armTemplatePayload": Object {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": Object {
          "userAssignedIdentity": Object {
            "defaultValue": "$(userAssignedIdentity)",
            "type": "string",
          },
          "utcValue": Object {
            "defaultValue": "[utcNow()]",
            "type": "string",
          },
        },
        "resources": Array [
          Object {
            "apiVersion": "2020-10-01",
            "identity": Object {
              "type": "UserAssigned",
              "userAssignedIdentities": Object {
                "[parameters('userAssignedIdentity')]": Object {},
              },
            },
            "kind": "AzurePowerShell",
            "location": "[resourceGroup().location]",
            "name": "Add_Dns_Cname_Record",
            "properties": Object {
              "arguments": undefined,
              "azPowerShellVersion": "6.2",
              "cleanupPreference": "OnSuccess",
              "environmentVariables": Array [
                Object {
                  "name": "resourceGroupName",
                  "value": "$(dnsResourceGroup)",
                },
                Object {
                  "name": "dnsZoneName",
                  "value": "$(customDomainName)",
                },
                Object {
                  "name": "dnsCname",
                  "value": "$(dnsCname)",
                },
                Object {
                  "name": "dnsCnameAlias",
                  "value": "$(serviceName)$(ascDomainName)",
                },
              ],
              "forceUpdateTag": "[parameters('utcValue')]",
              "retentionInterval": "P1D",
              "scriptContent": "# Copyright (c) 2021 Microsoft Corporation
# 
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT
$resourceGroupName = \${Env:resourceGroupName}
$dnsCname = \${Env:dnsCname}
$dnsZoneName = \${Env:dnsZoneName}
$dnsCnameAlias = \${Env:dnsCnameAlias}
Connect-AzAccount -Identity
New-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ZoneName $dnsZoneName -ResourceGroupName $resourceGroupName -Ttl 3600 -DnsRecords (New-AzDnsRecordConfig -Cname $dnsCnameAlias) -Overwrite
$RecordSet = Get-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ResourceGroupName $resourceGroupName -ZoneName $dnsZoneName
$RecordSet",
              "timeout": "PT1H",
            },
            "type": "Microsoft.Resources/deploymentScripts",
          },
        ],
      },
      "isPrepareStep": true,
      "outputVariables": Object {},
      "requiredVariables": Array [],
      "secretVariables": Array [],
      "step": "Add_Dns_Cname_Record",
      "type": "armTemplateDeployment",
      "variables": Object {
        "resourceGroupName": Object {
          "type": "string",
          "value": "$(dnsResourceGroup)",
        },
        "subscriptionId": Object {
          "type": "string",
          "value": "$(dnsSubscriptionId)",
        },
      },
    },
  ],
  "requiredVariables": Array [
    "customDomainName",
    "mysqlKey",
    "dnsSubscriptionId",
    "dnsResourceGroup",
    "blobUrl",
    "userAssignedIdentity",
    "subscriptionId",
    "location",
  ],
  "scenarios": Array [
    Object {
      "_resolvedSteps": Array [
        Object {
          "armTemplate": "templates/generate_service_name.json",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": Object {
              "serviceName": Object {
                "type": "string",
                "value": "[substring(variables('serviceNameLong'), 0, 12)]",
              },
            },
            "parameters": Object {
              "serviceNamePrefix": Object {
                "defaultValue": "asc-",
                "type": "string",
              },
            },
            "resources": Array [],
            "variables": Object {
              "serviceNameLong": "[concat(parameters('serviceNamePrefix'), uniqueString(resourceGroup().id))]",
            },
          },
          "isPrepareStep": true,
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Generate_Unique_ServiceName",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "armTemplate": "templates/create_application_insights_instance.json",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": Object {
              "insightsInstrumentationKey": Object {
                "type": "string",
                "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2014-04-01').InstrumentationKey]",
              },
            },
            "parameters": Object {
              "name": Object {
                "defaultValue": "asc-api-ai-instance",
                "metadata": Object {
                  "description": "Name of Application Insights resource.",
                },
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2014-04-01",
                "location": "eastus",
                "name": "[parameters('name')]",
                "properties": Object {
                  "ApplicationId": "[parameters('name')]",
                  "Application_Type": "web",
                  "Flow_Type": "Redfield",
                  "Request_Source": "CustomDeployment",
                },
                "tags": Object {},
                "type": "microsoft.insights/components",
              },
            ],
          },
          "isPrepareStep": true,
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Create_Application_Insight_Instance",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "armTemplate": "",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": Object {
              "userAssignedIdentity": Object {
                "defaultValue": "$(userAssignedIdentity)",
                "type": "string",
              },
              "utcValue": Object {
                "defaultValue": "[utcNow()]",
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2020-10-01",
                "identity": Object {
                  "type": "UserAssigned",
                  "userAssignedIdentities": Object {
                    "[parameters('userAssignedIdentity')]": Object {},
                  },
                },
                "kind": "AzurePowerShell",
                "location": "[resourceGroup().location]",
                "name": "Add_Dns_Cname_Record",
                "properties": Object {
                  "arguments": undefined,
                  "azPowerShellVersion": "6.2",
                  "cleanupPreference": "OnSuccess",
                  "environmentVariables": Array [
                    Object {
                      "name": "resourceGroupName",
                      "value": "$(dnsResourceGroup)",
                    },
                    Object {
                      "name": "dnsZoneName",
                      "value": "$(customDomainName)",
                    },
                    Object {
                      "name": "dnsCname",
                      "value": "$(dnsCname)",
                    },
                    Object {
                      "name": "dnsCnameAlias",
                      "value": "$(serviceName)$(ascDomainName)",
                    },
                  ],
                  "forceUpdateTag": "[parameters('utcValue')]",
                  "retentionInterval": "P1D",
                  "scriptContent": "# Copyright (c) 2021 Microsoft Corporation
# 
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT
$resourceGroupName = \${Env:resourceGroupName}
$dnsCname = \${Env:dnsCname}
$dnsZoneName = \${Env:dnsZoneName}
$dnsCnameAlias = \${Env:dnsCnameAlias}
Connect-AzAccount -Identity
New-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ZoneName $dnsZoneName -ResourceGroupName $resourceGroupName -Ttl 3600 -DnsRecords (New-AzDnsRecordConfig -Cname $dnsCnameAlias) -Overwrite
$RecordSet = Get-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ResourceGroupName $resourceGroupName -ZoneName $dnsZoneName
$RecordSet",
                  "timeout": "PT1H",
                },
                "type": "Microsoft.Resources/deploymentScripts",
              },
            ],
          },
          "isPrepareStep": true,
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Add_Dns_Cname_Record",
          "type": "armTemplateDeployment",
          "variables": Object {
            "resourceGroupName": Object {
              "type": "string",
              "value": "$(dnsResourceGroup)",
            },
            "subscriptionId": Object {
              "type": "string",
              "value": "$(dnsSubscriptionId)",
            },
          },
        },
        Object {
          "description": "Services_CheckNameAvailability",
          "exampleFile": "../examples/Services_CheckNameAvailability.json",
          "operation": Object {},
          "operationId": "Services_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "availabilityParameters": Object {
              "name": "$(serviceName)",
              "type": "Microsoft.AppPlatform/Spring",
            },
            "location": "$(location)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "message": "The name is already used.",
                "nameAvailable": false,
                "reason": "AlreadyExists",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_CheckNameAvailability",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_CreateOrUpdate",
          "exampleFile": "../examples/Services_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Services_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resource": Object {
              "location": "eastus",
              "properties": Object {},
              "sku": Object {
                "name": "S0",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Creating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Updating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_Get",
          "exampleFile": "../examples/Services_Get.json",
          "operation": Object {},
          "operationId": "Services_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_Update",
          "exampleFile": "../examples/Services_Update.json",
          "operation": Object {},
          "operationId": "Services_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resource": Object {
              "location": "eastus",
              "properties": Object {},
              "sku": Object {
                "name": "S0",
                "tier": "Standard",
              },
              "tags": Object {
                "created-by": "api-test",
                "hello": "world",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "created-by": "api-test",
                  "hello": "world",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Updating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "created-by": "api-test",
                  "hello": "world",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_DisableTestEndpoint",
          "exampleFile": "../examples/Services_DisableTestEndpoint.json",
          "operation": Object {},
          "operationId": "Services_DisableTestEndpoint",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
          },
          "secretVariables": Array [],
          "step": "Services_DisableTestEndpoint",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_EnableTestEndpoint",
          "exampleFile": "../examples/Services_EnableTestEndpoint.json",
          "operation": Object {},
          "operationId": "Services_EnableTestEndpoint",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_EnableTestEndpoint",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_RegenerateTestKey",
          "exampleFile": "../examples/Services_RegenerateTestKey.json",
          "operation": Object {},
          "operationId": "Services_RegenerateTestKey",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "regenerateTestKeyRequest": Object {
              "keyType": "Primary",
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_RegenerateTestKey",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_ListTestKeys",
          "exampleFile": "../examples/Services_ListTestKeys.json",
          "operation": Object {},
          "operationId": "Services_ListTestKeys",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_ListTestKeys",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Certificates_CreateOrUpdate",
          "exampleFile": "../examples/Certificates_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Certificates_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "certificateResource": Object {
              "properties": Object {
                "keyVaultCertName": "pfx-cert",
                "vaultUri": "https://integration-test-prod.vault.azure.net/",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/$(certificateName)",
                "name": "$(certificateName)",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycertificate",
                "name": "mycertificate",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycertificate",
                "name": "mycertificate",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Certificates_Get",
          "exampleFile": "../examples/Certificates_Get.json",
          "operation": Object {},
          "operationId": "Certificates_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/$(certificateName)",
                "name": "$(certificateName)",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "certVersion": "08a219d06d874795a96db47e06fbb01e",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "mycert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://myvault.vault.azure.net",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_Get",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Certificates_List",
          "exampleFile": "../examples/Certificates_List.json",
          "operation": Object {},
          "operationId": "Certificates_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates?$page=2",
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/mycertificate",
                    "name": "mycertificate",
                    "properties": Object {
                      "activateDate": "2019-02-22T07:40:42Z",
                      "certVersion": "08a219d06d874795a96db47e06fbb01e",
                      "dnsNames": Array [
                        "mydomain.com",
                        "mydomain.net",
                        "mydomain.io",
                      ],
                      "expirationDate": "2019-02-21T07:40:42Z",
                      "issuedDate": "2019-02-20T07:40:42Z",
                      "issuer": "mydomain.com",
                      "keyVaultCertName": "mycert",
                      "subjectName": "mysubjectname",
                      "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                      "vaultUri": "https://myvault.vault.azure.net",
                    },
                    "type": "Microsoft.AppPlatform/Spring/certificates",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_Validate",
          "exampleFile": "../examples/ConfigServers_Validate.json",
          "operation": Object {},
          "operationId": "ConfigServers_Validate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerSettings": Object {
              "gitProperty": Object {
                "label": "master",
                "searchPaths": Array [
                  "/",
                ],
                "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "isValid": true,
              },
            },
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_Validate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_UpdatePut",
          "exampleFile": "../examples/ConfigServers_UpdatePut.json",
          "operation": Object {},
          "operationId": "ConfigServers_UpdatePut",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerResource": Object {
              "properties": Object {
                "configServer": Object {
                  "gitProperty": Object {
                    "label": "master",
                    "searchPaths": Array [
                      "/",
                    ],
                    "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                  },
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                    },
                  },
                  "provisioningState": "Updating",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_UpdatePut",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_UpdatePatch",
          "exampleFile": "../examples/ConfigServers_UpdatePatch.json",
          "operation": Object {},
          "operationId": "ConfigServers_UpdatePatch",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerResource": Object {
              "properties": Object {
                "configServer": Object {
                  "gitProperty": Object {
                    "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                  },
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                    },
                  },
                  "provisioningState": "Updating",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_UpdatePatch",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_Get",
          "exampleFile": "../examples/ConfigServers_Get.json",
          "operation": Object {},
          "operationId": "ConfigServers_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/fake-user/fake-repository.git",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_UpdatePut",
          "exampleFile": "../examples/MonitoringSettings_UpdatePut.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_UpdatePut",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "monitoringSettingResource": Object {
              "properties": Object {
                "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                "appInsightsSamplingRate": 50,
                "traceEnabled": true,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                  "appInsightsSamplingRate": 50,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                  "appInsightsSamplingRate": 50,
                  "provisioningState": "Updating",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_UpdatePut",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_Get",
          "exampleFile": "../examples/MonitoringSettings_Get.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(subscriptionId)",
                  "appInsightsSamplingRate": 10,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_UpdatePatch",
          "exampleFile": "../examples/MonitoringSettings_UpdatePatch.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_UpdatePatch",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "monitoringSettingResource": Object {
              "properties": Object {
                "appInsightsInstrumentationKey": "00000000-0000-0000-0000-000000000000",
                "appInsightsSamplingRate": 100,
                "traceEnabled": true,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(subscriptionId)",
                  "appInsightsSamplingRate": 100,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "00000000-0000-0000-0000-000000000000",
                  "appInsightsSamplingRate": 100,
                  "provisioningState": "Updating",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_UpdatePatch",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_CreateOrUpdate",
          "exampleFile": "../examples/Apps_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Apps_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": null,
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "mydeployment1",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "public": false,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Succeeded",
                  "public": false,
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Creating",
                  "public": false,
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Updating",
                  "public": false,
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Create",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_Get",
          "exampleFile": "../examples/Apps_Get.json",
          "operation": Object {},
          "operationId": "Apps_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_CreateOrUpdate",
          "exampleFile": "../examples/Deployments_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Deployments_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "deploymentResource": Object {
              "properties": Object {
                "deploymentSettings": Object {
                  "cpu": 1,
                  "environmentVariables": Object {
                    "env": "test",
                  },
                  "jvmOptions": "-Xms1G -Xmx3G",
                  "memoryInGB": 3,
                  "runtimeVersion": "Java_8",
                },
                "instances": null,
                "source": Object {
                  "artifactSelector": "sub-module-1",
                  "relativePath": "<default>",
                  "type": "Jar",
                  "version": "1.0",
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "S0",
                "tier": "Standard",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Creating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Updating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_CreateOrUpdate_Default",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "default",
            },
          },
        },
        Object {
          "description": "Deployments_Get",
          "exampleFile": "../examples/Deployments_Get.json",
          "operation": Object {},
          "operationId": "Deployments_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                    "type": "Source",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Get",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "default",
            },
          },
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "default",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/mypersistentdisk",
                  "sizeInGB": 2,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/mytemporarydisk",
                  "sizeInGB": 2,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "default",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "default",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update_ActiveDeployment",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "mydeployment1",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/data",
                  "sizeInGB": 10,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/tmpdisk",
                  "sizeInGB": 3,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/data",
                    "sizeInGB": 10,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/tmpdisk",
                    "sizeInGB": 3,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/data",
                    "sizeInGB": 10,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/tmpdisk",
                    "sizeInGB": 3,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update_Disk",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_List",
          "exampleFile": "../examples/Apps_List.json",
          "operation": Object {},
          "operationId": "Apps_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/myapp",
                    "identity": Object {
                      "principalId": "principalid",
                      "tenantId": "tenantid",
                      "type": "SystemAssigned",
                    },
                    "location": "eastus",
                    "name": "myapp",
                    "properties": Object {
                      "activeDeploymentName": "mydeployment1",
                      "enableEndToEndTLS": false,
                      "fqdn": "myapp.mydomain.com",
                      "httpsOnly": false,
                      "persistentDisk": Object {
                        "mountPath": "/mypersistentdisk",
                        "sizeInGB": 2,
                        "usedInGB": 1,
                      },
                      "provisioningState": "Succeeded",
                      "public": true,
                      "temporaryDisk": Object {
                        "mountPath": "/mytemporarydisk",
                        "sizeInGB": 2,
                      },
                      "url": "myapp.$(serviceName).azuremicroservices.io",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Bindings_CreateOrUpdate",
          "exampleFile": "../examples/Bindings_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Bindings_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "bindingResource": Object {
              "properties": Object {
                "bindingParameters": Object {
                  "databaseName": "mysqldb",
                  "username": "test",
                },
                "createdAt": null,
                "generatedProperties": null,
                "key": "$(mysqlKey)",
                "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                "updatedAt": null,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Create",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_Update",
          "exampleFile": "../examples/Bindings_Update.json",
          "operation": Object {},
          "operationId": "Bindings_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "bindingResource": Object {
              "properties": Object {
                "bindingParameters": Object {
                  "databaseName": "mysqldb2",
                  "username": "test2",
                },
                "createdAt": null,
                "generatedProperties": null,
                "key": "$(mysqlKey)",
                "updatedAt": null,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb2",
                    "username": "test2",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb2",
                    "username": "test2",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Update",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_Get",
          "exampleFile": "../examples/Bindings_Get.json",
          "operation": Object {},
          "operationId": "Bindings_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "apiType": "SQL",
                    "databaseName": "db1",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Get",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_List",
          "exampleFile": "../examples/Bindings_List.json",
          "operation": Object {},
          "operationId": "Bindings_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/mybinding",
                    "name": "mybinding",
                    "properties": Object {
                      "bindingParameters": Object {
                        "apiType": "SQL",
                        "databaseName": "db1",
                      },
                      "createdAt": "2019-01-01T12:34:56.000Z",
                      "generatedProperties": "<connection-string>",
                      "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                      "resourceName": "my-cosmosdb-1",
                      "resourceType": "Microsoft.DocumentDB",
                      "updatedAt": "2019-01-01T12:34:56.000Z",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/bindings",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Bindings_Delete",
          "exampleFile": "../examples/Bindings_Delete.json",
          "operation": Object {},
          "operationId": "Bindings_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Bindings_Delete",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Apps_ValidateDomain",
          "exampleFile": "../examples/Apps_ValidateDomain.json",
          "operation": Object {},
          "operationId": "Apps_ValidateDomain",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
            "validatePayload": Object {
              "name": "$(customDomainName)",
            },
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "isValid": false,
                "message": "Certificate is invalid, please check if it is a self signed cert or if it contains a suitable dns name",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_ValidateDomain",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "CustomDomains_CreateOrUpdate",
          "exampleFile": "../examples/CustomDomains_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "CustomDomains_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "domainResource": Object {
              "properties": Object {
                "certName": "asc-certificate",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_Update",
          "exampleFile": "../examples/CustomDomains_Update.json",
          "operation": Object {},
          "operationId": "CustomDomains_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "domainResource": Object {
              "properties": Object {
                "certName": "asc-certificate",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Update",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_Get",
          "exampleFile": "../examples/CustomDomains_Get.json",
          "operation": Object {},
          "operationId": "CustomDomains_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "mycert",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Get",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_List",
          "exampleFile": "../examples/CustomDomains_List.json",
          "operation": Object {},
          "operationId": "CustomDomains_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains?$page=2",
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/mydomain.com",
                    "name": "mydomain.com",
                    "properties": Object {
                      "appName": "$(appName)",
                      "certName": "mycert",
                      "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/domains",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_GetResourceUploadUrl",
          "exampleFile": "../examples/Apps_GetResourceUploadUrl.json",
          "operation": Object {},
          "operationId": "Apps_GetResourceUploadUrl",
          "outputVariables": Object {
            "relativePath": Object {
              "fromResponse": "/relativePath",
            },
            "uploadUrl": Object {
              "fromResponse": "/uploadUrl",
              "type": "secureString",
            },
          },
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "relativePath": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20190801-3ed9f4a2-986b-4bbd-b833-a42dccb2f777",
                "uploadUrl": "https://springcloudstorageaccount.file.core.windows.net/bd172614181f42e2853f6fd90029cda8/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20190801-3ed9f4a2-986b-4bbd-b833-a42dccb2f777?sv=2018-03-28&sr=f&sig=SampleSignature&se=2019-08-01T10%3A42%3A21Z&sp=w",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_GetResourceUploadUrl",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "armTemplate": "",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": Object {
              "userAssignedIdentity": Object {
                "defaultValue": "$(userAssignedIdentity)",
                "type": "string",
              },
              "utcValue": Object {
                "defaultValue": "[utcNow()]",
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2020-10-01",
                "identity": Object {
                  "type": "UserAssigned",
                  "userAssignedIdentities": Object {
                    "[parameters('userAssignedIdentity')]": Object {},
                  },
                },
                "kind": "AzurePowerShell",
                "location": "[resourceGroup().location]",
                "name": "Upload_File",
                "properties": Object {
                  "arguments": undefined,
                  "azPowerShellVersion": "6.2",
                  "cleanupPreference": "OnSuccess",
                  "environmentVariables": Array [
                    Object {
                      "name": "uploadUrl",
                      "secureValue": "$(uploadUrl)",
                    },
                    Object {
                      "name": "blobUrl",
                      "secureValue": "$(blobUrl)",
                    },
                  ],
                  "forceUpdateTag": "[parameters('utcValue')]",
                  "retentionInterval": "P1D",
                  "scriptContent": "$uploadUri = \${Env:uploadUrl}
$blobUri = \${Env:blobUrl}
$localFilePath = '/tmp/temp.file'
function DownloadJarFromBlob([string]$blobUri, [string]$localOutputFilePath) {
	$BlobFile = [Microsoft.WindowsAzure.Storage.Blob.CloudBlob]::new($blobUri)
	$DownLoadTask = $BlobFile.DownloadToFileAsync($localOutputFilePath, 4)
	$DownLoadTask
}

function UploadToFileShare([string]$uploadUri, [string]$localFilePath) {
	$CloudFile = [Microsoft.WindowsAzure.Storage.File.CloudFile]::New($uploadUri)
	$UploadTask = $CloudFile.UploadFromFileAsync($localFilePath)
	$UploadTask
}

Connect-AzAccount -Identity
DownloadJarFromBlob $blobUri $localFilePath
UploadToFileShare $uploadUri $localFilePath",
                  "timeout": "PT1H",
                },
                "type": "Microsoft.Resources/deploymentScripts",
              },
            ],
          },
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Upload_File",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_CreateOrUpdate",
          "exampleFile": "../examples/Deployments_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Deployments_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "deploymentResource": Object {
              "properties": Object {
                "deploymentSettings": Object {
                  "cpu": 1,
                  "environmentVariables": Object {
                    "env": "test",
                  },
                  "jvmOptions": "-Xms1G -Xmx3G",
                  "memoryInGB": 3,
                  "runtimeVersion": "Java_8",
                },
                "instances": null,
                "source": Object {
                  "artifactSelector": "sub-module-1",
                  "relativePath": "$(relativePath)",
                  "type": "Jar",
                  "version": "1.0",
                },
              },
              "sku": Object {
                "capacity": 2,
                "name": "S0",
                "tier": "Standard",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Creating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Updating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "blue",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/mypersistentdisk",
                  "sizeInGB": 2,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/mytemporarydisk",
                  "sizeInGB": 2,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "blue",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "blue",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_Restart",
          "exampleFile": "../examples/Deployments_Restart.json",
          "operation": Object {},
          "operationId": "Deployments_Restart",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Restart",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_Stop",
          "exampleFile": "../examples/Deployments_Stop.json",
          "operation": Object {},
          "operationId": "Deployments_Stop",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Stop",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_Start",
          "exampleFile": "../examples/Deployments_Start.json",
          "operation": Object {},
          "operationId": "Deployments_Start",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Start",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_GetLogFileUrl",
          "exampleFile": "../examples/Deployments_GetLogFileUrl.json",
          "operation": Object {},
          "operationId": "Deployments_GetLogFileUrl",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "url": "https://spring.blob.core.windows.net/logs/110ec0c337154d45b1f01daf2196c0bf/b58b0cb4ecdea3c65311b4ca8833fe47b6ae0a7500f87a8eb31e8379d3fe48f1-2019081312-42b7b90c-f108-4c09-b33d-1ea134f57f23?sv=2018-03-28&sr=b&sig=example-signature&se=2019-08-14T09%3A43%3A52Z&sp=r",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Deployments_GetLogFileUrl",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_List",
          "exampleFile": "../examples/Deployments_List.json",
          "operation": Object {},
          "operationId": "Deployments_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/mydeployment",
                    "name": "mydeployment",
                    "properties": Object {
                      "active": false,
                      "appName": "$(appName)",
                      "deploymentSettings": Object {
                        "cpu": 1,
                        "environmentVariables": Object {
                          "env": "test",
                        },
                        "jvmOptions": "-Xms1G -Xmx3G",
                        "memoryInGB": 3,
                        "runtimeVersion": "Java_8",
                      },
                      "instances": Array [
                        Object {
                          "discoveryStatus": "pending",
                          "name": "instance1",
                          "startTime": "2020-08-26T01:55:02Z",
                          "status": "Running",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "source": Object {
                        "artifactSelector": "sub-module-1",
                        "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        "type": "Source",
                        "version": "1.0",
                      },
                      "status": "Running",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/deployments",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_ListForCluster",
          "exampleFile": "../examples/Deployments_ListForCluster.json",
          "operation": Object {},
          "operationId": "Deployments_ListForCluster",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/mydeployment",
                    "name": "mydeployment",
                    "properties": Object {
                      "active": false,
                      "appName": "$(appName)",
                      "deploymentSettings": Object {
                        "cpu": 1,
                        "environmentVariables": Object {
                          "env": "test",
                        },
                        "jvmOptions": "-Xms1G -Xmx3G",
                        "memoryInGB": 3,
                        "runtimeVersion": "Java_8",
                      },
                      "instances": Array [
                        Object {
                          "discoveryStatus": "pending",
                          "name": "instance1",
                          "startTime": "2020-08-26T01:55:02Z",
                          "status": "Running",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "source": Object {
                        "artifactSelector": "sub-module-1",
                        "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        "type": "Source",
                        "version": "1.0",
                      },
                      "status": "Running",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/deployments",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_ListForCluster",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_List",
          "exampleFile": "../examples/Services_List.json",
          "operation": Object {},
          "operationId": "Services_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                    "location": "eastus",
                    "name": "myservice",
                    "properties": Object {
                      "networkProfile": Object {
                        "outboundIPs": Object {
                          "publicIPs": Array [
                            "20.39.3.173",
                            "40.64.67.13",
                          ],
                        },
                        "requiredTraffics": Array [
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 443,
                            "protocol": "TCP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 1194,
                            "protocol": "UDP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 9000,
                            "protocol": "TCP",
                          },
                        ],
                      },
                      "provisioningState": "Succeeded",
                      "serviceId": "12345678abcd1234abcd12345678abcd",
                    },
                    "sku": Object {
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.AppPlatform/Spring",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_ListBySubscription",
          "exampleFile": "../examples/Services_ListBySubscription.json",
          "operation": Object {},
          "operationId": "Services_ListBySubscription",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                    "location": "eastus",
                    "name": "myservice",
                    "properties": Object {
                      "networkProfile": Object {
                        "outboundIPs": Object {
                          "publicIPs": Array [
                            "20.39.3.173",
                            "40.64.67.13",
                          ],
                        },
                        "requiredTraffics": Array [
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 443,
                            "protocol": "TCP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 1194,
                            "protocol": "UDP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 9000,
                            "protocol": "TCP",
                          },
                        ],
                      },
                      "provisioningState": "Succeeded",
                      "serviceId": "12345678abcd1234abcd12345678abcd",
                    },
                    "sku": Object {
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.AppPlatform/Spring",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_ListBySubscription",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_Delete",
          "exampleFile": "../examples/Deployments_Delete.json",
          "operation": Object {},
          "operationId": "Deployments_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Deployments_Delete",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "CustomDomains_Delete",
          "exampleFile": "../examples/CustomDomains_Delete.json",
          "operation": Object {},
          "operationId": "CustomDomains_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Delete",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "Apps_Delete",
          "exampleFile": "../examples/Apps_Delete.json",
          "operation": Object {},
          "operationId": "Apps_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Apps_Delete",
          "type": "restCall",
          "variables": Object {
            "appName": Object {
              "type": "string",
              "value": "app01",
            },
          },
        },
        Object {
          "description": "Certificates_Delete",
          "exampleFile": "../examples/Certificates_Delete.json",
          "operation": Object {},
          "operationId": "Certificates_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Certificates_Delete",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Services_Delete",
          "exampleFile": "../examples/Services_Delete.json",
          "operation": Object {},
          "operationId": "Services_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Services_Delete",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Skus_List",
          "exampleFile": "../examples/Skus_List.json",
          "operation": Object {},
          "operationId": "Skus_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "capacity": Object {
                      "default": 1,
                      "maximum": 20,
                      "minimum": 1,
                      "scaleType": "Automatic",
                    },
                    "locationInfo": Array [
                      Object {
                        "location": "eastus",
                        "zoneDetails": Array [],
                        "zones": Array [],
                      },
                    ],
                    "locations": Array [
                      "eastus",
                    ],
                    "name": "B0",
                    "resourceType": "Spring",
                    "restrictions": Array [],
                    "tier": "Basic",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Skus_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Operations_List",
          "exampleFile": "../examples/Operations_List.json",
          "operation": Object {},
          "operationId": "Operations_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "providers/Microsoft.AppPlatform?$skipToken={opaqueString}",
                "value": Array [
                  Object {
                    "display": Object {
                      "description": "Create or Update Managed Applications",
                      "operation": "Create or Update Managed Applications",
                      "provider": "Microsoft Azure Distributed Managed Service for Spring",
                      "resource": "Managed Applications",
                    },
                    "isDataAction": false,
                    "name": "Microsoft.AppPlatform/Spring/read",
                    "origin": "user,system",
                    "properties": Object {
                      "serviceSpecification": null,
                    },
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Operations_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "armTemplate": "",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": Object {
              "userAssignedIdentity": Object {
                "defaultValue": "$(userAssignedIdentity)",
                "type": "string",
              },
              "utcValue": Object {
                "defaultValue": "[utcNow()]",
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2020-10-01",
                "identity": Object {
                  "type": "UserAssigned",
                  "userAssignedIdentities": Object {
                    "[parameters('userAssignedIdentity')]": Object {},
                  },
                },
                "kind": "AzurePowerShell",
                "location": "[resourceGroup().location]",
                "name": "delete_cname_record",
                "properties": Object {
                  "arguments": undefined,
                  "azPowerShellVersion": "6.2",
                  "cleanupPreference": "OnSuccess",
                  "environmentVariables": Array [
                    Object {
                      "name": "resourceGroupName",
                      "value": "$(dnsResourceGroup)",
                    },
                    Object {
                      "name": "dnsCname",
                      "value": "$(dnsCname)",
                    },
                    Object {
                      "name": "dnsZoneName",
                      "value": "$(customDomainName)",
                    },
                  ],
                  "forceUpdateTag": "[parameters('utcValue')]",
                  "retentionInterval": "P1D",
                  "scriptContent": "$resourceGroupName = \${Env:resourceGroupName}
$dnsCNAME = \${Env:dnsCname}
$dnsZoneName = \${Env:dnsZoneName}

Connect-AzAccount -Identity

$RecordSet = Get-AzDnsRecordSet -Name $dnsCname -RecordType CNAME -ResourceGroupName $resourceGroupName -ZoneName $dnsZoneName
$Result = Remove-AzDnsRecordSet -RecordSet $RecordSet
$Result",
                  "timeout": "PT1H",
                },
                "type": "Microsoft.Resources/deploymentScripts",
              },
            ],
          },
          "isCleanUpStep": true,
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "delete_cname_record",
          "type": "armTemplateDeployment",
          "variables": Object {
            "resourceGroupName": Object {
              "type": "string",
              "value": "$(dnsResourceGroup)",
            },
            "subscriptionId": Object {
              "type": "string",
              "value": "$(dnsSubscriptionId)",
            },
          },
        },
      ],
      "_scenarioDef": [Circular],
      "description": "Microsoft.AppPlatform/Spring",
      "requiredVariables": Array [
        "customDomainName",
        "mysqlKey",
        "dnsSubscriptionId",
        "dnsResourceGroup",
        "blobUrl",
        "userAssignedIdentity",
        "subscriptionId",
        "location",
      ],
      "scenario": "Spring",
      "secretVariables": Array [
        "uploadUrl",
      ],
      "shareScope": true,
      "steps": Array [
        Object {
          "description": "Services_CheckNameAvailability",
          "exampleFile": "../examples/Services_CheckNameAvailability.json",
          "operation": Object {},
          "operationId": "Services_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "availabilityParameters": Object {
              "name": "$(serviceName)",
              "type": "Microsoft.AppPlatform/Spring",
            },
            "location": "$(location)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "message": "The name is already used.",
                "nameAvailable": false,
                "reason": "AlreadyExists",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_CheckNameAvailability",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_CreateOrUpdate",
          "exampleFile": "../examples/Services_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Services_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resource": Object {
              "location": "eastus",
              "properties": Object {},
              "sku": Object {
                "name": "S0",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Creating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Updating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_Get",
          "exampleFile": "../examples/Services_Get.json",
          "operation": Object {},
          "operationId": "Services_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_Update",
          "exampleFile": "../examples/Services_Update.json",
          "operation": Object {},
          "operationId": "Services_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resource": Object {
              "location": "eastus",
              "properties": Object {},
              "sku": Object {
                "name": "S0",
                "tier": "Standard",
              },
              "tags": Object {
                "created-by": "api-test",
                "hello": "world",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)",
                "location": "eastus",
                "name": "$(serviceName)",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Succeeded",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "created-by": "api-test",
                  "hello": "world",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                "location": "eastus",
                "name": "myservice",
                "properties": Object {
                  "networkProfile": Object {
                    "outboundIPs": Object {
                      "publicIPs": Array [
                        "20.39.3.173",
                        "40.64.67.13",
                      ],
                    },
                    "requiredTraffics": Array [
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 443,
                        "protocol": "TCP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 1194,
                        "protocol": "UDP",
                      },
                      Object {
                        "direction": "Outbound",
                        "ips": Array [
                          "20.62.211.25",
                          "52.188.47.226",
                        ],
                        "port": 9000,
                        "protocol": "TCP",
                      },
                    ],
                  },
                  "provisioningState": "Updating",
                  "serviceId": "12345678abcd1234abcd12345678abcd",
                },
                "sku": Object {
                  "name": "S0",
                  "tier": "Standard",
                },
                "tags": Object {
                  "created-by": "api-test",
                  "hello": "world",
                },
                "type": "Microsoft.AppPlatform/Spring",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_DisableTestEndpoint",
          "exampleFile": "../examples/Services_DisableTestEndpoint.json",
          "operation": Object {},
          "operationId": "Services_DisableTestEndpoint",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
          },
          "secretVariables": Array [],
          "step": "Services_DisableTestEndpoint",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_EnableTestEndpoint",
          "exampleFile": "../examples/Services_EnableTestEndpoint.json",
          "operation": Object {},
          "operationId": "Services_EnableTestEndpoint",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_EnableTestEndpoint",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_RegenerateTestKey",
          "exampleFile": "../examples/Services_RegenerateTestKey.json",
          "operation": Object {},
          "operationId": "Services_RegenerateTestKey",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "regenerateTestKeyRequest": Object {
              "keyType": "Primary",
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_RegenerateTestKey",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_ListTestKeys",
          "exampleFile": "../examples/Services_ListTestKeys.json",
          "operation": Object {},
          "operationId": "Services_ListTestKeys",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "enabled": true,
                "primaryKey": "<primaryKey>",
                "primaryTestEndpoint": "<primaryTestEndpoint>",
                "secondaryKey": "<secondaryKey>",
                "secondaryTestEndpoint": "<secondaryTestEndpoint>",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_ListTestKeys",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Certificates_CreateOrUpdate",
          "exampleFile": "../examples/Certificates_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Certificates_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "certificateResource": Object {
              "properties": Object {
                "keyVaultCertName": "pfx-cert",
                "vaultUri": "https://integration-test-prod.vault.azure.net/",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/$(certificateName)",
                "name": "$(certificateName)",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycertificate",
                "name": "mycertificate",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycertificate",
                "name": "mycertificate",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "pfx-cert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://integration-test-prod.vault.azure.net/",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Certificates_Get",
          "exampleFile": "../examples/Certificates_Get.json",
          "operation": Object {},
          "operationId": "Certificates_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/$(certificateName)",
                "name": "$(certificateName)",
                "properties": Object {
                  "activateDate": "2019-02-22T07:40:42Z",
                  "certVersion": "08a219d06d874795a96db47e06fbb01e",
                  "dnsNames": Array [
                    "mydomain.com",
                    "mydomain.net",
                    "mydomain.io",
                  ],
                  "expirationDate": "2019-02-21T07:40:42Z",
                  "issuedDate": "2019-02-20T07:40:42Z",
                  "issuer": "mydomain.com",
                  "keyVaultCertName": "mycert",
                  "subjectName": "mysubjectname",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                  "vaultUri": "https://myvault.vault.azure.net",
                },
                "type": "Microsoft.AppPlatform/Spring/certificates",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_Get",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Certificates_List",
          "exampleFile": "../examples/Certificates_List.json",
          "operation": Object {},
          "operationId": "Certificates_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates?$page=2",
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/certificates/mycertificate",
                    "name": "mycertificate",
                    "properties": Object {
                      "activateDate": "2019-02-22T07:40:42Z",
                      "certVersion": "08a219d06d874795a96db47e06fbb01e",
                      "dnsNames": Array [
                        "mydomain.com",
                        "mydomain.net",
                        "mydomain.io",
                      ],
                      "expirationDate": "2019-02-21T07:40:42Z",
                      "issuedDate": "2019-02-20T07:40:42Z",
                      "issuer": "mydomain.com",
                      "keyVaultCertName": "mycert",
                      "subjectName": "mysubjectname",
                      "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                      "vaultUri": "https://myvault.vault.azure.net",
                    },
                    "type": "Microsoft.AppPlatform/Spring/certificates",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Certificates_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_Validate",
          "exampleFile": "../examples/ConfigServers_Validate.json",
          "operation": Object {},
          "operationId": "ConfigServers_Validate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerSettings": Object {
              "gitProperty": Object {
                "label": "master",
                "searchPaths": Array [
                  "/",
                ],
                "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "isValid": true,
              },
            },
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_Validate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_UpdatePut",
          "exampleFile": "../examples/ConfigServers_UpdatePut.json",
          "operation": Object {},
          "operationId": "ConfigServers_UpdatePut",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerResource": Object {
              "properties": Object {
                "configServer": Object {
                  "gitProperty": Object {
                    "label": "master",
                    "searchPaths": Array [
                      "/",
                    ],
                    "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                  },
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/VSChina/asc-config-server-test-public.git",
                    },
                  },
                  "provisioningState": "Updating",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_UpdatePut",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_UpdatePatch",
          "exampleFile": "../examples/ConfigServers_UpdatePatch.json",
          "operation": Object {},
          "operationId": "ConfigServers_UpdatePatch",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "configServerResource": Object {
              "properties": Object {
                "configServer": Object {
                  "gitProperty": Object {
                    "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                  },
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "uri": "https://github.com/azure-samples/spring-petclinic-microservices-config",
                    },
                  },
                  "provisioningState": "Updating",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_UpdatePatch",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "ConfigServers_Get",
          "exampleFile": "../examples/ConfigServers_Get.json",
          "operation": Object {},
          "operationId": "ConfigServers_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/configServers/default",
                "name": "default",
                "properties": Object {
                  "configServer": Object {
                    "gitProperty": Object {
                      "label": "master",
                      "searchPaths": Array [
                        "/",
                      ],
                      "uri": "https://github.com/fake-user/fake-repository.git",
                    },
                  },
                  "provisioningState": "Succeeded",
                },
                "type": "Microsoft.AppPlatform/Spring/configServers",
              },
            },
          },
          "secretVariables": Array [],
          "step": "ConfigServers_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_UpdatePut",
          "exampleFile": "../examples/MonitoringSettings_UpdatePut.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_UpdatePut",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "monitoringSettingResource": Object {
              "properties": Object {
                "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                "appInsightsSamplingRate": 50,
                "traceEnabled": true,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                  "appInsightsSamplingRate": 50,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(insightsInstrumentationKey)",
                  "appInsightsSamplingRate": 50,
                  "provisioningState": "Updating",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_UpdatePut",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_Get",
          "exampleFile": "../examples/MonitoringSettings_Get.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(subscriptionId)",
                  "appInsightsSamplingRate": 10,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "MonitoringSettings_UpdatePatch",
          "exampleFile": "../examples/MonitoringSettings_UpdatePatch.json",
          "operation": Object {},
          "operationId": "MonitoringSettings_UpdatePatch",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "monitoringSettingResource": Object {
              "properties": Object {
                "appInsightsInstrumentationKey": "00000000-0000-0000-0000-000000000000",
                "appInsightsSamplingRate": 100,
                "traceEnabled": true,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "$(subscriptionId)",
                  "appInsightsSamplingRate": 100,
                  "provisioningState": "Succeeded",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/monitoringSettings/default",
                "name": "default",
                "properties": Object {
                  "appInsightsAgentVersions": Object {
                    "java": "3.0.0",
                  },
                  "appInsightsInstrumentationKey": "00000000-0000-0000-0000-000000000000",
                  "appInsightsSamplingRate": 100,
                  "provisioningState": "Updating",
                  "traceEnabled": true,
                },
                "type": "Microsoft.AppPlatform/Spring/monitoringSettings",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "MonitoringSettings_UpdatePatch",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_CreateOrUpdate",
          "exampleFile": "../examples/Apps_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Apps_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": null,
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "mydeployment1",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "public": false,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Succeeded",
                  "public": false,
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Creating",
                  "public": false,
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "provisioningState": "Updating",
                  "public": false,
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Create",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_Get",
          "exampleFile": "../examples/Apps_Get.json",
          "operation": Object {},
          "operationId": "Apps_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_CreateOrUpdate",
          "exampleFile": "../examples/Deployments_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Deployments_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "deploymentResource": Object {
              "properties": Object {
                "deploymentSettings": Object {
                  "cpu": 1,
                  "environmentVariables": Object {
                    "env": "test",
                  },
                  "jvmOptions": "-Xms1G -Xmx3G",
                  "memoryInGB": 3,
                  "runtimeVersion": "Java_8",
                },
                "instances": null,
                "source": Object {
                  "artifactSelector": "sub-module-1",
                  "relativePath": "<default>",
                  "type": "Jar",
                  "version": "1.0",
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "S0",
                "tier": "Standard",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Creating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Updating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "<default>",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_CreateOrUpdate_Default",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "default",
            },
          },
        },
        Object {
          "description": "Deployments_Get",
          "exampleFile": "../examples/Deployments_Get.json",
          "operation": Object {},
          "operationId": "Deployments_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                    "type": "Source",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Get",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "default",
            },
          },
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "default",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/mypersistentdisk",
                  "sizeInGB": 2,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/mytemporarydisk",
                  "sizeInGB": 2,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "default",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "default",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update_ActiveDeployment",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "mydeployment1",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/data",
                  "sizeInGB": 10,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/tmpdisk",
                  "sizeInGB": 3,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/data",
                    "sizeInGB": 10,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/tmpdisk",
                    "sizeInGB": 3,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "mydeployment1",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/data",
                    "sizeInGB": 10,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/tmpdisk",
                    "sizeInGB": 3,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update_Disk",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_List",
          "exampleFile": "../examples/Apps_List.json",
          "operation": Object {},
          "operationId": "Apps_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/myapp",
                    "identity": Object {
                      "principalId": "principalid",
                      "tenantId": "tenantid",
                      "type": "SystemAssigned",
                    },
                    "location": "eastus",
                    "name": "myapp",
                    "properties": Object {
                      "activeDeploymentName": "mydeployment1",
                      "enableEndToEndTLS": false,
                      "fqdn": "myapp.mydomain.com",
                      "httpsOnly": false,
                      "persistentDisk": Object {
                        "mountPath": "/mypersistentdisk",
                        "sizeInGB": 2,
                        "usedInGB": 1,
                      },
                      "provisioningState": "Succeeded",
                      "public": true,
                      "temporaryDisk": Object {
                        "mountPath": "/mytemporarydisk",
                        "sizeInGB": 2,
                      },
                      "url": "myapp.$(serviceName).azuremicroservices.io",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Bindings_CreateOrUpdate",
          "exampleFile": "../examples/Bindings_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Bindings_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "bindingResource": Object {
              "properties": Object {
                "bindingParameters": Object {
                  "databaseName": "mysqldb",
                  "username": "test",
                },
                "createdAt": null,
                "generatedProperties": null,
                "key": "$(mysqlKey)",
                "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                "updatedAt": null,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb",
                    "username": "test",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/b46590cb-a111-4b84-935f-c305aaf1f424/resourceGroups/mary-west/providers/Microsoft.DBforMySQL/servers/fake-sql",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Create",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_Update",
          "exampleFile": "../examples/Bindings_Update.json",
          "operation": Object {},
          "operationId": "Bindings_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "bindingResource": Object {
              "properties": Object {
                "bindingParameters": Object {
                  "databaseName": "mysqldb2",
                  "username": "test2",
                },
                "createdAt": null,
                "generatedProperties": null,
                "key": "$(mysqlKey)",
                "updatedAt": null,
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb2",
                    "username": "test2",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/mybinding",
                "name": "mybinding",
                "properties": Object {
                  "bindingParameters": Object {
                    "databaseName": "mysqldb2",
                    "username": "test2",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "key": "$(mysqlKey)",
                  "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Update",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_Get",
          "exampleFile": "../examples/Bindings_Get.json",
          "operation": Object {},
          "operationId": "Bindings_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/$(bindingName)",
                "name": "$(bindingName)",
                "properties": Object {
                  "bindingParameters": Object {
                    "apiType": "SQL",
                    "databaseName": "db1",
                  },
                  "createdAt": "2019-01-01T12:34:56.000Z",
                  "generatedProperties": "<connection-string>",
                  "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                  "resourceName": "my-cosmosdb-1",
                  "resourceType": "Microsoft.DocumentDB",
                  "updatedAt": "2019-01-01T12:34:56.000Z",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/bindings",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_Get",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Bindings_List",
          "exampleFile": "../examples/Bindings_List.json",
          "operation": Object {},
          "operationId": "Bindings_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/bindings/mybinding",
                    "name": "mybinding",
                    "properties": Object {
                      "bindingParameters": Object {
                        "apiType": "SQL",
                        "databaseName": "db1",
                      },
                      "createdAt": "2019-01-01T12:34:56.000Z",
                      "generatedProperties": "<connection-string>",
                      "resourceId": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                      "resourceName": "my-cosmosdb-1",
                      "resourceType": "Microsoft.DocumentDB",
                      "updatedAt": "2019-01-01T12:34:56.000Z",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/bindings",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Bindings_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Bindings_Delete",
          "exampleFile": "../examples/Bindings_Delete.json",
          "operation": Object {},
          "operationId": "Bindings_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "bindingName": "$(bindingName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Bindings_Delete",
          "type": "restCall",
          "variables": Object {
            "bindingName": Object {
              "type": "string",
              "value": "mysql-binding",
            },
          },
        },
        Object {
          "description": "Apps_ValidateDomain",
          "exampleFile": "../examples/Apps_ValidateDomain.json",
          "operation": Object {},
          "operationId": "Apps_ValidateDomain",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
            "validatePayload": Object {
              "name": "$(customDomainName)",
            },
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "isValid": false,
                "message": "Certificate is invalid, please check if it is a self signed cert or if it contains a suitable dns name",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_ValidateDomain",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "CustomDomains_CreateOrUpdate",
          "exampleFile": "../examples/CustomDomains_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "CustomDomains_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "domainResource": Object {
              "properties": Object {
                "certName": "asc-certificate",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_Update",
          "exampleFile": "../examples/CustomDomains_Update.json",
          "operation": Object {},
          "operationId": "CustomDomains_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "domainResource": Object {
              "properties": Object {
                "certName": "asc-certificate",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/domains/mydomain.com",
                "name": "mydomain.com",
                "properties": Object {
                  "appName": "myapp",
                  "certName": "asc-certificate",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Update",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_Get",
          "exampleFile": "../examples/CustomDomains_Get.json",
          "operation": Object {},
          "operationId": "CustomDomains_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/$(domainName)",
                "name": "$(domainName)",
                "properties": Object {
                  "appName": "$(appName)",
                  "certName": "mycert",
                  "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/domains",
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Get",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "CustomDomains_List",
          "exampleFile": "../examples/CustomDomains_List.json",
          "operation": Object {},
          "operationId": "CustomDomains_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains?$page=2",
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/domains/mydomain.com",
                    "name": "mydomain.com",
                    "properties": Object {
                      "appName": "$(appName)",
                      "certName": "mycert",
                      "thumbprint": "934367bf1c97033f877db0f15cb1b586957d3133",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/domains",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "CustomDomains_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Apps_GetResourceUploadUrl",
          "exampleFile": "../examples/Apps_GetResourceUploadUrl.json",
          "operation": Object {},
          "operationId": "Apps_GetResourceUploadUrl",
          "outputVariables": Object {
            "relativePath": Object {
              "fromResponse": "/relativePath",
            },
            "uploadUrl": Object {
              "fromResponse": "/uploadUrl",
              "type": "secureString",
            },
          },
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "relativePath": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20190801-3ed9f4a2-986b-4bbd-b833-a42dccb2f777",
                "uploadUrl": "https://springcloudstorageaccount.file.core.windows.net/bd172614181f42e2853f6fd90029cda8/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20190801-3ed9f4a2-986b-4bbd-b833-a42dccb2f777?sv=2018-03-28&sr=f&sig=SampleSignature&se=2019-08-01T10%3A42%3A21Z&sp=w",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_GetResourceUploadUrl",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "armTemplate": "",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": Object {
              "userAssignedIdentity": Object {
                "defaultValue": "$(userAssignedIdentity)",
                "type": "string",
              },
              "utcValue": Object {
                "defaultValue": "[utcNow()]",
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2020-10-01",
                "identity": Object {
                  "type": "UserAssigned",
                  "userAssignedIdentities": Object {
                    "[parameters('userAssignedIdentity')]": Object {},
                  },
                },
                "kind": "AzurePowerShell",
                "location": "[resourceGroup().location]",
                "name": "Upload_File",
                "properties": Object {
                  "arguments": undefined,
                  "azPowerShellVersion": "6.2",
                  "cleanupPreference": "OnSuccess",
                  "environmentVariables": Array [
                    Object {
                      "name": "uploadUrl",
                      "secureValue": "$(uploadUrl)",
                    },
                    Object {
                      "name": "blobUrl",
                      "secureValue": "$(blobUrl)",
                    },
                  ],
                  "forceUpdateTag": "[parameters('utcValue')]",
                  "retentionInterval": "P1D",
                  "scriptContent": "$uploadUri = \${Env:uploadUrl}
$blobUri = \${Env:blobUrl}
$localFilePath = '/tmp/temp.file'
function DownloadJarFromBlob([string]$blobUri, [string]$localOutputFilePath) {
	$BlobFile = [Microsoft.WindowsAzure.Storage.Blob.CloudBlob]::new($blobUri)
	$DownLoadTask = $BlobFile.DownloadToFileAsync($localOutputFilePath, 4)
	$DownLoadTask
}

function UploadToFileShare([string]$uploadUri, [string]$localFilePath) {
	$CloudFile = [Microsoft.WindowsAzure.Storage.File.CloudFile]::New($uploadUri)
	$UploadTask = $CloudFile.UploadFromFileAsync($localFilePath)
	$UploadTask
}

Connect-AzAccount -Identity
DownloadJarFromBlob $blobUri $localFilePath
UploadToFileShare $uploadUri $localFilePath",
                  "timeout": "PT1H",
                },
                "type": "Microsoft.Resources/deploymentScripts",
              },
            ],
          },
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Upload_File",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_CreateOrUpdate",
          "exampleFile": "../examples/Deployments_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "Deployments_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "deploymentResource": Object {
              "properties": Object {
                "deploymentSettings": Object {
                  "cpu": 1,
                  "environmentVariables": Object {
                    "env": "test",
                  },
                  "jvmOptions": "-Xms1G -Xmx3G",
                  "memoryInGB": 3,
                  "runtimeVersion": "Java_8",
                },
                "instances": null,
                "source": Object {
                  "artifactSelector": "sub-module-1",
                  "relativePath": "$(relativePath)",
                  "type": "Jar",
                  "version": "1.0",
                },
              },
              "sku": Object {
                "capacity": 2,
                "name": "S0",
                "tier": "Standard",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/$(deploymentName)",
                "name": "$(deploymentName)",
                "properties": Object {
                  "active": false,
                  "appName": "$(appName)",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Creating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment",
                "name": "mydeployment",
                "properties": Object {
                  "active": false,
                  "appName": "myapp",
                  "deploymentSettings": Object {
                    "cpu": 1,
                    "environmentVariables": Object {
                      "env": "test",
                    },
                    "jvmOptions": "-Xms1G -Xmx3G",
                    "memoryInGB": 3,
                    "runtimeVersion": "Java_8",
                  },
                  "instances": Array [
                    Object {
                      "discoveryStatus": "pending",
                      "name": "instance1",
                      "startTime": "2020-08-26T01:55:02Z",
                      "status": "Running",
                    },
                  ],
                  "provisioningState": "Updating",
                  "source": Object {
                    "artifactSelector": "sub-module-1",
                    "relativePath": "$(relativePath)",
                    "type": "Jar",
                    "version": "1.0",
                  },
                  "status": "Running",
                },
                "sku": Object {
                  "capacity": 2,
                  "name": "S0",
                  "tier": "Standard",
                },
                "type": "Microsoft.AppPlatform/Spring/apps/deployments",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Apps_Update",
          "exampleFile": "../examples/Apps_Update.json",
          "operation": Object {},
          "operationId": "Apps_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "appResource": Object {
              "identity": Object {
                "principalId": null,
                "tenantId": null,
                "type": "SystemAssigned",
              },
              "location": "eastus",
              "properties": Object {
                "activeDeploymentName": "blue",
                "enableEndToEndTLS": false,
                "fqdn": "myapp.mydomain.com",
                "httpsOnly": false,
                "persistentDisk": Object {
                  "mountPath": "/mypersistentdisk",
                  "sizeInGB": 2,
                },
                "public": true,
                "temporaryDisk": Object {
                  "mountPath": "/mytemporarydisk",
                  "sizeInGB": 2,
                },
              },
            },
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "$(appName)",
                "properties": Object {
                  "activeDeploymentName": "blue",
                  "enableEndToEndTLS": false,
                  "fqdn": "$(appName).mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Succeeded",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "$(appName).$(serviceName).azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
            },
            "202": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp",
                "identity": Object {
                  "principalId": "principalid",
                  "tenantId": "tenantid",
                  "type": "SystemAssigned",
                },
                "location": "eastus",
                "name": "myapp",
                "properties": Object {
                  "activeDeploymentName": "blue",
                  "enableEndToEndTLS": false,
                  "fqdn": "myapp.mydomain.com",
                  "httpsOnly": false,
                  "persistentDisk": Object {
                    "mountPath": "/mypersistentdisk",
                    "sizeInGB": 2,
                    "usedInGB": 1,
                  },
                  "provisioningState": "Updating",
                  "public": true,
                  "temporaryDisk": Object {
                    "mountPath": "/mytemporarydisk",
                    "sizeInGB": 2,
                  },
                  "url": "myapp.myservice.azuremicroservices.io",
                },
                "type": "Microsoft.AppPlatform/Spring/apps",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2020-11-01-preview",
                "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2020-11-01-preview",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Apps_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_Restart",
          "exampleFile": "../examples/Deployments_Restart.json",
          "operation": Object {},
          "operationId": "Deployments_Restart",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Restart",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_Stop",
          "exampleFile": "../examples/Deployments_Stop.json",
          "operation": Object {},
          "operationId": "Deployments_Stop",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Stop",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_Start",
          "exampleFile": "../examples/Deployments_Start.json",
          "operation": Object {},
          "operationId": "Deployments_Start",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_Start",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_GetLogFileUrl",
          "exampleFile": "../examples/Deployments_GetLogFileUrl.json",
          "operation": Object {},
          "operationId": "Deployments_GetLogFileUrl",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "url": "https://spring.blob.core.windows.net/logs/110ec0c337154d45b1f01daf2196c0bf/b58b0cb4ecdea3c65311b4ca8833fe47b6ae0a7500f87a8eb31e8379d3fe48f1-2019081312-42b7b90c-f108-4c09-b33d-1ea134f57f23?sv=2018-03-28&sr=b&sig=example-signature&se=2019-08-14T09%3A43%3A52Z&sp=r",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Deployments_GetLogFileUrl",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "Deployments_List",
          "exampleFile": "../examples/Deployments_List.json",
          "operation": Object {},
          "operationId": "Deployments_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/mydeployment",
                    "name": "mydeployment",
                    "properties": Object {
                      "active": false,
                      "appName": "$(appName)",
                      "deploymentSettings": Object {
                        "cpu": 1,
                        "environmentVariables": Object {
                          "env": "test",
                        },
                        "jvmOptions": "-Xms1G -Xmx3G",
                        "memoryInGB": 3,
                        "runtimeVersion": "Java_8",
                      },
                      "instances": Array [
                        Object {
                          "discoveryStatus": "pending",
                          "name": "instance1",
                          "startTime": "2020-08-26T01:55:02Z",
                          "status": "Running",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "source": Object {
                        "artifactSelector": "sub-module-1",
                        "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        "type": "Source",
                        "version": "1.0",
                      },
                      "status": "Running",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/deployments",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_ListForCluster",
          "exampleFile": "../examples/Deployments_ListForCluster.json",
          "operation": Object {},
          "operationId": "Deployments_ListForCluster",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/$(serviceName)/apps/$(appName)/deployments/mydeployment",
                    "name": "mydeployment",
                    "properties": Object {
                      "active": false,
                      "appName": "$(appName)",
                      "deploymentSettings": Object {
                        "cpu": 1,
                        "environmentVariables": Object {
                          "env": "test",
                        },
                        "jvmOptions": "-Xms1G -Xmx3G",
                        "memoryInGB": 3,
                        "runtimeVersion": "Java_8",
                      },
                      "instances": Array [
                        Object {
                          "discoveryStatus": "pending",
                          "name": "instance1",
                          "startTime": "2020-08-26T01:55:02Z",
                          "status": "Running",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "source": Object {
                        "artifactSelector": "sub-module-1",
                        "relativePath": "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        "type": "Source",
                        "version": "1.0",
                      },
                      "status": "Running",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "type": "Microsoft.AppPlatform/Spring/apps/deployments",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Deployments_ListForCluster",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_List",
          "exampleFile": "../examples/Services_List.json",
          "operation": Object {},
          "operationId": "Services_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                    "location": "eastus",
                    "name": "myservice",
                    "properties": Object {
                      "networkProfile": Object {
                        "outboundIPs": Object {
                          "publicIPs": Array [
                            "20.39.3.173",
                            "40.64.67.13",
                          ],
                        },
                        "requiredTraffics": Array [
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 443,
                            "protocol": "TCP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 1194,
                            "protocol": "UDP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 9000,
                            "protocol": "TCP",
                          },
                        ],
                      },
                      "provisioningState": "Succeeded",
                      "serviceId": "12345678abcd1234abcd12345678abcd",
                    },
                    "sku": Object {
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.AppPlatform/Spring",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Services_ListBySubscription",
          "exampleFile": "../examples/Services_ListBySubscription.json",
          "operation": Object {},
          "operationId": "Services_ListBySubscription",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
                    "location": "eastus",
                    "name": "myservice",
                    "properties": Object {
                      "networkProfile": Object {
                        "outboundIPs": Object {
                          "publicIPs": Array [
                            "20.39.3.173",
                            "40.64.67.13",
                          ],
                        },
                        "requiredTraffics": Array [
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 443,
                            "protocol": "TCP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 1194,
                            "protocol": "UDP",
                          },
                          Object {
                            "direction": "Outbound",
                            "ips": Array [
                              "20.62.211.25",
                              "52.188.47.226",
                            ],
                            "port": 9000,
                            "protocol": "TCP",
                          },
                        ],
                      },
                      "provisioningState": "Succeeded",
                      "serviceId": "12345678abcd1234abcd12345678abcd",
                    },
                    "sku": Object {
                      "name": "S0",
                      "tier": "Standard",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.AppPlatform/Spring",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Services_ListBySubscription",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Deployments_Delete",
          "exampleFile": "../examples/Deployments_Delete.json",
          "operation": Object {},
          "operationId": "Deployments_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "deploymentName": "$(deploymentName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Deployments_Delete",
          "type": "restCall",
          "variables": Object {
            "deploymentName": Object {
              "type": "string",
              "value": "blue",
            },
          },
        },
        Object {
          "description": "CustomDomains_Delete",
          "exampleFile": "../examples/CustomDomains_Delete.json",
          "operation": Object {},
          "operationId": "CustomDomains_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "domainName": "$(domainName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "CustomDomains_Delete",
          "type": "restCall",
          "variables": Object {
            "domainName": Object {
              "type": "string",
              "value": "$(dnsCname).$(customDomainName)",
            },
          },
        },
        Object {
          "description": "Apps_Delete",
          "exampleFile": "../examples/Apps_Delete.json",
          "operation": Object {},
          "operationId": "Apps_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "appName": "$(appName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Apps_Delete",
          "type": "restCall",
          "variables": Object {
            "appName": Object {
              "type": "string",
              "value": "app01",
            },
          },
        },
        Object {
          "description": "Certificates_Delete",
          "exampleFile": "../examples/Certificates_Delete.json",
          "operation": Object {},
          "operationId": "Certificates_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "certificateName": "$(certificateName)",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {},
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Certificates_Delete",
          "type": "restCall",
          "variables": Object {
            "certificateName": Object {
              "type": "string",
              "value": "asc-certificate",
            },
          },
        },
        Object {
          "description": "Services_Delete",
          "exampleFile": "../examples/Services_Delete.json",
          "operation": Object {},
          "operationId": "Services_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "resourceGroupName": "myResourceGroup",
            "serviceName": "$(serviceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.AppPlatform/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "Services_Delete",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Skus_List",
          "exampleFile": "../examples/Skus_List.json",
          "operation": Object {},
          "operationId": "Skus_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "capacity": Object {
                      "default": 1,
                      "maximum": 20,
                      "minimum": 1,
                      "scaleType": "Automatic",
                    },
                    "locationInfo": Array [
                      Object {
                        "location": "eastus",
                        "zoneDetails": Array [],
                        "zones": Array [],
                      },
                    ],
                    "locations": Array [
                      "eastus",
                    ],
                    "name": "B0",
                    "resourceType": "Spring",
                    "restrictions": Array [],
                    "tier": "Basic",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Skus_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Operations_List",
          "exampleFile": "../examples/Operations_List.json",
          "operation": Object {},
          "operationId": "Operations_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2020-11-01-preview",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "providers/Microsoft.AppPlatform?$skipToken={opaqueString}",
                "value": Array [
                  Object {
                    "display": Object {
                      "description": "Create or Update Managed Applications",
                      "operation": "Create or Update Managed Applications",
                      "provider": "Microsoft Azure Distributed Managed Service for Spring",
                      "resource": "Managed Applications",
                    },
                    "isDataAction": false,
                    "name": "Microsoft.AppPlatform/Spring/read",
                    "origin": "user,system",
                    "properties": Object {
                      "serviceSpecification": null,
                    },
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Operations_List",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "variables": Object {
        "relativePath": Object {
          "type": "string",
        },
        "uploadUrl": Object {
          "type": "secureString",
        },
      },
    },
  ],
  "scope": "ResourceGroup",
  "secretVariables": Array [
    "mysqlKey",
    "blobUrl",
  ],
  "variables": Object {
    "appName": Object {
      "type": "string",
      "value": "app01",
    },
    "ascDomainName": Object {
      "type": "string",
      "value": ".azuremicroservices.io",
    },
    "dnsCname": Object {
      "type": "string",
      "value": "asc",
    },
    "insightsInstrumentationKey": Object {
      "type": "string",
    },
    "serviceName": Object {
      "type": "string",
      "value": "test-scenario-instance",
    },
  },
}
`;

exports[`ApiScenarioLoader load valid scenario - storage 1`] = `
Object {
  "_filePath": "Microsoft.Storage/stable/2021-09-01/scenarios/storageQuickStart.yaml",
  "cleanUpSteps": Array [],
  "prepareSteps": Array [],
  "requiredVariables": Array [
    "subscriptionId",
    "location",
  ],
  "scenarios": Array [
    Object {
      "_resolvedSteps": Array [
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "StorageAccounts_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "accountName": Object {
              "name": "$(accountName)",
              "type": "Microsoft.Storage/storageAccounts",
            },
            "api-version": "2021-09-01",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "checkName",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "StorageAccounts_Create",
          "outputVariables": Object {},
          "parameters": Object {
            "accountName": "storagename1",
            "api-version": "2021-09-01",
            "parameters": Object {
              "kind": "StorageV2",
              "location": "$(location)",
              "properties": Object {
                "encryption": Object {
                  "keySource": "Microsoft.Storage",
                  "services": Object {
                    "blob": Object {},
                  },
                },
              },
              "sku": Object {
                "name": "Standard_LRS",
              },
            },
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createStorageAccount",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "_scenarioDef": [Circular],
      "description": "",
      "requiredVariables": Array [
        "subscriptionId",
        "location",
      ],
      "scenario": "scenario_0",
      "secretVariables": Array [],
      "shareScope": true,
      "steps": Array [
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "StorageAccounts_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "accountName": Object {
              "name": "$(accountName)",
              "type": "Microsoft.Storage/storageAccounts",
            },
            "api-version": "2021-09-01",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "checkName",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "StorageAccounts_Create",
          "outputVariables": Object {},
          "parameters": Object {
            "accountName": "storagename1",
            "api-version": "2021-09-01",
            "parameters": Object {
              "kind": "StorageV2",
              "location": "$(location)",
              "properties": Object {
                "encryption": Object {
                  "keySource": "Microsoft.Storage",
                  "services": Object {
                    "blob": Object {},
                  },
                },
              },
              "sku": Object {
                "name": "Standard_LRS",
              },
            },
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createStorageAccount",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "variables": Object {},
    },
  ],
  "scope": "ResourceGroup",
  "secretVariables": Array [],
  "variables": Object {
    "accountName": Object {
      "type": "string",
      "value": "storagename1",
    },
  },
}
`;

exports[`ApiScenarioLoader load valid scenario from uri 1`] = `
Object {
  "_filePath": "Microsoft.SignalRService/preview/2021-06-01-preview/scenarios/signalR.yaml",
  "cleanUpSteps": Array [],
  "prepareSteps": Array [],
  "requiredVariables": Array [
    "subscriptionId",
    "location",
  ],
  "scenarios": Array [
    Object {
      "_resolvedSteps": Array [
        Object {
          "armTemplate": "./peArmTemplate/Generate_Unique_name_template.json",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": Object {
              "resourceName": Object {
                "type": "string",
                "value": "[variables('name').value]",
              },
            },
            "resources": Array [],
            "variables": Object {
              "name": Object {
                "metadata": Object {
                  "description": "Name of the SignalR service.",
                },
                "type": "string",
                "value": "[concat('sw',uniqueString(resourceGroup().id))]",
              },
            },
          },
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Generate_Unique_Name",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_CheckNameAvailability",
          "exampleFile": "../examples/SignalR_CheckNameAvailability.json",
          "operation": Object {},
          "operationId": "SignalR_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "location": "$(location)",
            "parameters": Object {
              "name": "$(resourceName)",
              "type": "Microsoft.SignalRService/SignalR",
            },
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "message": "The name is already taken. Please try a different name.",
                "nameAvailable": false,
                "reason": "AlreadyExists",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_CheckNameAvailability",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_CreateOrUpdate",
          "exampleFile": "../examples/SignalR_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "SignalR_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "identity": Object {
                "type": "SystemAssigned",
              },
              "kind": "SignalR",
              "location": "eastus",
              "properties": Object {
                "cors": Object {
                  "allowedOrigins": Array [
                    "https://foo.com",
                    "https://bar.com",
                  ],
                },
                "disableAadAuth": false,
                "disableLocalAuth": false,
                "features": Array [
                  Object {
                    "flag": "ServiceMode",
                    "properties": Object {},
                    "value": "Serverless",
                  },
                  Object {
                    "flag": "EnableConnectivityLogs",
                    "properties": Object {},
                    "value": "True",
                  },
                  Object {
                    "flag": "EnableMessagingLogs",
                    "properties": Object {},
                    "value": "False",
                  },
                  Object {
                    "flag": "EnableLiveTrace",
                    "properties": Object {},
                    "value": "False",
                  },
                ],
                "networkACLs": Object {
                  "defaultAction": "Deny",
                  "privateEndpoints": Array [
                    Object {
                      "allow": Array [
                        "ServerConnection",
                      ],
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    },
                  ],
                  "publicNetwork": Object {
                    "allow": Array [
                      "ClientConnection",
                    ],
                  },
                },
                "publicNetworkAccess": "Enabled",
                "tls": Object {
                  "clientCertEnabled": false,
                },
                "upstream": Object {
                  "templates": Array [
                    Object {
                      "auth": Object {
                        "managedIdentity": Object {
                          "resource": "api://example",
                        },
                        "type": "ManagedIdentity",
                      },
                      "categoryPattern": "*",
                      "eventPattern": "connect,disconnect",
                      "hubPattern": "*",
                      "urlTemplate": "https://example.com/chat/api/connect",
                    },
                  ],
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "Standard_S1",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                "identity": Object {
                  "principalId": "00000000-0000-0000-0000-000000000000",
                  "tenantId": "00000000-0000-0000-0000-000000000000",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "mySignalRService",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "mysignalrservice.service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Get",
          "exampleFile": "../examples/SignalR_Get.json",
          "operation": Object {},
          "operationId": "SignalR_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Update",
          "exampleFile": "../examples/SignalR_Update.json",
          "operation": Object {},
          "operationId": "SignalR_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "identity": Object {
                "type": "SystemAssigned",
              },
              "kind": "SignalR",
              "location": "eastus",
              "properties": Object {
                "cors": Object {
                  "allowedOrigins": Array [
                    "https://foo.com",
                    "https://bar.com",
                  ],
                },
                "disableAadAuth": false,
                "disableLocalAuth": false,
                "features": Array [
                  Object {
                    "flag": "ServiceMode",
                    "properties": Object {},
                    "value": "Serverless",
                  },
                  Object {
                    "flag": "EnableConnectivityLogs",
                    "properties": Object {},
                    "value": "True",
                  },
                  Object {
                    "flag": "EnableMessagingLogs",
                    "properties": Object {},
                    "value": "False",
                  },
                  Object {
                    "flag": "EnableLiveTrace",
                    "properties": Object {},
                    "value": "False",
                  },
                ],
                "networkACLs": Object {
                  "defaultAction": "Deny",
                  "privateEndpoints": Array [
                    Object {
                      "allow": Array [
                        "ServerConnection",
                      ],
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    },
                  ],
                  "publicNetwork": Object {
                    "allow": Array [
                      "ClientConnection",
                    ],
                  },
                },
                "publicNetworkAccess": "Enabled",
                "tls": Object {
                  "clientCertEnabled": false,
                },
                "upstream": Object {
                  "templates": Array [
                    Object {
                      "auth": Object {
                        "managedIdentity": Object {
                          "resource": "api://example",
                        },
                        "type": "ManagedIdentity",
                      },
                      "categoryPattern": "*",
                      "eventPattern": "connect,disconnect",
                      "hubPattern": "*",
                      "urlTemplate": "https://example.com/chat/api/connect",
                    },
                  ],
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "Standard_S1",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListKeys",
          "exampleFile": "../examples/SignalR_ListKeys.json",
          "operation": Object {},
          "operationId": "SignalR_ListKeys",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListKeys",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_RegenerateKey",
          "exampleFile": "../examples/SignalR_RegenerateKey.json",
          "operation": Object {},
          "operationId": "SignalR_RegenerateKey",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "keyType": "Primary",
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_RegenerateKey",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Restart",
          "exampleFile": "../examples/SignalR_Restart.json",
          "operation": Object {},
          "operationId": "SignalR_Restart",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "SignalR_Restart",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Usages_List",
          "exampleFile": "../examples/Usages_List.json",
          "operation": Object {},
          "operationId": "Usages_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "location": "$(location)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToMoreResults...",
                "value": Array [
                  Object {
                    "currentValue": 0,
                    "id": "/subscriptions/$(subscriptionId)/providers/Microsoft.SignalRService/locations/$(location)/usages/Usage1",
                    "limit": 100,
                    "name": Object {
                      "localizedValue": "Usage1",
                      "value": "Usage1",
                    },
                    "unit": "Count",
                  },
                  Object {
                    "currentValue": 0,
                    "id": "/subscriptions/$(subscriptionId)/providers/Microsoft.SignalRService/locations/$(location)/usages/Usage2",
                    "limit": 100,
                    "name": Object {
                      "localizedValue": "Usage2",
                      "value": "Usage2",
                    },
                    "unit": "Count",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Usages_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListByResourceGroup",
          "exampleFile": "../examples/SignalR_ListByResourceGroup.json",
          "operation": Object {},
          "operationId": "SignalR_ListByResourceGroup",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                    "identity": Object {
                      "principalId": "$(subscriptionId)",
                      "tenantId": "$(subscriptionId)",
                      "type": "SystemAssigned",
                    },
                    "kind": "SignalR",
                    "location": "eastus",
                    "name": "mySignalRService",
                    "properties": Object {
                      "cors": Object {
                        "allowedOrigins": Array [
                          "https://foo.com",
                          "https://bar.com",
                        ],
                      },
                      "disableAadAuth": false,
                      "disableLocalAuth": false,
                      "externalIP": "10.0.0.1",
                      "features": Array [
                        Object {
                          "flag": "ServiceMode",
                          "properties": Object {},
                          "value": "Serverless",
                        },
                        Object {
                          "flag": "EnableConnectivityLogs",
                          "properties": Object {},
                          "value": "True",
                        },
                        Object {
                          "flag": "EnableMessagingLogs",
                          "properties": Object {},
                          "value": "False",
                        },
                        Object {
                          "flag": "EnableLiveTrace",
                          "properties": Object {},
                          "value": "False",
                        },
                      ],
                      "hostName": "mysignalrservice.service.signalr.net",
                      "networkACLs": Object {
                        "defaultAction": "Deny",
                        "privateEndpoints": Array [
                          Object {
                            "allow": Array [
                              "ServerConnection",
                            ],
                            "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          },
                        ],
                        "publicNetwork": Object {
                          "allow": Array [
                            "ClientConnection",
                          ],
                        },
                      },
                      "privateEndpointConnections": Array [
                        Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "properties": Object {
                            "privateEndpoint": Object {
                              "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                            },
                            "privateLinkServiceConnectionState": Object {
                              "actionsRequired": "None",
                              "status": "Approved",
                            },
                            "provisioningState": "Succeeded",
                          },
                          "systemData": Object {
                            "createdAt": "2015-02-03T04:05:06Z",
                            "createdBy": "string",
                            "createdByType": "User",
                            "lastModifiedAt": "2015-02-03T04:05:06Z",
                            "lastModifiedBy": "string",
                            "lastModifiedByType": "User",
                          },
                          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "publicNetworkAccess": "Enabled",
                      "publicPort": 443,
                      "serverPort": 443,
                      "tls": Object {
                        "clientCertEnabled": true,
                      },
                      "upstream": Object {
                        "templates": Array [
                          Object {
                            "urlTemplate": "http://foo.com",
                          },
                        ],
                      },
                      "version": "1.0",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "Standard_S1",
                      "size": "S1",
                      "tier": "Standard",
                    },
                    "systemData": Object {
                      "createdAt": "2015-02-03T04:05:06Z",
                      "createdBy": "string",
                      "createdByType": "User",
                      "lastModifiedAt": "2015-02-03T04:05:06Z",
                      "lastModifiedBy": "string",
                      "lastModifiedByType": "User",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.SignalRService/SignalR",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListByResourceGroup",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListBySubscription",
          "exampleFile": "../examples/SignalR_ListBySubscription.json",
          "operation": Object {},
          "operationId": "SignalR_ListBySubscription",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                    "identity": Object {
                      "principalId": "$(subscriptionId)",
                      "tenantId": "$(subscriptionId)",
                      "type": "SystemAssigned",
                    },
                    "kind": "SignalR",
                    "location": "eastus",
                    "name": "mySignalRService",
                    "properties": Object {
                      "cors": Object {
                        "allowedOrigins": Array [
                          "https://foo.com",
                          "https://bar.com",
                        ],
                      },
                      "disableAadAuth": false,
                      "disableLocalAuth": false,
                      "externalIP": "10.0.0.1",
                      "features": Array [
                        Object {
                          "flag": "ServiceMode",
                          "properties": Object {},
                          "value": "Serverless",
                        },
                        Object {
                          "flag": "EnableConnectivityLogs",
                          "properties": Object {},
                          "value": "True",
                        },
                        Object {
                          "flag": "EnableMessagingLogs",
                          "properties": Object {},
                          "value": "False",
                        },
                        Object {
                          "flag": "EnableLiveTrace",
                          "properties": Object {},
                          "value": "False",
                        },
                      ],
                      "hostName": "mysignalrservice.service.signalr.net",
                      "networkACLs": Object {
                        "defaultAction": "Deny",
                        "privateEndpoints": Array [
                          Object {
                            "allow": Array [
                              "ServerConnection",
                            ],
                            "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          },
                        ],
                        "publicNetwork": Object {
                          "allow": Array [
                            "ClientConnection",
                          ],
                        },
                      },
                      "privateEndpointConnections": Array [
                        Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "properties": Object {
                            "privateEndpoint": Object {
                              "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                            },
                            "privateLinkServiceConnectionState": Object {
                              "actionsRequired": "None",
                              "status": "Approved",
                            },
                            "provisioningState": "Succeeded",
                          },
                          "systemData": Object {
                            "createdAt": "2015-02-03T04:05:06Z",
                            "createdBy": "string",
                            "createdByType": "User",
                            "lastModifiedAt": "2015-02-03T04:05:06Z",
                            "lastModifiedBy": "string",
                            "lastModifiedByType": "User",
                          },
                          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "publicNetworkAccess": "Enabled",
                      "publicPort": 443,
                      "serverPort": 443,
                      "tls": Object {
                        "clientCertEnabled": true,
                      },
                      "upstream": Object {
                        "templates": Array [
                          Object {
                            "urlTemplate": "http://foo.com",
                          },
                        ],
                      },
                      "version": "1.0",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "Standard_S1",
                      "size": "S1",
                      "tier": "Standard",
                    },
                    "systemData": Object {
                      "createdAt": "2015-02-03T04:05:06Z",
                      "createdBy": "string",
                      "createdByType": "User",
                      "lastModifiedAt": "2015-02-03T04:05:06Z",
                      "lastModifiedBy": "string",
                      "lastModifiedByType": "User",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.SignalRService/SignalR",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListBySubscription",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Operations_List",
          "exampleFile": "../examples/Operations_List.json",
          "operation": Object {},
          "operationId": "Operations_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "providers/Microsoft.SignalRService?$skipToken={opaqueString}",
                "value": Array [
                  Object {
                    "display": Object {
                      "description": "View the resource settings and configurations in the management portal or through API",
                      "operation": "Manage SignalR (read-only)",
                      "provider": "Microsoft.SignalRService",
                      "resource": "SignalR",
                    },
                    "isDataAction": false,
                    "name": "Microsoft.SignalRService/SignalR/read",
                    "properties": Object {},
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Operations_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Delete",
          "exampleFile": "../examples/SignalR_Delete.json",
          "operation": Object {},
          "operationId": "SignalR_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "SignalR_Delete",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "_scenarioDef": [Circular],
      "description": "Microsoft.SignalRService/Basic_CRUD",
      "requiredVariables": Array [
        "subscriptionId",
        "location",
      ],
      "scenario": "SignalR",
      "secretVariables": Array [],
      "shareScope": true,
      "steps": Array [
        Object {
          "armTemplate": "./peArmTemplate/Generate_Unique_name_template.json",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": Object {
              "resourceName": Object {
                "type": "string",
                "value": "[variables('name').value]",
              },
            },
            "resources": Array [],
            "variables": Object {
              "name": Object {
                "metadata": Object {
                  "description": "Name of the SignalR service.",
                },
                "type": "string",
                "value": "[concat('sw',uniqueString(resourceGroup().id))]",
              },
            },
          },
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "Generate_Unique_Name",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_CheckNameAvailability",
          "exampleFile": "../examples/SignalR_CheckNameAvailability.json",
          "operation": Object {},
          "operationId": "SignalR_CheckNameAvailability",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "location": "$(location)",
            "parameters": Object {
              "name": "$(resourceName)",
              "type": "Microsoft.SignalRService/SignalR",
            },
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "message": "The name is already taken. Please try a different name.",
                "nameAvailable": false,
                "reason": "AlreadyExists",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_CheckNameAvailability",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_CreateOrUpdate",
          "exampleFile": "../examples/SignalR_CreateOrUpdate.json",
          "operation": Object {},
          "operationId": "SignalR_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "identity": Object {
                "type": "SystemAssigned",
              },
              "kind": "SignalR",
              "location": "eastus",
              "properties": Object {
                "cors": Object {
                  "allowedOrigins": Array [
                    "https://foo.com",
                    "https://bar.com",
                  ],
                },
                "disableAadAuth": false,
                "disableLocalAuth": false,
                "features": Array [
                  Object {
                    "flag": "ServiceMode",
                    "properties": Object {},
                    "value": "Serverless",
                  },
                  Object {
                    "flag": "EnableConnectivityLogs",
                    "properties": Object {},
                    "value": "True",
                  },
                  Object {
                    "flag": "EnableMessagingLogs",
                    "properties": Object {},
                    "value": "False",
                  },
                  Object {
                    "flag": "EnableLiveTrace",
                    "properties": Object {},
                    "value": "False",
                  },
                ],
                "networkACLs": Object {
                  "defaultAction": "Deny",
                  "privateEndpoints": Array [
                    Object {
                      "allow": Array [
                        "ServerConnection",
                      ],
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    },
                  ],
                  "publicNetwork": Object {
                    "allow": Array [
                      "ClientConnection",
                    ],
                  },
                },
                "publicNetworkAccess": "Enabled",
                "tls": Object {
                  "clientCertEnabled": false,
                },
                "upstream": Object {
                  "templates": Array [
                    Object {
                      "auth": Object {
                        "managedIdentity": Object {
                          "resource": "api://example",
                        },
                        "type": "ManagedIdentity",
                      },
                      "categoryPattern": "*",
                      "eventPattern": "connect,disconnect",
                      "hubPattern": "*",
                      "urlTemplate": "https://example.com/chat/api/connect",
                    },
                  ],
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "Standard_S1",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
            "201": Object {
              "body": Object {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                "identity": Object {
                  "principalId": "00000000-0000-0000-0000-000000000000",
                  "tenantId": "00000000-0000-0000-0000-000000000000",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "mySignalRService",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "mysignalrservice.service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_CreateOrUpdate",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Get",
          "exampleFile": "../examples/SignalR_Get.json",
          "operation": Object {},
          "operationId": "SignalR_Get",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_Get",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Update",
          "exampleFile": "../examples/SignalR_Update.json",
          "operation": Object {},
          "operationId": "SignalR_Update",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "identity": Object {
                "type": "SystemAssigned",
              },
              "kind": "SignalR",
              "location": "eastus",
              "properties": Object {
                "cors": Object {
                  "allowedOrigins": Array [
                    "https://foo.com",
                    "https://bar.com",
                  ],
                },
                "disableAadAuth": false,
                "disableLocalAuth": false,
                "features": Array [
                  Object {
                    "flag": "ServiceMode",
                    "properties": Object {},
                    "value": "Serverless",
                  },
                  Object {
                    "flag": "EnableConnectivityLogs",
                    "properties": Object {},
                    "value": "True",
                  },
                  Object {
                    "flag": "EnableMessagingLogs",
                    "properties": Object {},
                    "value": "False",
                  },
                  Object {
                    "flag": "EnableLiveTrace",
                    "properties": Object {},
                    "value": "False",
                  },
                ],
                "networkACLs": Object {
                  "defaultAction": "Deny",
                  "privateEndpoints": Array [
                    Object {
                      "allow": Array [
                        "ServerConnection",
                      ],
                      "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    },
                  ],
                  "publicNetwork": Object {
                    "allow": Array [
                      "ClientConnection",
                    ],
                  },
                },
                "publicNetworkAccess": "Enabled",
                "tls": Object {
                  "clientCertEnabled": false,
                },
                "upstream": Object {
                  "templates": Array [
                    Object {
                      "auth": Object {
                        "managedIdentity": Object {
                          "resource": "api://example",
                        },
                        "type": "ManagedIdentity",
                      },
                      "categoryPattern": "*",
                      "eventPattern": "connect,disconnect",
                      "hubPattern": "*",
                      "urlTemplate": "https://example.com/chat/api/connect",
                    },
                  ],
                },
              },
              "sku": Object {
                "capacity": 1,
                "name": "Standard_S1",
                "tier": "Standard",
              },
              "tags": Object {
                "key1": "value1",
              },
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)",
                "identity": Object {
                  "principalId": "$(subscriptionId)",
                  "tenantId": "$(subscriptionId)",
                  "type": "SystemAssigned",
                },
                "kind": "SignalR",
                "location": "eastus",
                "name": "$(resourceName)",
                "properties": Object {
                  "cors": Object {
                    "allowedOrigins": Array [
                      "https://foo.com",
                      "https://bar.com",
                    ],
                  },
                  "disableAadAuth": false,
                  "disableLocalAuth": false,
                  "externalIP": "10.0.0.1",
                  "features": Array [
                    Object {
                      "flag": "ServiceMode",
                      "properties": Object {},
                      "value": "Serverless",
                    },
                    Object {
                      "flag": "EnableConnectivityLogs",
                      "properties": Object {},
                      "value": "True",
                    },
                    Object {
                      "flag": "EnableMessagingLogs",
                      "properties": Object {},
                      "value": "False",
                    },
                    Object {
                      "flag": "EnableLiveTrace",
                      "properties": Object {},
                      "value": "False",
                    },
                  ],
                  "hostName": "$(resourceName).service.signalr.net",
                  "networkACLs": Object {
                    "defaultAction": "Deny",
                    "privateEndpoints": Array [
                      Object {
                        "allow": Array [
                          "ServerConnection",
                        ],
                        "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      },
                    ],
                    "publicNetwork": Object {
                      "allow": Array [
                        "ClientConnection",
                      ],
                    },
                  },
                  "privateEndpointConnections": Array [
                    Object {
                      "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/$(resourceName)/privateEndpointConnections/$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "name": "$(resourceName).1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "properties": Object {
                        "privateEndpoint": Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                        },
                        "privateLinkServiceConnectionState": Object {
                          "actionsRequired": "None",
                          "status": "Approved",
                        },
                        "provisioningState": "Succeeded",
                      },
                      "systemData": Object {
                        "createdAt": "2015-02-03T04:05:06Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2015-02-03T04:05:06Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User",
                      },
                      "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    },
                  ],
                  "provisioningState": "Succeeded",
                  "publicNetworkAccess": "Enabled",
                  "publicPort": 443,
                  "serverPort": 443,
                  "tls": Object {
                    "clientCertEnabled": true,
                  },
                  "upstream": Object {
                    "templates": Array [
                      Object {
                        "urlTemplate": "http://foo.com",
                      },
                    ],
                  },
                  "version": "1.0",
                },
                "sku": Object {
                  "capacity": 1,
                  "name": "Standard_S1",
                  "size": "S1",
                  "tier": "Standard",
                },
                "systemData": Object {
                  "createdAt": "2015-02-03T04:05:06Z",
                  "createdBy": "string",
                  "createdByType": "User",
                  "lastModifiedAt": "2015-02-03T04:05:06Z",
                  "lastModifiedBy": "string",
                  "lastModifiedByType": "User",
                },
                "tags": Object {
                  "key1": "value1",
                },
                "type": "Microsoft.SignalRService/SignalR",
              },
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_Update",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListKeys",
          "exampleFile": "../examples/SignalR_ListKeys.json",
          "operation": Object {},
          "operationId": "SignalR_ListKeys",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListKeys",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_RegenerateKey",
          "exampleFile": "../examples/SignalR_RegenerateKey.json",
          "operation": Object {},
          "operationId": "SignalR_RegenerateKey",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "parameters": Object {
              "keyType": "Primary",
            },
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_RegenerateKey",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Restart",
          "exampleFile": "../examples/SignalR_Restart.json",
          "operation": Object {},
          "operationId": "SignalR_Restart",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "202": Object {
              "body": Object {},
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "SignalR_Restart",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Usages_List",
          "exampleFile": "../examples/Usages_List.json",
          "operation": Object {},
          "operationId": "Usages_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "location": "$(location)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToMoreResults...",
                "value": Array [
                  Object {
                    "currentValue": 0,
                    "id": "/subscriptions/$(subscriptionId)/providers/Microsoft.SignalRService/locations/$(location)/usages/Usage1",
                    "limit": 100,
                    "name": Object {
                      "localizedValue": "Usage1",
                      "value": "Usage1",
                    },
                    "unit": "Count",
                  },
                  Object {
                    "currentValue": 0,
                    "id": "/subscriptions/$(subscriptionId)/providers/Microsoft.SignalRService/locations/$(location)/usages/Usage2",
                    "limit": 100,
                    "name": Object {
                      "localizedValue": "Usage2",
                      "value": "Usage2",
                    },
                    "unit": "Count",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Usages_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListByResourceGroup",
          "exampleFile": "../examples/SignalR_ListByResourceGroup.json",
          "operation": Object {},
          "operationId": "SignalR_ListByResourceGroup",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                    "identity": Object {
                      "principalId": "$(subscriptionId)",
                      "tenantId": "$(subscriptionId)",
                      "type": "SystemAssigned",
                    },
                    "kind": "SignalR",
                    "location": "eastus",
                    "name": "mySignalRService",
                    "properties": Object {
                      "cors": Object {
                        "allowedOrigins": Array [
                          "https://foo.com",
                          "https://bar.com",
                        ],
                      },
                      "disableAadAuth": false,
                      "disableLocalAuth": false,
                      "externalIP": "10.0.0.1",
                      "features": Array [
                        Object {
                          "flag": "ServiceMode",
                          "properties": Object {},
                          "value": "Serverless",
                        },
                        Object {
                          "flag": "EnableConnectivityLogs",
                          "properties": Object {},
                          "value": "True",
                        },
                        Object {
                          "flag": "EnableMessagingLogs",
                          "properties": Object {},
                          "value": "False",
                        },
                        Object {
                          "flag": "EnableLiveTrace",
                          "properties": Object {},
                          "value": "False",
                        },
                      ],
                      "hostName": "mysignalrservice.service.signalr.net",
                      "networkACLs": Object {
                        "defaultAction": "Deny",
                        "privateEndpoints": Array [
                          Object {
                            "allow": Array [
                              "ServerConnection",
                            ],
                            "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          },
                        ],
                        "publicNetwork": Object {
                          "allow": Array [
                            "ClientConnection",
                          ],
                        },
                      },
                      "privateEndpointConnections": Array [
                        Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "properties": Object {
                            "privateEndpoint": Object {
                              "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                            },
                            "privateLinkServiceConnectionState": Object {
                              "actionsRequired": "None",
                              "status": "Approved",
                            },
                            "provisioningState": "Succeeded",
                          },
                          "systemData": Object {
                            "createdAt": "2015-02-03T04:05:06Z",
                            "createdBy": "string",
                            "createdByType": "User",
                            "lastModifiedAt": "2015-02-03T04:05:06Z",
                            "lastModifiedBy": "string",
                            "lastModifiedByType": "User",
                          },
                          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "publicNetworkAccess": "Enabled",
                      "publicPort": 443,
                      "serverPort": 443,
                      "tls": Object {
                        "clientCertEnabled": true,
                      },
                      "upstream": Object {
                        "templates": Array [
                          Object {
                            "urlTemplate": "http://foo.com",
                          },
                        ],
                      },
                      "version": "1.0",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "Standard_S1",
                      "size": "S1",
                      "tier": "Standard",
                    },
                    "systemData": Object {
                      "createdAt": "2015-02-03T04:05:06Z",
                      "createdBy": "string",
                      "createdByType": "User",
                      "lastModifiedAt": "2015-02-03T04:05:06Z",
                      "lastModifiedBy": "string",
                      "lastModifiedByType": "User",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.SignalRService/SignalR",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListByResourceGroup",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_ListBySubscription",
          "exampleFile": "../examples/SignalR_ListBySubscription.json",
          "operation": Object {},
          "operationId": "SignalR_ListBySubscription",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "value": Array [
                  Object {
                    "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
                    "identity": Object {
                      "principalId": "$(subscriptionId)",
                      "tenantId": "$(subscriptionId)",
                      "type": "SystemAssigned",
                    },
                    "kind": "SignalR",
                    "location": "eastus",
                    "name": "mySignalRService",
                    "properties": Object {
                      "cors": Object {
                        "allowedOrigins": Array [
                          "https://foo.com",
                          "https://bar.com",
                        ],
                      },
                      "disableAadAuth": false,
                      "disableLocalAuth": false,
                      "externalIP": "10.0.0.1",
                      "features": Array [
                        Object {
                          "flag": "ServiceMode",
                          "properties": Object {},
                          "value": "Serverless",
                        },
                        Object {
                          "flag": "EnableConnectivityLogs",
                          "properties": Object {},
                          "value": "True",
                        },
                        Object {
                          "flag": "EnableMessagingLogs",
                          "properties": Object {},
                          "value": "False",
                        },
                        Object {
                          "flag": "EnableLiveTrace",
                          "properties": Object {},
                          "value": "False",
                        },
                      ],
                      "hostName": "mysignalrservice.service.signalr.net",
                      "networkACLs": Object {
                        "defaultAction": "Deny",
                        "privateEndpoints": Array [
                          Object {
                            "allow": Array [
                              "ServerConnection",
                            ],
                            "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          },
                        ],
                        "publicNetwork": Object {
                          "allow": Array [
                            "ClientConnection",
                          ],
                        },
                      },
                      "privateEndpointConnections": Array [
                        Object {
                          "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "name": "mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                          "properties": Object {
                            "privateEndpoint": Object {
                              "id": "/subscriptions/$(subscriptionId)/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint",
                            },
                            "privateLinkServiceConnectionState": Object {
                              "actionsRequired": "None",
                              "status": "Approved",
                            },
                            "provisioningState": "Succeeded",
                          },
                          "systemData": Object {
                            "createdAt": "2015-02-03T04:05:06Z",
                            "createdBy": "string",
                            "createdByType": "User",
                            "lastModifiedAt": "2015-02-03T04:05:06Z",
                            "lastModifiedBy": "string",
                            "lastModifiedByType": "User",
                          },
                          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                        },
                      ],
                      "provisioningState": "Succeeded",
                      "publicNetworkAccess": "Enabled",
                      "publicPort": 443,
                      "serverPort": 443,
                      "tls": Object {
                        "clientCertEnabled": true,
                      },
                      "upstream": Object {
                        "templates": Array [
                          Object {
                            "urlTemplate": "http://foo.com",
                          },
                        ],
                      },
                      "version": "1.0",
                    },
                    "sku": Object {
                      "capacity": 1,
                      "name": "Standard_S1",
                      "size": "S1",
                      "tier": "Standard",
                    },
                    "systemData": Object {
                      "createdAt": "2015-02-03T04:05:06Z",
                      "createdBy": "string",
                      "createdByType": "User",
                      "lastModifiedAt": "2015-02-03T04:05:06Z",
                      "lastModifiedBy": "string",
                      "lastModifiedByType": "User",
                    },
                    "tags": Object {
                      "key1": "value1",
                    },
                    "type": "Microsoft.SignalRService/SignalR",
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "SignalR_ListBySubscription",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "Operations_List",
          "exampleFile": "../examples/Operations_List.json",
          "operation": Object {},
          "operationId": "Operations_List",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {
                "nextLink": "providers/Microsoft.SignalRService?$skipToken={opaqueString}",
                "value": Array [
                  Object {
                    "display": Object {
                      "description": "View the resource settings and configurations in the management portal or through API",
                      "operation": "Manage SignalR (read-only)",
                      "provider": "Microsoft.SignalRService",
                      "resource": "SignalR",
                    },
                    "isDataAction": false,
                    "name": "Microsoft.SignalRService/SignalR/read",
                    "properties": Object {},
                  },
                ],
              },
            },
          },
          "secretVariables": Array [],
          "step": "Operations_List",
          "type": "restCall",
          "variables": Object {},
        },
        Object {
          "description": "SignalR_Delete",
          "exampleFile": "../examples/SignalR_Delete.json",
          "operation": Object {},
          "operationId": "SignalR_Delete",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-06-01-preview",
            "resourceGroupName": "myResourceGroup",
            "resourceName": "$(resourceName)",
            "subscriptionId": "$(subscriptionId)",
          },
          "requiredVariables": Array [],
          "responses": Object {
            "200": Object {
              "body": Object {},
            },
            "202": Object {
              "headers": Object {
                "Azure-AsyncOperation": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationStatus...",
                "Location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToOperationResult...",
              },
            },
            "204": Object {},
          },
          "secretVariables": Array [],
          "step": "SignalR_Delete",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "variables": Object {
        "resourceName": Object {
          "type": "string",
        },
      },
    },
  ],
  "scope": "ResourceGroup",
  "secretVariables": Array [],
  "variables": Object {},
}
`;

exports[`ApiScenarioLoader load valid scenario with deps - compute 1`] = `
Object {
  "_filePath": "Microsoft.Compute/stable/2021-11-01/scenarios/quickstart_deps.yaml",
  "cleanUpSteps": Array [],
  "prepareSteps": Array [
    Object {
      "armTemplate": "./templates/deps.json",
      "armTemplatePayload": Object {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "outputs": Object {
          "vmNicId": Object {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkInterfaces', variables('VMNicName'))]",
          },
        },
        "parameters": Object {
          "vmName": Object {
            "defaultValue": "$(vmName)",
            "type": "string",
          },
        },
        "resources": Array [
          Object {
            "apiVersion": "2015-06-15",
            "dependsOn": Array [],
            "location": "[resourceGroup().location]",
            "name": "[variables('VNETName')]",
            "properties": Object {
              "addressSpace": Object {
                "addressPrefixes": Array [
                  "10.0.0.0/16",
                ],
              },
              "subnets": Array [
                Object {
                  "name": "[variables('SubnetName')]",
                  "properties": Object {
                    "addressPrefix": "10.0.0.0/24",
                  },
                },
              ],
            },
            "tags": Object {},
            "type": "Microsoft.Network/virtualNetworks",
          },
          Object {
            "apiVersion": "2015-06-15",
            "dependsOn": Array [],
            "location": "[resourceGroup().location]",
            "name": "[variables('NSGName')]",
            "properties": Object {
              "securityRules": Array [
                Object {
                  "name": "rdp",
                  "properties": Object {
                    "access": "Allow",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "3389",
                    "direction": "Inbound",
                    "priority": 1000,
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                  },
                },
              ],
            },
            "tags": Object {},
            "type": "Microsoft.Network/networkSecurityGroups",
          },
          Object {
            "apiVersion": "2018-01-01",
            "dependsOn": Array [],
            "location": "[resourceGroup().location]",
            "name": "[variables('PublicIPName')]",
            "properties": Object {
              "publicIPAllocationMethod": "Static",
            },
            "sku": Object {
              "name": "Standard",
            },
            "tags": Object {},
            "type": "Microsoft.Network/publicIPAddresses",
          },
          Object {
            "apiVersion": "2015-06-15",
            "dependsOn": Array [
              "[concat('Microsoft.Network/virtualNetworks/', variables('VNETName'))]",
              "[concat('Microsoft.Network/networkSecurityGroups/', variables('NSGName'))]",
              "[concat('Microsoft.Network/publicIPAddresses/', variables('PublicIPName'))]",
            ],
            "location": "[resourceGroup().location]",
            "name": "[variables('VMNicName')]",
            "properties": Object {
              "ipConfigurations": Array [
                Object {
                  "name": "ipconfigmyVM",
                  "properties": Object {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": Object {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIPName'))]",
                    },
                    "subnet": Object {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNETName'), variables('SubnetName'))]",
                    },
                  },
                },
              ],
              "networkSecurityGroup": Object {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]",
              },
            },
            "tags": Object {},
            "type": "Microsoft.Network/networkInterfaces",
          },
        ],
        "variables": Object {
          "NSGName": "[concat(parameters('vmName'), '-NSG')]",
          "PublicIPName": "[concat(parameters('vmName'), '-PublicIP')]",
          "SubnetName": "[concat(parameters('vmName'), '-Subnet')]",
          "VMNicName": "[concat(parameters('vmName'), '-VMNic')]",
          "VNETName": "[concat(parameters('vmName'), '-VNET')]",
        },
      },
      "isPrepareStep": true,
      "outputVariables": Object {},
      "requiredVariables": Array [],
      "secretVariables": Array [],
      "step": "createDeps",
      "type": "armTemplateDeployment",
      "variables": Object {},
    },
  ],
  "requiredVariables": Array [
    "adminPassword",
    "subscriptionId",
    "location",
  ],
  "scenarios": Array [
    Object {
      "_resolvedSteps": Array [
        Object {
          "armTemplate": "./templates/deps.json",
          "armTemplatePayload": Object {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": Object {
              "vmNicId": Object {
                "type": "string",
                "value": "[resourceId('Microsoft.Network/networkInterfaces', variables('VMNicName'))]",
              },
            },
            "parameters": Object {
              "vmName": Object {
                "defaultValue": "$(vmName)",
                "type": "string",
              },
            },
            "resources": Array [
              Object {
                "apiVersion": "2015-06-15",
                "dependsOn": Array [],
                "location": "[resourceGroup().location]",
                "name": "[variables('VNETName')]",
                "properties": Object {
                  "addressSpace": Object {
                    "addressPrefixes": Array [
                      "10.0.0.0/16",
                    ],
                  },
                  "subnets": Array [
                    Object {
                      "name": "[variables('SubnetName')]",
                      "properties": Object {
                        "addressPrefix": "10.0.0.0/24",
                      },
                    },
                  ],
                },
                "tags": Object {},
                "type": "Microsoft.Network/virtualNetworks",
              },
              Object {
                "apiVersion": "2015-06-15",
                "dependsOn": Array [],
                "location": "[resourceGroup().location]",
                "name": "[variables('NSGName')]",
                "properties": Object {
                  "securityRules": Array [
                    Object {
                      "name": "rdp",
                      "properties": Object {
                        "access": "Allow",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "3389",
                        "direction": "Inbound",
                        "priority": 1000,
                        "protocol": "Tcp",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                      },
                    },
                  ],
                },
                "tags": Object {},
                "type": "Microsoft.Network/networkSecurityGroups",
              },
              Object {
                "apiVersion": "2018-01-01",
                "dependsOn": Array [],
                "location": "[resourceGroup().location]",
                "name": "[variables('PublicIPName')]",
                "properties": Object {
                  "publicIPAllocationMethod": "Static",
                },
                "sku": Object {
                  "name": "Standard",
                },
                "tags": Object {},
                "type": "Microsoft.Network/publicIPAddresses",
              },
              Object {
                "apiVersion": "2015-06-15",
                "dependsOn": Array [
                  "[concat('Microsoft.Network/virtualNetworks/', variables('VNETName'))]",
                  "[concat('Microsoft.Network/networkSecurityGroups/', variables('NSGName'))]",
                  "[concat('Microsoft.Network/publicIPAddresses/', variables('PublicIPName'))]",
                ],
                "location": "[resourceGroup().location]",
                "name": "[variables('VMNicName')]",
                "properties": Object {
                  "ipConfigurations": Array [
                    Object {
                      "name": "ipconfigmyVM",
                      "properties": Object {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": Object {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIPName'))]",
                        },
                        "subnet": Object {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNETName'), variables('SubnetName'))]",
                        },
                      },
                    },
                  ],
                  "networkSecurityGroup": Object {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]",
                  },
                },
                "tags": Object {},
                "type": "Microsoft.Network/networkInterfaces",
              },
            ],
            "variables": Object {
              "NSGName": "[concat(parameters('vmName'), '-NSG')]",
              "PublicIPName": "[concat(parameters('vmName'), '-PublicIP')]",
              "SubnetName": "[concat(parameters('vmName'), '-Subnet')]",
              "VMNicName": "[concat(parameters('vmName'), '-VMNic')]",
              "VNETName": "[concat(parameters('vmName'), '-VNET')]",
            },
          },
          "isPrepareStep": true,
          "outputVariables": Object {},
          "requiredVariables": Array [],
          "secretVariables": Array [],
          "step": "createDeps",
          "type": "armTemplateDeployment",
          "variables": Object {},
        },
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "additionalCapabilities": Object {},
                "hardwareProfile": Object {
                  "vmSize": "Standard_A2_v2",
                },
                "networkProfile": Object {
                  "networkInterfaces": Array [
                    Object {
                      "id": "$(vmNicId)",
                    },
                  ],
                },
                "osProfile": Object {
                  "adminPassword": "$(adminPassword)",
                  "adminUsername": "azureuser",
                  "computerName": "$(vmName)",
                },
                "storageProfile": Object {
                  "imageReference": Object {
                    "offer": "WindowsServer",
                    "publisher": "MicrosoftWindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest",
                  },
                  "osDisk": Object {
                    "caching": "ReadWrite",
                    "createOption": "fromImage",
                  },
                },
              },
            },
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createVM",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "_scenarioDef": [Circular],
      "description": "",
      "requiredVariables": Array [
        "adminPassword",
        "subscriptionId",
        "location",
      ],
      "scenario": "VirtualMachineScenario",
      "secretVariables": Array [],
      "shareScope": true,
      "steps": Array [
        Object {
          "description": undefined,
          "operation": Object {},
          "operationId": "VirtualMachines_CreateOrUpdate",
          "outputVariables": Object {},
          "parameters": Object {
            "api-version": "2021-11-01",
            "parameters": Object {
              "location": "$(location)",
              "properties": Object {
                "additionalCapabilities": Object {},
                "hardwareProfile": Object {
                  "vmSize": "Standard_A2_v2",
                },
                "networkProfile": Object {
                  "networkInterfaces": Array [
                    Object {
                      "id": "$(vmNicId)",
                    },
                  ],
                },
                "osProfile": Object {
                  "adminPassword": "$(adminPassword)",
                  "adminUsername": "azureuser",
                  "computerName": "$(vmName)",
                },
                "storageProfile": Object {
                  "imageReference": Object {
                    "offer": "WindowsServer",
                    "publisher": "MicrosoftWindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest",
                  },
                  "osDisk": Object {
                    "caching": "ReadWrite",
                    "createOption": "fromImage",
                  },
                },
              },
            },
            "vmName": "test",
          },
          "requiredVariables": Array [],
          "responses": Object {},
          "secretVariables": Array [],
          "step": "createVM",
          "type": "restCall",
          "variables": Object {},
        },
      ],
      "variables": Object {},
    },
  ],
  "scope": "ResourceGroup",
  "secretVariables": Array [
    "adminPassword",
  ],
  "variables": Object {
    "vmName": Object {
      "type": "string",
      "value": "test",
    },
    "vmNicId": Object {
      "type": "string",
    },
  },
}
`;
