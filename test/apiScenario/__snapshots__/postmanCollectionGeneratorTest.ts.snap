// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`postmanCollectionGenerator should generate PostmanCollection - enableTestProxy 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunIdTestProxy",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageQuickStart",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "",
                  "pm.test(\\"Started TestProxy recording\\", function() {",
                  "    pm.response.to.be.success;",
                  "    pm.response.to.have.header(\\"x-recording-id\\");",
                  "    pm.variables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "startTestProxyRecording",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"x-recording-file\\": \\"./recordings/storageQuickStart_jestRunIdTestProxy.json\\"}",
            },
            "method": "POST",
            "url": Object {
              "host": Array [
                "localhost",
              ],
              "path": Array [
                "record",
                "start",
              ],
              "port": "5000",
              "protocol": "http",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "event": Array [
            Object {
              "id": "9120qs",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "oipyp5",
                "type": "text/javascript",
              },
            },
          ],
          "id": "clnzjc",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "k8hcud",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "g4l6nv",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "mcbyik",
                "type": "text/javascript",
              },
            },
          ],
          "id": "39l4a3",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "4fy274",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "vov58h",
                "type": "text/javascript",
              },
            },
          ],
          "id": "zvuzjs",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "gbupa4",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "j55iye",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "hfy1hi",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1gju0k",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "7wi32c",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "1rcvet",
                "type": "text/javascript",
              },
            },
          ],
          "id": "hlqn5m",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "basic",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "1ueh28",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"star4of8l2\\");",
            ],
            "id": "3q0yb6",
            "type": "text/javascript",
          },
        },
      ],
      "id": "3l45xk",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "m388ep",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "qq5z84",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6w00ic",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "cb8v3t",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "x7qdfp",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j917fd",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "rxgyxc",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "igg58r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "zfkej6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "un6yyw",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "h1l4hw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "ezqs5q",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9e4snq",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "overrideVariable",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "d39qgw",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"foobar9vqoea\\");",
            ],
            "id": "jhzmpv",
            "type": "text/javascript",
          },
        },
      ],
      "id": "9atymt",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "6qbw4d",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "bhuvqx",
                "type": "text/javascript",
              },
            },
          ],
          "id": "x6exws",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "i544h5",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "db187u",
                "type": "text/javascript",
              },
            },
          ],
          "id": "le21m4",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "7oxzx1",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "cdpopn",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "5sx5dw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ssi2a8",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "8ew1jk",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "x6oaag",
                "type": "text/javascript",
              },
            },
          ],
          "id": "49cuyt",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
          "event": Array [
            Object {
              "id": "3zgew6",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"deletedAccountName\\", \\"foobar2tccjb\\");",
                ],
                "id": "wpbvc4",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "6rfjty",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "hvl7jw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "b9q1ra",
          "name": "DeletedAccounts_Get",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "locations",
                ":location",
                "deletedAccounts",
                ":deletedAccountName",
              ],
              "query": Array [
                Object {
                  "key": "test",
                  "value": "1",
                },
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "deletedAccountName",
                  "type": "any",
                  "value": "{{deletedAccountName}}",
                },
                Object {
                  "key": "location",
                  "type": "any",
                  "value": "{{location}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "primitiveParameter",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "iqxxs7",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
            ],
            "id": "yh0zn8",
            "type": "text/javascript",
          },
        },
      ],
      "id": "odc2fc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "p03jp7",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
                ],
                "id": "k97wbk",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "mge3qz",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "spylrr",
                "type": "text/javascript",
              },
            },
          ],
          "id": "h0fgel",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "j58bgv",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "q1cfqt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "9ezdsu",
                "type": "text/javascript",
              },
            },
          ],
          "id": "dm09uw",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "lk4mhm",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "ivu9xy",
                "type": "text/javascript",
              },
            },
          ],
          "id": "vm8psu",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "patchVariables",
    },
    Object {
      "event": Array [],
      "id": "eq5yyi",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "kqos97",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "bsqg1o",
                "type": "text/javascript",
              },
            },
          ],
          "id": "qh9z16",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "event": Array [
            Object {
              "id": "65xm09",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "",
                  "pm.test(\\"Stopped TestProxy recording\\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                ],
                "id": "tyolxx",
                "type": "text/javascript",
              },
            },
          ],
          "id": "a7lkxi",
          "name": "stopTestProxyRecording",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "localhost",
              ],
              "path": Array [
                "record",
                "stop",
              ],
              "port": "5000",
              "protocol": "http",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageBasicExample 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageBasicExample.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageBasicExample",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "clnzjc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"exampleName\\":\\"../examples/StorageAccountCheckNameAvailability.json\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "oipyp5",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "k8hcud",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9120qs",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreate.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hlqn5m",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "7wi32c",
                "type": "text/javascript",
              },
            },
          ],
          "id": "39l4a3",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_GRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"extendedLocation\\": {
    \\"type\\": \\"EdgeZone\\",
    \\"name\\": \\"losangeles001\\"
  },
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"isHnsEnabled\\": true,
    \\"isSftpEnabled\\": true,
    \\"allowBlobPublicAccess\\": false,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"requireInfrastructureEncryption\\": false,
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  },
  \\"tags\\": {
    \\"key1\\": \\"value1\\",
    \\"key2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "g4l6nv",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "zvuzjs",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "gbupa4",
                "type": "text/javascript",
              },
            },
          ],
          "id": "mcbyik",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "j55iye",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "hfy1hi",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1gju0k",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Update\\",\\"exampleName\\":\\"../examples/StorageAccountUpdate.json\\",\\"itemName\\":\\"updateStorageAccount\\",\\"step\\":\\"updateStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "4fy274",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "vov58h",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1rcvet",
          "name": "updateStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"allowBlobPublicAccess\\": false,
    \\"isSftpEnabled\\": true,
    \\"isLocalUserEnabled\\": true,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"networkAcls\\": {
      \\"resourceAccessRules\\": [
        {
          \\"tenantId\\": \\"72f988bf-86f1-41af-91ab-2d7cd011db47\\",
          \\"resourceId\\": \\"/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/{{resourceGroupName}}/providers/Microsoft.Synapse/workspaces/testworkspace\\"
        }
      ],
      \\"defaultAction\\": \\"Allow\\"
    },
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PATCH",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_GetProperties\\",\\"exampleName\\":\\"../examples/StorageAccountGetProperties.json\\",\\"itemName\\":\\"getStorageAccount\\",\\"step\\":\\"getStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "1ueh28",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3q0yb6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "3l45xk",
          "name": "getStorageAccount",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Delete\\",\\"exampleName\\":\\"../examples/StorageAccountDelete.json\\",\\"itemName\\":\\"deleteStorageAccount\\",\\"step\\":\\"deleteStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "m388ep",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "qq5z84",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6w00ic",
          "name": "deleteStorageAccount",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "StorageBasicExample",
    },
    Object {
      "event": Array [],
      "id": "rxgyxc",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "un6yyw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "igg58r",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j917fd",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageQuickStart 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageQuickStart",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "clnzjc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "oipyp5",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "k8hcud",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9120qs",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hlqn5m",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "7wi32c",
                "type": "text/javascript",
              },
            },
          ],
          "id": "39l4a3",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "g4l6nv",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "zvuzjs",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "gbupa4",
                "type": "text/javascript",
              },
            },
          ],
          "id": "mcbyik",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "j55iye",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "hfy1hi",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1gju0k",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "basic",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "4fy274",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"star4of8l2\\");",
            ],
            "id": "vov58h",
            "type": "text/javascript",
          },
        },
      ],
      "id": "1rcvet",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "1ueh28",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "3q0yb6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "3l45xk",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "9e4snq",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "h1l4hw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6w00ic",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "m388ep",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "j917fd",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "rxgyxc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "qq5z84",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "igg58r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "zfkej6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "un6yyw",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "overrideVariable",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "x7qdfp",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"foobarezqs5q\\");",
            ],
            "id": "9vqoea",
            "type": "text/javascript",
          },
        },
      ],
      "id": "cb8v3t",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "d39qgw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "jhzmpv",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9atymt",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "49cuyt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "8ew1jk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "x6exws",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "6qbw4d",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "le21m4",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "7oxzx1",
                "type": "text/javascript",
              },
            },
          ],
          "id": "bhuvqx",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "cdpopn",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "5sx5dw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ssi2a8",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
          "event": Array [
            Object {
              "id": "db187u",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"deletedAccountName\\", \\"foobarx6oaag\\");",
                ],
                "id": "2tccjb",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "b9q1ra",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3zgew6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "i544h5",
          "name": "DeletedAccounts_Get",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "locations",
                ":location",
                "deletedAccounts",
                ":deletedAccountName",
              ],
              "query": Array [
                Object {
                  "key": "test",
                  "value": "1",
                },
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "deletedAccountName",
                  "type": "any",
                  "value": "{{deletedAccountName}}",
                },
                Object {
                  "key": "location",
                  "type": "any",
                  "value": "{{location}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "primitiveParameter",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "6rfjty",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
            ],
            "id": "hvl7jw",
            "type": "text/javascript",
          },
        },
      ],
      "id": "wpbvc4",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "iqxxs7",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
                ],
                "id": "yh0zn8",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "vm8psu",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "lk4mhm",
                "type": "text/javascript",
              },
            },
          ],
          "id": "odc2fc",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "h0fgel",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "k97wbk",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "j58bgv",
                "type": "text/javascript",
              },
            },
          ],
          "id": "p03jp7",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "q1cfqt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "9ezdsu",
                "type": "text/javascript",
              },
            },
          ],
          "id": "dm09uw",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "patchVariables",
    },
    Object {
      "event": Array [],
      "id": "mge3qz",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "spylrr",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "qh9z16",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ivu9xy",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - testKeyReplace 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "r4of8l",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "nprcrj",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/testKeyReplace.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "testKeyReplace",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "gzre88",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "zq9w6n",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "8gypdh",
                "type": "text/javascript",
              },
            },
          ],
          "id": "tgp8uv",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "3747vc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "gbupa4",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "1gju0k",
                "type": "text/javascript",
              },
            },
          ],
          "id": "clnzjc",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "9120qs",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "k8hcud",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "39l4a3",
                "type": "text/javascript",
              },
            },
          ],
          "id": "oipyp5",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "mcbyik",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "zvuzjs",
                "type": "text/javascript",
              },
            },
          ],
          "id": "g4l6nv",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount1_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "1ueh28",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "3q0yb6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j55iye",
          "name": "createStorageAccount1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
          "event": Array [],
          "id": "hfy1hi",
          "name": "_createStorageAccount1_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "7wi32c",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount1_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount1_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "1rcvet",
                "type": "text/javascript",
              },
            },
          ],
          "id": "hlqn5m",
          "name": "_createStorageAccount1_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "vov58h",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3l45xk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "4fy274",
          "name": "_createStorageAccount1_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "StorageBasicExample",
    },
    Object {
      "event": Array [],
      "id": "m388ep",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "qq5z84",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "j917fd",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6w00ic",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;
