// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`postmanCollectionGenerator should generate PostmanCollection - enableTestProxy 1`] = `
Array [
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "tgp8uv",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "nprcrj",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunIdTestProxy",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"basic\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "basic",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "event": Array [
          Object {
            "id": "8gypdh",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Started TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "    pm.response.to.have.header(\\"x-recording-id\\");",
                "    pm.collectionVariables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                "});",
              ],
              "id": "zq9w6n",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gzre88",
        "name": "startTestProxyRecording",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"x-recording-file\\": \\"./recordings/basic_jestRunIdTestProxy.json\\"}",
          },
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "start",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"prepare\\"}",
        "event": Array [
          Object {
            "id": "9120qs",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "clnzjc",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3747vc",
        "name": "createResourceGroup",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"location\\":\\"{{location}}\\"}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "39l4a3",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "k8hcud",
              "type": "text/javascript",
            },
          },
        ],
        "id": "oipyp5",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "zvuzjs",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "mcbyik",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "1gju0k",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));",
                "}",
              ],
              "id": "gbupa4",
              "type": "text/javascript",
            },
          },
        ],
        "id": "g4l6nv",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "4fy274",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "qq5z84",
              "type": "text/javascript",
            },
          },
        ],
        "id": "j55iye",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "7wi32c",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "hlqn5m",
              "type": "text/javascript",
            },
          },
        ],
        "id": "hfy1hi",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "1ueh28",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "3l45xk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "vov58h",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "m388ep",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Stopped TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "});",
                "",
              ],
              "id": "6w00ic",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3q0yb6",
        "name": "stopTestProxyRecording",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "stop",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "rxgyxc",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "j917fd",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunIdTestProxy",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"overrideVariable\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "overrideVariable",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "event": Array [
          Object {
            "id": "zfkej6",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Started TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "    pm.response.to.have.header(\\"x-recording-id\\");",
                "    pm.collectionVariables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                "});",
              ],
              "id": "igg58r",
              "type": "text/javascript",
            },
          },
        ],
        "id": "un6yyw",
        "name": "startTestProxyRecording",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"x-recording-file\\": \\"./recordings/overrideVariable_jestRunIdTestProxy.json\\"}",
          },
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "start",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "ezqs5q",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "h1l4hw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "9e4snq",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "9vqoea",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "x7qdfp",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "d39qgw",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));",
                "}",
              ],
              "id": "9atymt",
              "type": "text/javascript",
            },
          },
        ],
        "id": "cb8v3t",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "7oxzx1",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "i544h5",
              "type": "text/javascript",
            },
          },
        ],
        "id": "jhzmpv",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "bhuvqx",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "6qbw4d",
              "type": "text/javascript",
            },
          },
        ],
        "id": "x6exws",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "5sx5dw",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "cdpopn",
              "type": "text/javascript",
            },
          },
        ],
        "id": "ssi2a8",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "x6oaag",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Stopped TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "});",
                "",
              ],
              "id": "8ew1jk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "49cuyt",
        "name": "stopTestProxyRecording",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "stop",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l2",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "b9q1ra",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "2tccjb",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunIdTestProxy",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"primitiveParameter\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "primitiveParameter",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "event": Array [
          Object {
            "id": "6rfjty",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Started TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "    pm.response.to.have.header(\\"x-recording-id\\");",
                "    pm.collectionVariables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                "});",
              ],
              "id": "wpbvc4",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3zgew6",
        "name": "startTestProxyRecording",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"x-recording-file\\": \\"./recordings/primitiveParameter_jestRunIdTestProxy.json\\"}",
          },
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "start",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "iqxxs7",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "odc2fc",
              "type": "text/javascript",
            },
          },
        ],
        "id": "hvl7jw",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "p03jp7",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "h0fgel",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "j58bgv",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));",
                "}",
              ],
              "id": "k97wbk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "yh0zn8",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "ivu9xy",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "d9yng9",
              "type": "text/javascript",
            },
          },
        ],
        "id": "dm09uw",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "vm8psu",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "9ezdsu",
              "type": "text/javascript",
            },
          },
        ],
        "id": "q1cfqt",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "qh9z16",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "spylrr",
              "type": "text/javascript",
            },
          },
        ],
        "id": "mge3qz",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
        "event": Array [
          Object {
            "id": "a7lkxi",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "pm.variables.set(\\"deletedAccountName\\", \\"foobareq5yyi\\");",
              ],
              "id": "bsqg1o",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "tyolxx",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "65xm09",
              "type": "text/javascript",
            },
          },
        ],
        "id": "kqos97",
        "name": "DeletedAccounts_Get",
        "request": Object {
          "body": Object {},
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "locations",
              ":location",
              "deletedAccounts",
              ":deletedAccountName",
            ],
            "query": Array [
              Object {
                "key": "test",
                "value": 1,
              },
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "deletedAccountName",
                "type": "any",
                "value": "{{deletedAccountName}}",
              },
              Object {
                "key": "location",
                "type": "any",
                "value": "{{location}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "wlgh2r",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Stopped TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "});",
                "",
              ],
              "id": "gsyqal",
              "type": "text/javascript",
            },
          },
        ],
        "id": "c9wzyn",
        "name": "stopTestProxyRecording",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "stop",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "foobardb187u",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "ew9nh8",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "sp8ib7",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunIdTestProxy",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"patchVariables\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "patchVariables",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "event": Array [
          Object {
            "id": "yzy1ec",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Started TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "    pm.response.to.have.header(\\"x-recording-id\\");",
                "    pm.collectionVariables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                "});",
              ],
              "id": "bw1q38",
              "type": "text/javascript",
            },
          },
        ],
        "id": "2vc31r",
        "name": "startTestProxyRecording",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"x-recording-file\\": \\"./recordings/patchVariables_jestRunIdTestProxy.json\\"}",
          },
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "start",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "zo75y7",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
              ],
              "id": "ehebqq",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "odehko",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "9quvnq",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "f9zxy5",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));",
                "}",
              ],
              "id": "col7eq",
              "type": "text/javascript",
            },
          },
        ],
        "id": "l0fzps",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
          },
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "wa7yg9",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "i2mz21",
              "type": "text/javascript",
            },
          },
        ],
        "id": "76ivhq",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "86w5gc",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "8ef99f",
              "type": "text/javascript",
            },
          },
        ],
        "id": "b3xozx",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "hty0qz",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "20gl49",
              "type": "text/javascript",
            },
          },
        ],
        "id": "ugk6h2",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "2r0mc4",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response code should be 2xx\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "56m9l3",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "182s89",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));",
                "}",
              ],
              "id": "hakk8a",
              "type": "text/javascript",
            },
          },
        ],
        "id": "qbyj9c",
        "name": "deleteResourceGroup",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "DELETE",
          "url": Object {
            "host": Array [
              "http://localhost:5000",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "vwghxn",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_deleteResourceGroup_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('stopTestProxyRecording');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_deleteResourceGroup_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('stopTestProxyRecording')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('stopTestProxyRecording')",
                "}",
              ],
              "id": "fmkiq3",
              "type": "text/javascript",
            },
          },
        ],
        "id": "jy1tzu",
        "name": "_deleteResourceGroup_poller",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-upstream-base-uri",
              "value": "https://management.azure.com",
            },
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
            Object {
              "key": "x-recording-mode",
              "value": "record",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "tdrxs5",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_deleteResourceGroup_poller')",
              ],
              "id": "y8jsuq",
              "type": "text/javascript",
            },
          },
        ],
        "id": "x0t20h",
        "name": "_deleteResourceGroup_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "jt84jj",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "pm.test(\\"Stopped TestProxy recording\\", function() {",
                "    pm.response.to.be.success;",
                "});",
                "",
              ],
              "id": "r3ps8d",
              "type": "text/javascript",
            },
          },
        ],
        "id": "c6vfm3",
        "name": "stopTestProxyRecording",
        "request": Object {
          "header": Array [
            Object {
              "key": "x-recording-id",
              "value": "{{x_recording_id}}",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "localhost",
            ],
            "path": Array [
              "record",
              "stop",
            ],
            "port": "5000",
            "protocol": "http",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "parameters",
        "type": "any",
        "value": Object {
          "properties": Object {
            "kind": "StorageV2",
            "location": "westus",
            "patches": Array [
              Object {
                "add": "/properties/kind",
                "value": "StorageV2",
              },
            ],
            "properties": Object {
              "encryption": Object {
                "keySource": "Microsoft.Storage",
                "services": Object {
                  "blob": Object {},
                },
              },
            },
            "sku": Object {
              "name": "Standard_LRS",
            },
          },
        },
      },
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
]
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageBasicExample 1`] = `
Array [
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "tgp8uv",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "nprcrj",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageBasicExample.yaml\\",\\"apiScenarioName\\":\\"StorageBasicExample\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "StorageBasicExample",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"prepare\\"}",
        "event": Array [
          Object {
            "id": "8gypdh",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "zq9w6n",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gzre88",
        "name": "createResourceGroup",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"location\\":\\"{{location}}\\"}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"exampleName\\":\\"../examples/StorageAccountCheckNameAvailability.json\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "9120qs",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "clnzjc",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3747vc",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreate.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "39l4a3",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "k8hcud",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "mcbyik",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "g4l6nv",
              "type": "text/javascript",
            },
          },
        ],
        "id": "oipyp5",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_GRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"extendedLocation\\": {
    \\"type\\": \\"EdgeZone\\",
    \\"name\\": \\"losangeles001\\"
  },
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"isHnsEnabled\\": true,
    \\"isSftpEnabled\\": true,
    \\"allowBlobPublicAccess\\": false,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"requireInfrastructureEncryption\\": false,
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  },
  \\"tags\\": {
    \\"key1\\": \\"value1\\",
    \\"key2\\": \\"value2\\"
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "hlqn5m",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "x6exws",
              "type": "text/javascript",
            },
          },
        ],
        "id": "zvuzjs",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "j55iye",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "1gju0k",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gbupa4",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "4fy274",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "1rcvet",
              "type": "text/javascript",
            },
          },
        ],
        "id": "7wi32c",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Update\\",\\"exampleName\\":\\"../examples/StorageAccountUpdate.json\\",\\"itemName\\":\\"updateStorageAccount\\",\\"step\\":\\"updateStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "1ueh28",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "3l45xk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "vov58h",
        "name": "updateStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"allowBlobPublicAccess\\": false,
    \\"isSftpEnabled\\": true,
    \\"isLocalUserEnabled\\": true,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"networkAcls\\": {
      \\"resourceAccessRules\\": [
        {
          \\"tenantId\\": \\"72f988bf-86f1-41af-91ab-2d7cd011db47\\",
          \\"resourceId\\": \\"/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/{{resourceGroupName}}/providers/Microsoft.Synapse/workspaces/testworkspace\\"
        }
      ],
      \\"defaultAction\\": \\"Allow\\"
    },
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PATCH",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_GetProperties\\",\\"exampleName\\":\\"../examples/StorageAccountGetProperties.json\\",\\"itemName\\":\\"getStorageAccount\\",\\"step\\":\\"getStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "m388ep",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "6w00ic",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3q0yb6",
        "name": "getStorageAccount",
        "request": Object {
          "body": Object {},
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Delete\\",\\"exampleName\\":\\"../examples/StorageAccountDelete.json\\",\\"itemName\\":\\"deleteStorageAccount\\",\\"step\\":\\"deleteStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "rxgyxc",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "j917fd",
              "type": "text/javascript",
            },
          },
        ],
        "id": "qq5z84",
        "name": "deleteStorageAccount",
        "request": Object {
          "body": Object {},
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "DELETE",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"deleteStorageAccount\\",\\"step\\":\\"deleteStorageAccount\\"}",
        "event": Array [],
        "id": "un6yyw",
        "name": "_deleteStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "9e4snq",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response code should be 2xx\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "zfkej6",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "ezqs5q",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "h1l4hw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "igg58r",
        "name": "deleteResourceGroup",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "DELETE",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "jhzmpv",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_deleteResourceGroup_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest(null);",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_deleteResourceGroup_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest(null)",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest(null)",
                "}",
              ],
              "id": "6qbw4d",
              "type": "text/javascript",
            },
          },
        ],
        "id": "cb8v3t",
        "name": "_deleteResourceGroup_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "9atymt",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_deleteResourceGroup_poller')",
              ],
              "id": "9vqoea",
              "type": "text/javascript",
            },
          },
        ],
        "id": "x7qdfp",
        "name": "_deleteResourceGroup_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
]
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageQuickStart 1`] = `
Array [
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "tgp8uv",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "nprcrj",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"basic\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "basic",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"prepare\\"}",
        "event": Array [
          Object {
            "id": "8gypdh",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "zq9w6n",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gzre88",
        "name": "createResourceGroup",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"location\\":\\"{{location}}\\"}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "9120qs",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "clnzjc",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3747vc",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "39l4a3",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "k8hcud",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "mcbyik",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "g4l6nv",
              "type": "text/javascript",
            },
          },
        ],
        "id": "oipyp5",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "hlqn5m",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "vov58h",
              "type": "text/javascript",
            },
          },
        ],
        "id": "zvuzjs",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "j55iye",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "1gju0k",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gbupa4",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "4fy274",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "1rcvet",
              "type": "text/javascript",
            },
          },
        ],
        "id": "7wi32c",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "1ueh28",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "3l45xk",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"overrideVariable\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "overrideVariable",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "m388ep",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "6w00ic",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3q0yb6",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "rxgyxc",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "j917fd",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "igg58r",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "un6yyw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "qq5z84",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "x7qdfp",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "jhzmpv",
              "type": "text/javascript",
            },
          },
        ],
        "id": "zfkej6",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "ezqs5q",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "h1l4hw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "9e4snq",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "d39qgw",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "9atymt",
              "type": "text/javascript",
            },
          },
        ],
        "id": "9vqoea",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l2",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "bhuvqx",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "6qbw4d",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"primitiveParameter\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "primitiveParameter",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
        "event": Array [
          Object {
            "id": "ssi2a8",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "if (pm.response.code === 200) {",
                "pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);",
                "}",
                "",
                "});",
              ],
              "id": "7oxzx1",
              "type": "text/javascript",
            },
          },
        ],
        "id": "le21m4",
        "name": "checkName",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "POST",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "checkNameAvailability",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "49cuyt",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "5sx5dw",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "x6oaag",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "8ew1jk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "cdpopn",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "wpbvc4",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "dm09uw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "i544h5",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "b9q1ra",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "2tccjb",
              "type": "text/javascript",
            },
          },
        ],
        "id": "db187u",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "odc2fc",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "hvl7jw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "6rfjty",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
        "event": Array [
          Object {
            "id": "p03jp7",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "pm.variables.set(\\"deletedAccountName\\", \\"foobariqxxs7\\");",
              ],
              "id": "h0fgel",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "j58bgv",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "k97wbk",
              "type": "text/javascript",
            },
          },
        ],
        "id": "yh0zn8",
        "name": "DeletedAccounts_Get",
        "request": Object {
          "body": Object {},
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "providers",
              "Microsoft.Storage",
              "locations",
              ":location",
              "deletedAccounts",
              ":deletedAccountName",
            ],
            "query": Array [
              Object {
                "key": "test",
                "value": 1,
              },
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "deletedAccountName",
                "type": "any",
                "value": "{{deletedAccountName}}",
              },
              Object {
                "key": "location",
                "type": "any",
                "value": "{{location}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "accountName",
        "type": "any",
        "value": "foobarx6exws",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "9ezdsu",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "q1cfqt",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"apiScenarioName\\":\\"patchVariables\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "patchVariables",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "ivu9xy",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "pm.variables.set(\\"parameters\\", \\"[object Object]\\");",
              ],
              "id": "lk4mhm",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "spylrr",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "mge3qz",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "eq5yyi",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "qh9z16",
              "type": "text/javascript",
            },
          },
        ],
        "id": "vm8psu",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "c9wzyn",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "f9zxy5",
              "type": "text/javascript",
            },
          },
        ],
        "id": "kqos97",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "65xm09",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "a7lkxi",
              "type": "text/javascript",
            },
          },
        ],
        "id": "bsqg1o",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "d9yng9",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "wlgh2r",
              "type": "text/javascript",
            },
          },
        ],
        "id": "gsyqal",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "{{accountName}}",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "2vc31r",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response code should be 2xx\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "ew9nh8",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "yzy1ec",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "bw1q38",
              "type": "text/javascript",
            },
          },
        ],
        "id": "sp8ib7",
        "name": "deleteResourceGroup",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "DELETE",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "col7eq",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_deleteResourceGroup_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest(null);",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_deleteResourceGroup_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest(null)",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest(null)",
                "}",
              ],
              "id": "76ivhq",
              "type": "text/javascript",
            },
          },
        ],
        "id": "l0fzps",
        "name": "_deleteResourceGroup_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "9quvnq",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_deleteResourceGroup_poller')",
              ],
              "id": "zo75y7",
              "type": "text/javascript",
            },
          },
        ],
        "id": "ehebqq",
        "name": "_deleteResourceGroup_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "parameters",
        "type": "any",
        "value": Object {
          "properties": Object {
            "kind": "StorageV2",
            "location": "westus",
            "patches": Array [
              Object {
                "add": "/properties/kind",
                "value": "StorageV2",
              },
            ],
            "properties": Object {
              "encryption": Object {
                "keySource": "Microsoft.Storage",
                "services": Object {
                  "blob": Object {},
                },
              },
            },
            "sku": Object {
              "name": "Standard_LRS",
            },
          },
        },
      },
      Object {
        "key": "accountName",
        "type": "any",
        "value": "star4of8l",
      },
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
]
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - testKeyReplace 1`] = `
Array [
  Object {
    "auth": Object {
      "bearer": Array [
        Object {
          "key": "token",
          "type": "string",
          "value": "{{x_bearer_token}}",
        },
      ],
      "type": "bearer",
    },
    "event": Array [
      Object {
        "id": "nprcrj",
        "listen": "prerequest",
        "script": Object {
          "exec": Array [
            "",
            "if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {",
            "    return;",
            "}",
            "let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\", \\"subscriptionId\\"];",
            "vars.forEach(function (item, index, array) {",
            "    pm.expect(",
            "        pm.variables.get(item),",
            "        item + \\" variable not set\\"",
            "    ).to.not.be.undefined;",
            "    pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;",
            "});",
            "if (",
            "    !pm.collectionVariables.get(\\"x_bearer_token\\") ||",
            "    Date.now() >",
            "    new Date(pm.collectionVariables.get(\\"x_bearer_token_expires_on\\") * 1000)",
            ") {",
            "    pm.sendRequest(",
            "        {",
            "            url:",
            "                \\"https://login.microsoftonline.com/\\" +",
            "                pm.variables.get(\\"tenantId\\") +",
            "                \\"/oauth2/token\\",",
            "            method: \\"POST\\",",
            "            header: \\"Content-Type: application/x-www-form-urlencoded\\",",
            "            body: {",
            "                mode: \\"urlencoded\\",",
            "                urlencoded: [",
            "                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },",
            "                    {",
            "                        key: \\"client_id\\",",
            "                        value: pm.variables.get(\\"client_id\\"),",
            "                        disabled: false,",
            "                    },",
            "                    {",
            "                        key: \\"client_secret\\",",
            "                        value: pm.variables.get(\\"client_secret\\"),",
            "                        disabled: false,",
            "                    },",
            "                    { key: \\"resource\\", value: \\"https://management.azure.com\\", disabled: false },",
            "                ],",
            "            },",
            "        },",
            "        function (err, res) {",
            "            if (err) {",
            "                console.log(err);",
            "            } else {",
            "                let resJson = res.json();",
            "                pm.collectionVariables.set(",
            "                    \\"x_bearer_token_expires_on\\",",
            "                    resJson.expires_on",
            "                );",
            "                pm.collectionVariables.set(\\"x_bearer_token\\", resJson.access_token);",
            "            }",
            "        }",
            "    );",
            "}",
          ],
          "id": "r4of8l",
          "type": "text/javascript",
        },
      },
    ],
    "info": Object {
      "_postman_id": "jestRunId",
      "description": Object {
        "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/testKeyReplace.yaml\\",\\"apiScenarioName\\":\\"StorageBasicExample\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
        "type": "text/plain",
      },
      "name": "StorageBasicExample",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "version": undefined,
    },
    "item": Array [
      Object {
        "description": "{\\"type\\":\\"prepare\\"}",
        "event": Array [
          Object {
            "id": "zq9w6n",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "gzre88",
              "type": "text/javascript",
            },
          },
        ],
        "id": "tgp8uv",
        "name": "createResourceGroup",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{\\"location\\":\\"{{location}}\\"}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "clnzjc",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "3747vc",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "oipyp5",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "9120qs",
              "type": "text/javascript",
            },
          },
        ],
        "id": "8gypdh",
        "name": "createStorageAccount",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "sto131918",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "gbupa4",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount_generated_get')",
                "}",
              ],
              "id": "x6exws",
              "type": "text/javascript",
            },
          },
        ],
        "id": "k8hcud",
        "name": "_createStorageAccount_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "mcbyik",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount_poller')",
              ],
              "id": "g4l6nv",
              "type": "text/javascript",
            },
          },
        ],
        "id": "39l4a3",
        "name": "_createStorageAccount_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
        "event": Array [
          Object {
            "id": "hfy1hi",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "j55iye",
              "type": "text/javascript",
            },
          },
        ],
        "id": "1gju0k",
        "name": "_createStorageAccount_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "sto131918",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"createStorageAccount1_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
        "event": Array [
          Object {
            "id": "1rcvet",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "7wi32c",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "vov58h",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "4fy274",
              "type": "text/javascript",
            },
          },
        ],
        "id": "hlqn5m",
        "name": "createStorageAccount1",
        "request": Object {
          "body": Object {
            "mode": "raw",
            "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
          },
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "PUT",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "sto131918",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
        "event": Array [
          Object {
            "id": "qq5z84",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_createStorageAccount1_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest('_createStorageAccount1_generated_get');",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_createStorageAccount1_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest('_createStorageAccount1_generated_get')",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest('_createStorageAccount1_generated_get')",
                "}",
              ],
              "id": "6qbw4d",
              "type": "text/javascript",
            },
          },
        ],
        "id": "3l45xk",
        "name": "_createStorageAccount1_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
        "event": Array [
          Object {
            "id": "6w00ic",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_createStorageAccount1_poller')",
              ],
              "id": "3q0yb6",
              "type": "text/javascript",
            },
          },
        ],
        "id": "1ueh28",
        "name": "_createStorageAccount1_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"generated-get\\",\\"lro_item_name\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
        "event": Array [
          Object {
            "id": "un6yyw",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response status code assertion.\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "rxgyxc",
              "type": "text/javascript",
            },
          },
        ],
        "id": "j917fd",
        "name": "_createStorageAccount1_generated_get",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "GET",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourceGroups",
              ":resourceGroupName",
              "providers",
              "Microsoft.Storage",
              "storageAccounts",
              ":accountName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2021-08-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
              Object {
                "key": "accountName",
                "type": "any",
                "value": "sto131918",
              },
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "event": Array [
          Object {
            "id": "9e4snq",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "pm.test(\\"response code should be 2xx\\", function() {",
                "pm.response.to.be.success;",
                "});",
              ],
              "id": "zfkej6",
              "type": "text/javascript",
            },
          },
          Object {
            "id": "ezqs5q",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");",
                "if (pollingUrl) {",
                "    pm.collectionVariables.set(\\"x_polling_url\\", pollingUrl);",
                "}",
              ],
              "id": "h1l4hw",
              "type": "text/javascript",
            },
          },
        ],
        "id": "igg58r",
        "name": "deleteResourceGroup",
        "request": Object {
          "header": Array [
            Object {
              "key": "Content-Type",
              "value": "application/json",
            },
          ],
          "method": "DELETE",
          "url": Object {
            "host": Array [
              "https://management",
              "azure",
              "com",
            ],
            "path": Array [
              "subscriptions",
              ":subscriptionId",
              "resourcegroups",
              ":resourceGroupName",
            ],
            "query": Array [
              Object {
                "key": "api-version",
                "value": "2020-06-01",
              },
            ],
            "variable": Array [
              Object {
                "key": "subscriptionId",
                "type": "any",
                "value": "{{subscriptionId}}",
              },
              Object {
                "key": "resourceGroupName",
                "type": "any",
                "value": "{{resourceGroupName}}",
              },
            ],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "jhzmpv",
            "listen": "test",
            "script": Object {
              "exec": Array [
                "",
                "try {",
                "    if (pm.response.code === 202) {",
                "        postman.setNextRequest('_deleteResourceGroup_poller_mock_delay');",
                "    } else if (pm.response.code === 204) {",
                "        postman.setNextRequest(null);",
                "    } else {",
                "        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];",
                "        if (pm.response.json().status !== undefined && terminalStatus.indexOf(pm.response.json().status) === -1) {",
                "            postman.setNextRequest('_deleteResourceGroup_poller_mock_delay')",
                "        } else {",
                "            postman.setNextRequest(null)",
                "        }",
                "    }",
                "} catch(err) {",
                "    postman.setNextRequest(null)",
                "}",
              ],
              "id": "bhuvqx",
              "type": "text/javascript",
            },
          },
        ],
        "id": "cb8v3t",
        "name": "_deleteResourceGroup_poller",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "{{x_polling_url}}",
            ],
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
      Object {
        "description": "{\\"type\\":\\"mock\\",\\"lro_item_name\\":\\"deleteResourceGroup\\"}",
        "event": Array [
          Object {
            "id": "9atymt",
            "listen": "prerequest",
            "script": Object {
              "exec": Array [
                "postman.setNextRequest('_deleteResourceGroup_poller')",
              ],
              "id": "9vqoea",
              "type": "text/javascript",
            },
          },
        ],
        "id": "x7qdfp",
        "name": "_deleteResourceGroup_poller_mock_delay",
        "request": Object {
          "method": "GET",
          "url": Object {
            "host": Array [
              "postman-echo",
              "com",
            ],
            "path": Array [
              "delay",
              "{{x_retry_after}}",
            ],
            "protocol": "https",
            "query": Array [],
            "variable": Array [],
          },
        },
        "response": Array [],
      },
    ],
    "variable": Array [
      Object {
        "key": "subscriptionId",
        "type": "any",
      },
      Object {
        "key": "resourceGroupName",
        "type": "any",
      },
      Object {
        "key": "location",
        "type": "any",
      },
      Object {
        "key": "client_id",
        "type": "any",
      },
      Object {
        "key": "client_secret",
        "type": "any",
      },
      Object {
        "key": "tenantId",
        "type": "any",
      },
      Object {
        "key": "x_enable_auth",
        "type": "any",
        "value": "true",
      },
      Object {
        "key": "x_bearer_token",
        "type": "any",
      },
      Object {
        "key": "x_bearer_token_expires_on",
        "type": "any",
      },
      Object {
        "key": "x_polling_url",
        "type": "any",
      },
      Object {
        "key": "x_retry_after",
        "type": "any",
        "value": "10",
      },
    ],
  },
]
`;
