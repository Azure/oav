// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`postmanCollectionGenerator should generate PostmanCollection - appconfig data plane 1`] = `
Object {
  "event": Array [],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.AppConfiguration/stable/1.0/scenarios/test.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.AppConfiguration/stable/1.0/appconfiguration.json\\"]}",
      "type": "text/plain",
    },
    "name": "test",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "r4of8l",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\"key-1954625347\\");",
              "pm.variables.set(\\"label\\", \\"test_label\\");",
              "pm.variables.set(\\"entity\\", {\\"value\\":\\"test_value\\",\\"content_type\\":\\"test_content_type\\",\\"tags\\":{\\"tag1\\":\\"value1\\",\\"tag2\\":\\"value2\\"}});",
              "pm.variables.set(\\"If-None-Match\\", \\"*\\");",
            ],
            "id": "nprcrj",
            "type": "text/javascript",
          },
        },
      ],
      "id": "rf9c3s",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "gzre88",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "zq9w6n",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "tgp8uv",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"test_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "If-None-Match",
                "value": "{{If-None-Match}}",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue_1\\",\\"step\\":\\"PutKeyValue_1\\"}",
          "event": Array [
            Object {
              "id": "9120qs",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "oipyp5",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "k8hcud",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([412]);",
                  "if (pm.response.code === 412) {
}
",
                  "});",
                ],
                "id": "39l4a3",
                "type": "text/javascript",
              },
            },
          ],
          "id": "clnzjc",
          "name": "PutKeyValue_1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"test_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3Nzgy",
              },
              Object {
                "key": "If-None-Match",
                "value": "{{If-None-Match}}",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "mcbyik",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "zvuzjs",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "gbupa4",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "1gju0k",
                "type": "text/javascript",
              },
            },
          ],
          "id": "g4l6nv",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3Nzgy",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "AddExistingSetting",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "hfy1hi",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\".appconfig.featureflag/feature 1306740339\\");",
              "pm.variables.set(\\"entity\\", {\\"value\\":\\"{\\\\\\"id\\\\\\":\\\\\\"feature 1306740339\\\\\\",\\\\\\"description\\\\\\":\\\\\\"Feature description\\\\\\",\\\\\\"display_name\\\\\\":\\\\\\"Feature display name\\\\\\",\\\\\\"enabled\\\\\\":true,\\\\\\"conditions\\\\\\":{\\\\\\"client_filters\\\\\\":[{\\\\\\"name\\\\\\":\\\\\\"FilterA\\\\\\",\\\\\\"parameters\\\\\\":{}},{\\\\\\"name\\\\\\":\\\\\\"Microsoft.TimeWindow\\\\\\",\\\\\\"parameters\\\\\\":{\\\\\\"Start\\\\\\":\\\\\\"Wed, 01 May 2019 13:59:59 GMT\\\\\\",\\\\\\"End\\\\\\":\\\\\\"Mon, 01 July 2019 00:00:00 GMT\\\\\\"}}]}}\\",\\"content_type\\":\\"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\\",\\"tags\\":{}});",
            ],
            "id": "hlqn5m",
            "type": "text/javascript",
          },
        },
      ],
      "id": "j55iye",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "1rcvet",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "4fy274",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "vov58h",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3l45xk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "7wi32c",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"{\\\\\\"id\\\\\\":\\\\\\"feature 1306740339\\\\\\",\\\\\\"description\\\\\\":\\\\\\"Feature description\\\\\\",\\\\\\"display_name\\\\\\":\\\\\\"Feature display name\\\\\\",\\\\\\"enabled\\\\\\":true,\\\\\\"conditions\\\\\\":{\\\\\\"client_filters\\\\\\":[{\\\\\\"name\\\\\\":\\\\\\"FilterA\\\\\\",\\\\\\"parameters\\\\\\":{}},{\\\\\\"name\\\\\\":\\\\\\"Microsoft.TimeWindow\\\\\\",\\\\\\"parameters\\\\\\":{\\\\\\"Start\\\\\\":\\\\\\"Wed, 01 May 2019 13:59:59 GMT\\\\\\",\\\\\\"End\\\\\\":\\\\\\"Mon, 01 July 2019 00:00:00 GMT\\\\\\"}}]}}\\",
  \\"content_type\\": \\"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\\",
  \\"tags\\": {}
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "If-None-Match",
                "value": "*",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue_1\\",\\"step\\":\\"PutKeyValue_1\\"}",
          "event": Array [
            Object {
              "id": "3q0yb6",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"entity\\", {\\"value\\":\\"{\\\\\\"id\\\\\\":\\\\\\"feature 1306740339\\\\\\",\\\\\\"description\\\\\\":\\\\\\"Feature description\\\\\\",\\\\\\"display_name\\\\\\":\\\\\\"Feature display name\\\\\\",\\\\\\"enabled\\\\\\":false,\\\\\\"conditions\\\\\\":{\\\\\\"client_filters\\\\\\":[{\\\\\\"name\\\\\\":\\\\\\"FilterA\\\\\\",\\\\\\"parameters\\\\\\":{}},{\\\\\\"name\\\\\\":\\\\\\"Microsoft.TimeWindow\\\\\\",\\\\\\"parameters\\\\\\":{\\\\\\"Start\\\\\\":\\\\\\"Wed, 01 May 2019 13:59:59 GMT\\\\\\",\\\\\\"End\\\\\\":\\\\\\"Mon, 01 July 2019 00:00:00 GMT\\\\\\"}}]}}\\",\\"content_type\\":\\"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\\",\\"tags\\":{},\\"etag\\":\\"Xw8kFsc-oaEk_nXNPXOWkAaCE6de_zAgyLgPiI0k-AY\\"});",
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "6w00ic",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "m388ep",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "qq5z84",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1ueh28",
          "name": "PutKeyValue_1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"{\\\\\\"id\\\\\\":\\\\\\"feature 1306740339\\\\\\",\\\\\\"description\\\\\\":\\\\\\"Feature description\\\\\\",\\\\\\"display_name\\\\\\":\\\\\\"Feature display name\\\\\\",\\\\\\"enabled\\\\\\":false,\\\\\\"conditions\\\\\\":{\\\\\\"client_filters\\\\\\":[{\\\\\\"name\\\\\\":\\\\\\"FilterA\\\\\\",\\\\\\"parameters\\\\\\":{}},{\\\\\\"name\\\\\\":\\\\\\"Microsoft.TimeWindow\\\\\\",\\\\\\"parameters\\\\\\":{\\\\\\"Start\\\\\\":\\\\\\"Wed, 01 May 2019 13:59:59 GMT\\\\\\",\\\\\\"End\\\\\\":\\\\\\"Mon, 01 July 2019 00:00:00 GMT\\\\\\"}}]}}\\",
  \\"content_type\\": \\"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\\",
  \\"tags\\": {},
  \\"etag\\": \\"Xw8kFsc-oaEk_nXNPXOWkAaCE6de_zAgyLgPiI0k-AY\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODE2",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "rxgyxc",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "un6yyw",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "igg58r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "zfkej6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j917fd",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODE4",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "CanAddAndUpdateFeatureFlag",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "9e4snq",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutLock\\",\\"itemName\\":\\"PutLock\\",\\"step\\":\\"PutLock\\"}",
          "event": Array [
            Object {
              "id": "ezqs5q",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
                ],
                "id": "cb8v3t",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "x7qdfp",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([404]);",
                  "if (pm.response.code === 404) {
}
",
                  "});",
                ],
                "id": "9vqoea",
                "type": "text/javascript",
              },
            },
          ],
          "id": "h1l4hw",
          "name": "PutLock",
          "request": Object {
            "body": Object {},
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "locks",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "key-199017029",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "ClearReadOnlySettingNotFound",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "d39qgw",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\"key-2141872649\\");",
              "pm.variables.set(\\"label\\", \\"test_label\\");",
              "pm.variables.set(\\"entity\\", {\\"value\\":\\"test_value\\",\\"content_type\\":\\"test_content_type\\",\\"tags\\":{\\"tag1\\":\\"value1\\",\\"tag2\\":\\"value2\\"}});",
            ],
            "id": "jhzmpv",
            "type": "text/javascript",
          },
        },
      ],
      "id": "9atymt",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "6qbw4d",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "bhuvqx",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "le21m4",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "7oxzx1",
                "type": "text/javascript",
              },
            },
          ],
          "id": "x6exws",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"test_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "If-None-Match",
                "value": "*",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue_1\\",\\"step\\":\\"PutKeyValue_1\\"}",
          "event": Array [
            Object {
              "id": "cdpopn",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"entity\\", {\\"value\\":\\"new_value\\",\\"content_type\\":\\"test_content_type\\",\\"tags\\":{\\"tag1\\":\\"value1\\",\\"tag2\\":\\"value2\\"}});",
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "5sx5dw",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "49cuyt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "8ew1jk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ssi2a8",
          "name": "PutKeyValue_1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"new_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3OTY0",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteLock\\",\\"itemName\\":\\"DeleteLock\\",\\"step\\":\\"DeleteLock\\"}",
          "event": Array [
            Object {
              "id": "i544h5",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "db187u",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "2tccjb",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([412]);",
                  "if (pm.response.code === 412) {
}
",
                  "});",
                ],
                "id": "b9q1ra",
                "type": "text/javascript",
              },
            },
          ],
          "id": "x6oaag",
          "name": "DeleteLock",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3OTY1",
              },
              Object {
                "key": "If-Match",
                "value": "\\"LgZO1vXg1qh1tBjyRitcoYSFTRUkXB8XdxsHMM1AzrI\\"",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "locks",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "wpbvc4",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "6rfjty",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "hvl7jw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "odc2fc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "3zgew6",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3OTY1",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "ConfigurationClient_SetReadOnly_OnlyIfUnchanged_Modified_False_",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "yh0zn8",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\"key-1505928816\\");",
              "pm.variables.set(\\"label\\", \\"test_label\\");",
              "pm.variables.set(\\"entity\\", {\\"value\\":\\"test_value\\",\\"content_type\\":\\"test_content_type\\",\\"tags\\":{\\"tag1\\":\\"value1\\",\\"tag2\\":\\"value2\\"}});",
            ],
            "id": "h0fgel",
            "type": "text/javascript",
          },
        },
      ],
      "id": "iqxxs7",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "k97wbk",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "j58bgv",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "dm09uw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "q1cfqt",
                "type": "text/javascript",
              },
            },
          ],
          "id": "p03jp7",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"test_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "If-None-Match",
                "value": "*",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue_1\\",\\"step\\":\\"PutKeyValue_1\\"}",
          "event": Array [
            Object {
              "id": "vm8psu",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"entity\\", {\\"value\\":\\"new_value\\",\\"content_type\\":\\"test_content_type\\",\\"tags\\":{\\"tag1\\":\\"value1\\",\\"tag2\\":\\"value2\\"}});",
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "lk4mhm",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "ivu9xy",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "mge3qz",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9ezdsu",
          "name": "PutKeyValue_1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"new_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODMw",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "qh9z16",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "eq5yyi",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "kqos97",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([412]);",
                  "if (pm.response.code === 412) {
}
",
                  "});",
                ],
                "id": "bsqg1o",
                "type": "text/javascript",
              },
            },
          ],
          "id": "spylrr",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODMx",
              },
              Object {
                "key": "If-Match",
                "value": "\\"kcfjab4MYd1eDj2XrZ6aCxYLdFVmVmY5eKoLO5VmG70\\"",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue_1\\",\\"step\\":\\"DeleteKeyValue_1\\"}",
          "event": Array [
            Object {
              "id": "65xm09",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                  "pm.variables.set(\\"label_encoded\\", encodeURIComponent(pm.variables.get(\\"label\\")));",
                ],
                "id": "tyolxx",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "c9wzyn",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "gsyqal",
                "type": "text/javascript",
              },
            },
          ],
          "id": "a7lkxi",
          "name": "DeleteKeyValue_1",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODMx",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "{{label_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "DeleteIfUnchangedSettingModified",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "d9yng9",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
            ],
            "id": "sp8ib7",
            "type": "text/javascript",
          },
        },
      ],
      "id": "wlgh2r",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "2vc31r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "bw1q38",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ew9nh8",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"test_value\\",
  \\"content_type\\": \\"test_content_type\\",
  \\"tags\\": {
    \\"tag1\\": \\"value1\\",
    \\"tag2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "test_label",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "key-2094909004",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"GetKeyValues\\",\\"itemName\\":\\"GetKeyValues\\",\\"step\\":\\"GetKeyValues\\"}",
          "event": Array [
            Object {
              "id": "l0fzps",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "ehebqq",
                "type": "text/javascript",
              },
            },
          ],
          "id": "yzy1ec",
          "name": "GetKeyValues",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjE2MDIy",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "9quvnq",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "odehko",
                "type": "text/javascript",
              },
            },
          ],
          "id": "zo75y7",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjE2MDIy",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "test_label",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "key-2094909004",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "GetBatchSettingAny",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "f9zxy5",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\"keyFields-194380201\\");",
            ],
            "id": "76ivhq",
            "type": "text/javascript",
          },
        },
      ],
      "id": "col7eq",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "8ef99f",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "86w5gc",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "fujl6i",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "wa7yg9",
                "type": "text/javascript",
              },
            },
          ],
          "id": "b3xozx",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"my_value\\",
  \\"content_type\\": null,
  \\"tags\\": {}
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
              Object {
                "key": "If-None-Match",
                "value": "*",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "my_label",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"GetKeyValues\\",\\"itemName\\":\\"GetKeyValues\\",\\"step\\":\\"GetKeyValues\\"}",
          "event": Array [
            Object {
              "id": "20gl49",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "hty0qz",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "qbyj9c",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "56m9l3",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ugk6h2",
          "name": "GetKeyValues",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODg4",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
              ],
              "query": Array [
                Object {
                  "key": "key",
                  "value": "{{key_encoded}}",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
                Object {
                  "key": "$Select",
                  "value": "key%2C%20label%2C%20etag",
                },
              ],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "hakk8a",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "182s89",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "jy1tzu",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "x0t20h",
                "type": "text/javascript",
              },
            },
          ],
          "id": "2r0mc4",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3ODg4",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "label",
                  "value": "my_label",
                },
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "GetBatchSettingWithFields",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "tdrxs5",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
              "pm.variables.set(\\"key\\", \\"~\`!@#$^&()_+=[]{}|;\\\\\\"'<>./--996999594\\");",
            ],
            "id": "v9jgfn",
            "type": "text/javascript",
          },
        },
      ],
      "id": "y8jsuq",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutKeyValue\\",\\"itemName\\":\\"PutKeyValue\\",\\"step\\":\\"PutKeyValue\\"}",
          "event": Array [
            Object {
              "id": "c6vfm3",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "r3ps8d",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "jt84jj",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "i2mz21",
                "type": "text/javascript",
              },
            },
          ],
          "id": "vwghxn",
          "name": "PutKeyValue",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"value\\": \\"value-~\`!@#$^&()_+=[]{}|;\\\\\\"'<>./-\\",
  \\"content_type\\": null,
  \\"tags\\": {}
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/vnd.microsoft.appconfig.kv+json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeleteKeyValue\\",\\"itemName\\":\\"DeleteKeyValue\\",\\"step\\":\\"DeleteKeyValue\\"}",
          "event": Array [
            Object {
              "id": "9sf2c9",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"key_encoded\\", encodeURIComponent(pm.variables.get(\\"key\\")));",
                ],
                "id": "f0r418",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "mibqod",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "kiosgn",
                "type": "text/javascript",
              },
            },
          ],
          "id": "fmkiq3",
          "name": "DeleteKeyValue",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "Sync-Token",
                "value": "zAJw6V16=MjoxNyM5MjA3OTEy",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "kv",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "{{key_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "GetSettingSpecialCharacters",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "1ghyu8",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"PutLock\\",\\"itemName\\":\\"PutLock\\",\\"step\\":\\"PutLock\\"}",
          "event": Array [
            Object {
              "id": "btr6ql",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"endpoint\\", \\"https://t-dnnwaokochaappconfig-azconfig-net.azconfig.io\\");",
                ],
                "id": "abct7z",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "rqqhvq",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([404]);",
                  "if (pm.response.code === 404) {
}
",
                  "});",
                ],
                "id": "kia3ys",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ikm5qg",
          "name": "PutLock",
          "request": Object {
            "body": Object {},
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://t-dnnwaokochaappconfig-azconfig-net",
                "azconfig",
                "io",
              ],
              "path": Array [
                "locks",
                ":key",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "1.0",
                },
              ],
              "variable": Array [
                Object {
                  "key": "key",
                  "type": "any",
                  "value": "key-1514776256",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "SetReadOnlySettingNotFound",
    },
  ],
  "variable": Array [
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - enableTestProxy 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunIdTestProxy",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageQuickStart",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "",
                  "pm.test(\\"Started TestProxy recording\\", function() {",
                  "    pm.response.to.be.success;",
                  "    pm.response.to.have.header(\\"x-recording-id\\");",
                  "    pm.variables.set(\\"x_recording_id\\", pm.response.headers.get(\\"x-recording-id\\"));",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "startTestProxyRecording",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"x-recording-file\\": \\"./recordings/storageQuickStart_jestRunIdTestProxy.json\\"}",
            },
            "method": "POST",
            "url": Object {
              "host": Array [
                "localhost",
              ],
              "path": Array [
                "record",
                "start",
              ],
              "port": "5000",
              "protocol": "http",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "event": Array [
            Object {
              "id": "9120qs",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "oipyp5",
                "type": "text/javascript",
              },
            },
          ],
          "id": "clnzjc",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "k8hcud",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "g4l6nv",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "mcbyik",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "zvuzjs",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "gbupa4",
                "type": "text/javascript",
              },
            },
          ],
          "id": "39l4a3",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "j55iye",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "hfy1hi",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "3q0yb6",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "6w00ic",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1gju0k",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "hlqn5m",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "1rcvet",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "4fy274",
                "type": "text/javascript",
              },
            },
          ],
          "id": "7wi32c",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "3l45xk",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "1ueh28",
                "type": "text/javascript",
              },
            },
          ],
          "id": "vov58h",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "basic",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "qq5z84",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"star4of8l2\\");",
            ],
            "id": "j917fd",
            "type": "text/javascript",
          },
        },
      ],
      "id": "m388ep",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "un6yyw",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "igg58r",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "zfkej6",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "9e4snq",
                "type": "text/javascript",
              },
            },
          ],
          "id": "rxgyxc",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "ezqs5q",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "cb8v3t",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "bhuvqx",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "le21m4",
                "type": "text/javascript",
              },
            },
          ],
          "id": "h1l4hw",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "x7qdfp",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "9atymt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "d39qgw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9vqoea",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "x6exws",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "6qbw4d",
                "type": "text/javascript",
              },
            },
          ],
          "id": "jhzmpv",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "overrideVariable",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "cdpopn",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"foobar7oxzx1\\");",
            ],
            "id": "5sx5dw",
            "type": "text/javascript",
          },
        },
      ],
      "id": "ssi2a8",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "8ew1jk",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "x6oaag",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "i544h5",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "db187u",
                "type": "text/javascript",
              },
            },
          ],
          "id": "49cuyt",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "b9q1ra",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "3zgew6",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "p03jp7",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "k97wbk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "2tccjb",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "wpbvc4",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hvl7jw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "odc2fc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6rfjty",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "yh0zn8",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "h0fgel",
                "type": "text/javascript",
              },
            },
          ],
          "id": "iqxxs7",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
          "event": Array [
            Object {
              "id": "q1cfqt",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"deletedAccountName\\", \\"foobarj58bgv\\");",
                  "pm.variables.set(\\"deletedAccountName_encoded\\", encodeURIComponent(pm.variables.get(\\"deletedAccountName\\")));",
                  "pm.variables.set(\\"location_encoded\\", encodeURIComponent(pm.variables.get(\\"location\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "9ezdsu",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "vm8psu",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "lk4mhm",
                "type": "text/javascript",
              },
            },
          ],
          "id": "dm09uw",
          "name": "DeletedAccounts_Get",
          "request": Object {
            "body": Object {},
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "locations",
                ":location",
                "deletedAccounts",
                ":deletedAccountName",
              ],
              "query": Array [
                Object {
                  "key": "test",
                  "value": "1",
                },
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "deletedAccountName",
                  "type": "any",
                  "value": "{{deletedAccountName_encoded}}",
                },
                Object {
                  "key": "location",
                  "type": "any",
                  "value": "{{location_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "primitiveParameter",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "mge3qz",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"parameters\\", {\\"properties\\":{\\"sku\\":{\\"name\\":\\"Standard_LRS\\"},\\"kind\\":\\"StorageV2\\",\\"location\\":\\"westus\\",\\"properties\\":{\\"encryption\\":{\\"services\\":{\\"blob\\":{}},\\"keySource\\":\\"Microsoft.Storage\\"}},\\"patches\\":[{\\"add\\":\\"/properties/kind\\",\\"value\\":\\"StorageV2\\"}]}});",
            ],
            "id": "spylrr",
            "type": "text/javascript",
          },
        },
      ],
      "id": "ivu9xy",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "eq5yyi",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"parameters\\", {\\"properties\\":{\\"sku\\":\\"Standard\\",\\"kind\\":\\"StorageV2\\",\\"location\\":\\"westus\\",\\"properties\\":{\\"encryption\\":{\\"services\\":{\\"blob\\":{}},\\"keySource\\":\\"Microsoft.Storage\\"}},\\"patches\\":[{\\"add\\":\\"/properties/kind\\",\\"value\\":\\"StorageV2\\"}]}});",
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "kqos97",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "d9yng9",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl.replace(\\"https://management.azure.com\\",\\"http://localhost:5000\\"));
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "sp8ib7",
                "type": "text/javascript",
              },
            },
          ],
          "id": "qh9z16",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
            },
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "bsqg1o",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "65xm09",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "tyolxx",
                "type": "text/javascript",
              },
            },
          ],
          "id": "a7lkxi",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "gsyqal",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "wlgh2r",
                "type": "text/javascript",
              },
            },
          ],
          "id": "c9wzyn",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "patchVariables",
    },
    Object {
      "event": Array [],
      "id": "2vc31r",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "bw1q38",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "yzy1ec",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ew9nh8",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-upstream-base-uri",
                "value": "https://management.azure.com",
              },
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
              Object {
                "key": "x-recording-mode",
                "value": "record",
              },
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "http://localhost:5000",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "event": Array [
            Object {
              "id": "ehebqq",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "",
                  "pm.test(\\"Stopped TestProxy recording\\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                ],
                "id": "zo75y7",
                "type": "text/javascript",
              },
            },
          ],
          "id": "l0fzps",
          "name": "stopTestProxyRecording",
          "request": Object {
            "header": Array [
              Object {
                "key": "x-recording-id",
                "value": "{{x_recording_id}}",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "localhost",
              ],
              "path": Array [
                "record",
                "stop",
              ],
              "port": "5000",
              "protocol": "http",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageBasicExample 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageBasicExample.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageBasicExample",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "clnzjc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"exampleName\\":\\"../examples/StorageAccountCheckNameAvailability.json\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "oipyp5",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "k8hcud",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "39l4a3",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "g4l6nv",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9120qs",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreate.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "zvuzjs",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "gbupa4",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "vov58h",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "3l45xk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "mcbyik",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_GRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"extendedLocation\\": {
    \\"type\\": \\"EdgeZone\\",
    \\"name\\": \\"losangeles001\\"
  },
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"isHnsEnabled\\": true,
    \\"isSftpEnabled\\": true,
    \\"allowBlobPublicAccess\\": false,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"requireInfrastructureEncryption\\": false,
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  },
  \\"tags\\": {
    \\"key1\\": \\"value1\\",
    \\"key2\\": \\"value2\\"
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "1gju0k",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hfy1hi",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "hlqn5m",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j55iye",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "1rcvet",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "4fy274",
                "type": "text/javascript",
              },
            },
          ],
          "id": "7wi32c",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Update\\",\\"exampleName\\":\\"../examples/StorageAccountUpdate.json\\",\\"itemName\\":\\"updateStorageAccount\\",\\"step\\":\\"updateStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "3q0yb6",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "6w00ic",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "m388ep",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "qq5z84",
                "type": "text/javascript",
              },
            },
          ],
          "id": "1ueh28",
          "name": "updateStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"keyPolicy\\": {
      \\"keyExpirationPeriodInDays\\": 20
    },
    \\"sasPolicy\\": {
      \\"sasExpirationPeriod\\": \\"1.15:59:59\\",
      \\"expirationAction\\": \\"Log\\"
    },
    \\"allowBlobPublicAccess\\": false,
    \\"isSftpEnabled\\": true,
    \\"isLocalUserEnabled\\": true,
    \\"defaultToOAuthAuthentication\\": false,
    \\"minimumTlsVersion\\": \\"TLS1_2\\",
    \\"allowSharedKeyAccess\\": true,
    \\"networkAcls\\": {
      \\"resourceAccessRules\\": [
        {
          \\"tenantId\\": \\"72f988bf-86f1-41af-91ab-2d7cd011db47\\",
          \\"resourceId\\": \\"/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/{{resourceGroupName}}/providers/Microsoft.Synapse/workspaces/testworkspace\\"
        }
      ],
      \\"defaultAction\\": \\"Allow\\"
    },
    \\"routingPreference\\": {
      \\"routingChoice\\": \\"MicrosoftRouting\\",
      \\"publishMicrosoftEndpoints\\": true,
      \\"publishInternetEndpoints\\": true
    },
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PATCH",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_GetProperties\\",\\"exampleName\\":\\"../examples/StorageAccountGetProperties.json\\",\\"itemName\\":\\"getStorageAccount\\",\\"step\\":\\"getStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "rxgyxc",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "un6yyw",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "igg58r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "zfkej6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j917fd",
          "name": "getStorageAccount",
          "request": Object {
            "body": Object {},
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_Delete\\",\\"exampleName\\":\\"../examples/StorageAccountDelete.json\\",\\"itemName\\":\\"deleteStorageAccount\\",\\"step\\":\\"deleteStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "h1l4hw",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "ezqs5q",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "cb8v3t",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "x7qdfp",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9e4snq",
          "name": "deleteStorageAccount",
          "request": Object {
            "body": Object {},
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "StorageBasicExample",
    },
    Object {
      "event": Array [],
      "id": "9atymt",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "d39qgw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "jhzmpv",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9vqoea",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - storageQuickStart 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "nprcrj",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "tgp8uv",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/storageQuickStart.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "storageQuickStart",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "zq9w6n",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "8gypdh",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "3747vc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "gzre88",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "clnzjc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "oipyp5",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "k8hcud",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "39l4a3",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "g4l6nv",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9120qs",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "zvuzjs",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "gbupa4",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "vov58h",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "3l45xk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "mcbyik",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "1gju0k",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hfy1hi",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "hlqn5m",
                "type": "text/javascript",
              },
            },
          ],
          "id": "j55iye",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "1rcvet",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "4fy274",
                "type": "text/javascript",
              },
            },
          ],
          "id": "7wi32c",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "basic",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "3q0yb6",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"star4of8l2\\");",
            ],
            "id": "6w00ic",
            "type": "text/javascript",
          },
        },
      ],
      "id": "1ueh28",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "qq5z84",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "j917fd",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "rxgyxc",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "un6yyw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "m388ep",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "zfkej6",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "9e4snq",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "jhzmpv",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "x6exws",
                "type": "text/javascript",
              },
            },
          ],
          "id": "igg58r",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "h1l4hw",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "cb8v3t",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "x7qdfp",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ezqs5q",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "9atymt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "d39qgw",
                "type": "text/javascript",
              },
            },
          ],
          "id": "9vqoea",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "overrideVariable",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "le21m4",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"accountName\\", \\"foobar6qbw4d\\");",
            ],
            "id": "7oxzx1",
            "type": "text/javascript",
          },
        },
      ],
      "id": "bhuvqx",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"StorageAccounts_CheckNameAvailability\\",\\"itemName\\":\\"checkName\\",\\"step\\":\\"checkName\\"}",
          "event": Array [
            Object {
              "id": "cdpopn",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "5sx5dw",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "49cuyt",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "if (pm.response.code === 200) {
pm.expect(_.get(pm.response.json(), [\\"nameAvailable\\"])).to.eql(true);
}
",
                  "});",
                ],
                "id": "8ew1jk",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ssi2a8",
          "name": "checkName",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"name\\": \\"{{accountName}}\\",
  \\"type\\": \\"Microsoft.Storage/storageAccounts\\"
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "POST",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "checkNameAvailability",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "i544h5",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "db187u",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "iqxxs7",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "yh0zn8",
                "type": "text/javascript",
              },
            },
          ],
          "id": "x6oaag",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"StorageV2\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"blob\\": {}
      },
      \\"keySource\\": \\"Microsoft.Storage\\"
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "2tccjb",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "3zgew6",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "wpbvc4",
                "type": "text/javascript",
              },
            },
          ],
          "id": "b9q1ra",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "hvl7jw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "odc2fc",
                "type": "text/javascript",
              },
            },
          ],
          "id": "6rfjty",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"simple\\",\\"operationId\\":\\"DeletedAccounts_Get\\",\\"itemName\\":\\"DeletedAccounts_Get\\",\\"step\\":\\"DeletedAccounts_Get\\"}",
          "event": Array [
            Object {
              "id": "k97wbk",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"deletedAccountName\\", \\"foobarh0fgel\\");",
                  "pm.variables.set(\\"deletedAccountName_encoded\\", encodeURIComponent(pm.variables.get(\\"deletedAccountName\\")));",
                  "pm.variables.set(\\"location_encoded\\", encodeURIComponent(pm.variables.get(\\"location\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "j58bgv",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "dm09uw",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "q1cfqt",
                "type": "text/javascript",
              },
            },
          ],
          "id": "p03jp7",
          "name": "DeletedAccounts_Get",
          "request": Object {
            "body": Object {},
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "providers",
                "Microsoft.Storage",
                "locations",
                ":location",
                "deletedAccounts",
                ":deletedAccountName",
              ],
              "query": Array [
                Object {
                  "key": "test",
                  "value": "1",
                },
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "deletedAccountName",
                  "type": "any",
                  "value": "{{deletedAccountName_encoded}}",
                },
                Object {
                  "key": "location",
                  "type": "any",
                  "value": "{{location_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "primitiveParameter",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [
        Object {
          "id": "vm8psu",
          "listen": "prerequest",
          "script": Object {
            "exec": Array [
              "pm.variables.set(\\"parameters\\", {\\"properties\\":{\\"sku\\":{\\"name\\":\\"Standard_LRS\\"},\\"kind\\":\\"StorageV2\\",\\"location\\":\\"westus\\",\\"properties\\":{\\"encryption\\":{\\"services\\":{\\"blob\\":{}},\\"keySource\\":\\"Microsoft.Storage\\"}},\\"patches\\":[{\\"add\\":\\"/properties/kind\\",\\"value\\":\\"StorageV2\\"}]}});",
            ],
            "id": "lk4mhm",
            "type": "text/javascript",
          },
        },
      ],
      "id": "9ezdsu",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "mge3qz",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"parameters\\", {\\"properties\\":{\\"sku\\":\\"Standard\\",\\"kind\\":\\"StorageV2\\",\\"location\\":\\"westus\\",\\"properties\\":{\\"encryption\\":{\\"services\\":{\\"blob\\":{}},\\"keySource\\":\\"Microsoft.Storage\\"}},\\"patches\\":[{\\"add\\":\\"/properties/kind\\",\\"value\\":\\"StorageV2\\"}]}});",
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"accountName_encoded\\", encodeURIComponent(pm.variables.get(\\"accountName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "spylrr",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "c9wzyn",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "gsyqal",
                "type": "text/javascript",
              },
            },
          ],
          "id": "ivu9xy",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"properties\\": {
    \\"sku\\": \\"Standard\\",
    \\"kind\\": \\"StorageV2\\",
    \\"location\\": \\"{{location}}\\",
    \\"properties\\": {
      \\"encryption\\": {
        \\"services\\": {
          \\"blob\\": {}
        },
        \\"keySource\\": \\"Microsoft.Storage\\"
      }
    },
    \\"patches\\": [
      {
        \\"add\\": \\"/properties/kind\\",
        \\"value\\": \\"StorageV2\\"
      }
    ]
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "qh9z16",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "kqos97",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "bsqg1o",
                "type": "text/javascript",
              },
            },
          ],
          "id": "eq5yyi",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "65xm09",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "tyolxx",
                "type": "text/javascript",
              },
            },
          ],
          "id": "a7lkxi",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "{{accountName_encoded}}",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "patchVariables",
    },
    Object {
      "event": Array [],
      "id": "d9yng9",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "sp8ib7",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "ew9nh8",
                "type": "text/javascript",
              },
            },
          ],
          "id": "wlgh2r",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "accountName",
      "type": "any",
      "value": "star4of8l",
    },
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;

exports[`postmanCollectionGenerator should generate PostmanCollection - testKeyReplace 1`] = `
Object {
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "string",
        "value": "{{x_bearer_token_0}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "id": "r4of8l",
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "
if (pm.variables.get(\\"x_enable_auth\\") !== \\"true\\") {
    return;
}
if (
    !pm.variables.get(\\"x_bearer_token_0\\") ||
    Date.now() >
    new Date(pm.variables.get(\\"x_bearer_token_0_expires_on\\") * 1000)
) {
    let vars = [\\"client_id\\", \\"client_secret\\", \\"tenantId\\"];
    vars.forEach(function (item, index, array) {
        pm.expect(
            pm.variables.get(item),
            item + \\" variable not set\\"
        ).to.not.be.undefined;
        pm.expect(pm.variables.get(item), item + \\" variable not set\\").to.not.be.empty;
    });
    pm.sendRequest(
        {
            url:
                \\"https://login.microsoftonline.com/\\" +
                pm.variables.get(\\"tenantId\\") +
                \\"/oauth2/v2.0/token\\",
            method: \\"POST\\",
            header: \\"Content-Type: application/x-www-form-urlencoded\\",
            body: {
                mode: \\"urlencoded\\",
                urlencoded: [
                    { key: \\"grant_type\\", value: \\"client_credentials\\", disabled: false },
                    {
                        key: \\"client_id\\",
                        value: pm.variables.get(\\"client_id\\"),
                        disabled: false,
                    },
                    {
                        key: \\"client_secret\\",
                        value: pm.variables.get(\\"client_secret\\"),
                        disabled: false,
                    },
                    { key: \\"scope\\", value: \\"https://management.azure.com/.default\\", disabled: false },
                ],
            },
        },
        function (err, res) {
            if (err) {
                console.log(err);
            } else {
                let resJson = res.json();
                pm.variables.set(
                    \\"x_bearer_token_0_expires_on\\",
                    resJson.expires_in + Math.floor(Date.now() / 1000)
                );
                pm.variables.set(\\"x_bearer_token_0\\", resJson.access_token);
            }
        }
    );
}",
        ],
        "id": "nprcrj",
        "type": "text/javascript",
      },
    },
  ],
  "info": Object {
    "_postman_id": "jestRunId",
    "description": Object {
      "content": "{\\"apiScenarioFilePath\\":\\"Microsoft.Storage/stable/2021-08-01/scenarios/testKeyReplace.yaml\\",\\"swaggerFilePaths\\":[\\"Microsoft.Storage/stable/2021-08-01/storage.json\\"]}",
      "type": "text/plain",
    },
    "name": "testKeyReplace",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "id": "gzre88",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "zq9w6n",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "8gypdh",
                "type": "text/javascript",
              },
            },
          ],
          "id": "tgp8uv",
          "name": "createResourceGroup",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{\\"location\\":\\"{{location}}\\"}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__Prepare__",
    },
    Object {
      "description": Object {
        "content": "",
        "type": "text/plain",
      },
      "event": Array [],
      "id": "3747vc",
      "item": Array [
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "9120qs",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "oipyp5",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "j55iye",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "hfy1hi",
                "type": "text/javascript",
              },
            },
          ],
          "id": "clnzjc",
          "name": "createStorageAccount",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [],
          "id": "k8hcud",
          "name": "_createStorageAccount_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "g4l6nv",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "mcbyik",
                "type": "text/javascript",
              },
            },
          ],
          "id": "39l4a3",
          "name": "_createStorageAccount_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount\\",\\"step\\":\\"createStorageAccount\\"}",
          "event": Array [
            Object {
              "id": "gbupa4",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "1gju0k",
                "type": "text/javascript",
              },
            },
          ],
          "id": "zvuzjs",
          "name": "_createStorageAccount_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"LRO\\",\\"poller_item_name\\":\\"_createStorageAccount1_poller\\",\\"operationId\\":\\"StorageAccounts_Create\\",\\"exampleName\\":\\"../examples/StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.json\\",\\"itemName\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "7wi32c",
              "listen": "prerequest",
              "script": Object {
                "exec": Array [
                  "pm.variables.set(\\"resourceGroupName_encoded\\", encodeURIComponent(pm.variables.get(\\"resourceGroupName\\")));",
                  "pm.variables.set(\\"subscriptionId_encoded\\", encodeURIComponent(pm.variables.get(\\"subscriptionId\\")));",
                ],
                "id": "1rcvet",
                "type": "text/javascript",
              },
            },
            Object {
              "id": "qq5z84",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                  "
const pollingUrl = pm.response.headers.get(\\"Location\\") || pm.response.headers.get(\\"Azure-AsyncOperation\\");
if (pollingUrl) {
    pm.variables.set(\\"x_polling_url\\", pollingUrl);
    pm.variables.set(\\"x_retry_after\\", \\"3\\");
}",
                ],
                "id": "j917fd",
                "type": "text/javascript",
              },
            },
          ],
          "id": "hlqn5m",
          "name": "createStorageAccount1",
          "request": Object {
            "body": Object {
              "mode": "raw",
              "raw": "{
  \\"identity\\": {
    \\"type\\": \\"UserAssigned\\",
    \\"userAssignedIdentities\\": {
      \\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\": {}
    }
  },
  \\"sku\\": {
    \\"name\\": \\"Standard_LRS\\"
  },
  \\"kind\\": \\"Storage\\",
  \\"location\\": \\"{{location}}\\",
  \\"properties\\": {
    \\"encryption\\": {
      \\"services\\": {
        \\"file\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        },
        \\"blob\\": {
          \\"keyType\\": \\"Account\\",
          \\"enabled\\": true
        }
      },
      \\"keyvaultproperties\\": {
        \\"keyvaulturi\\": \\"https://myvault8569.vault.azure.net\\",
        \\"keyname\\": \\"wrappingKey\\",
        \\"keyversion\\": \\"\\"
      },
      \\"keySource\\": \\"Microsoft.Keyvault\\",
      \\"identity\\": {
        \\"userAssignedIdentity\\": \\"/subscriptions/{{subscriptionId}}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}\\",
        \\"federatedIdentityClientId\\": \\"f83c6b1b-4d34-47e4-bb34-9d83df58b540\\"
      }
    }
  }
}",
            },
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "PUT",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"delay\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
          "event": Array [],
          "id": "4fy274",
          "name": "_createStorageAccount1_delay",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "postman-echo",
                "com",
              ],
              "path": Array [
                "delay",
                "{{x_retry_after}}",
              ],
              "protocol": "https",
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"poller\\",\\"lro_item_name\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "3l45xk",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "
try {
    if (pm.response.code === 202) {
        postman.setNextRequest(\\"_createStorageAccount1_delay\\");
        if (pm.response.headers.has(\\"Retry-After\\")) {
            pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
        }
    } else if (pm.response.size().body > 0) {
        const terminalStatus = [\\"Succeeded\\", \\"Failed\\", \\"Canceled\\"];
        const json = pm.response.json();
        if (json.status !== undefined && terminalStatus.indexOf(json.status) === -1) {
            postman.setNextRequest(\\"_createStorageAccount1_delay\\")
            if (pm.response.headers.has(\\"Retry-After\\")) {
                pm.variables.set(\\"x_retry_after\\", pm.response.headers.get(\\"Retry-After\\"));
            }
        }
    }
} catch (err) {
  console.error(err);
}
",
                ],
                "id": "1ueh28",
                "type": "text/javascript",
              },
            },
          ],
          "id": "vov58h",
          "name": "_createStorageAccount1_poller",
          "request": Object {
            "method": "GET",
            "url": Object {
              "host": Array [
                "{{x_polling_url}}",
              ],
              "query": Array [],
              "variable": Array [],
            },
          },
          "response": Array [],
        },
        Object {
          "description": "{\\"type\\":\\"finalGet\\",\\"lro_item_name\\":\\"createStorageAccount1\\",\\"step\\":\\"createStorageAccount1\\"}",
          "event": Array [
            Object {
              "id": "6w00ic",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response status code assertion.\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "m388ep",
                "type": "text/javascript",
              },
            },
          ],
          "id": "3q0yb6",
          "name": "_createStorageAccount1_final_get",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "GET",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourceGroups",
                ":resourceGroupName",
                "providers",
                "Microsoft.Storage",
                "storageAccounts",
                ":accountName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2021-08-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName_encoded}}",
                },
                Object {
                  "key": "accountName",
                  "type": "any",
                  "value": "sto131918",
                },
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId_encoded}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "StorageBasicExample",
    },
    Object {
      "event": Array [],
      "id": "un6yyw",
      "item": Array [
        Object {
          "event": Array [
            Object {
              "id": "igg58r",
              "listen": "test",
              "script": Object {
                "exec": Array [
                  "pm.test(\\"response code should be 2xx\\", function() {",
                  "pm.response.to.be.success;",
                  "});",
                ],
                "id": "zfkej6",
                "type": "text/javascript",
              },
            },
          ],
          "id": "rxgyxc",
          "name": "deleteResourceGroup",
          "request": Object {
            "header": Array [
              Object {
                "key": "Content-Type",
                "value": "application/json",
              },
            ],
            "method": "DELETE",
            "url": Object {
              "host": Array [
                "https://management",
                "azure",
                "com",
              ],
              "path": Array [
                "subscriptions",
                ":subscriptionId",
                "resourcegroups",
                ":resourceGroupName",
              ],
              "query": Array [
                Object {
                  "key": "api-version",
                  "value": "2020-06-01",
                },
              ],
              "variable": Array [
                Object {
                  "key": "subscriptionId",
                  "type": "any",
                  "value": "{{subscriptionId}}",
                },
                Object {
                  "key": "resourceGroupName",
                  "type": "any",
                  "value": "{{resourceGroupName}}",
                },
              ],
            },
          },
          "response": Array [],
        },
      ],
      "name": "__CleanUp__",
    },
  ],
  "variable": Array [
    Object {
      "key": "subscriptionId",
      "type": "any",
    },
    Object {
      "key": "resourceGroupName",
      "type": "any",
    },
    Object {
      "key": "location",
      "type": "any",
    },
    Object {
      "key": "client_id",
      "type": "any",
    },
    Object {
      "key": "client_secret",
      "type": "any",
    },
    Object {
      "key": "tenantId",
      "type": "any",
    },
    Object {
      "key": "x_enable_auth",
      "type": "any",
      "value": "true",
    },
  ],
}
`;
