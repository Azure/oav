/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ResourceManagementClient } from "../resourceManagementClient";
import {
  ProviderResourceTypesListOptionalParams,
  ProviderResourceTypesListResponse
} from "../models";

/**
 * Class representing a ProviderResourceTypes.
 */
export class ProviderResourceTypes {
  private readonly client: ResourceManagementClient;

  /**
   * Initialize a new instance of the class ProviderResourceTypes class.
   * @param client Reference to the service client
   */
  constructor(client: ResourceManagementClient) {
    this.client = client;
  }

  /**
   * List the resource types for a specified resource provider.
   * @param resourceProviderNamespace The namespace of the resource provider.
   * @param options The options parameters.
   */
  list(
    resourceProviderNamespace: string,
    options?: ProviderResourceTypesListOptionalParams
  ): Promise<ProviderResourceTypesListResponse> {
    const operationArguments: coreHttp.OperationArguments = {
      resourceProviderNamespace,
      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})
    };
    return this.client.sendOperationRequest(
      operationArguments,
      listOperationSpec
    ) as Promise<ProviderResourceTypesListResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProviderResourceTypeListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.expand],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceProviderNamespace
  ],
  headerParameters: [Parameters.accept],
  serializer
};
